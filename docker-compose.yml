version: "3.9"

secrets:
  GAR_TOKEN:
    environment: "GAR_TOKEN"

services:

  redis:
    image: redis:alpine
    container_name: mono-redis
    restart: always
    ports:
    - "127.0.0.1:6379:6379"
    expose:
    - "6379"
    volumes:
    - mono-redis:/var/lib/redis/
    profiles:
    - test
    - storage
    - backend
    - all

  mysql:
    build:
      context: api/schemas
      dockerfile: Dockerfile
    container_name: mono-mysql
    platform: linux/amd64
    command:
    - "mysqld"
    - "--character-set-server"
    - "utf8mb4"
    - "--collation-server"
    - "utf8mb4_unicode_ci"
    - "--group-concat-max-len"
    - "655360"
    - "--sql_mode"
    - "NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
    restart: always
    volumes:
    - mono-mysql:/var/lib/mysql
    - ./api/schemas/:/docker-entrypoint-initdb.d
    ports:
    - "127.0.0.1:3306:3306"
    expose:
    - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: "%"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      timeout: 20s
      retries: 10
    profiles:
    - test
    - storage
    - backend
    - all

  api:
    container_name: mono-api
    extends:
      file: compose.dev.yaml
      service: dev
    command: ["python", "-m", "application_dev"]
    ports:
      - "127.0.0.1:8080:5000"
      - "127.0.0.1:5678:5000" # for remote debuggers
    depends_on: &depends_on
      alembic:
        condition: service_started
      mysql:
        condition: service_healthy
    profiles:
    - test
    - backend
    - all

  alembic:
    container_name: mono-alembic
    extends:
      file: compose.dev.yaml
      service: dev
    command: ["python", "-m", "alembic", "upgrade", "heads" ]
    depends_on:
      mysql:
        condition: service_healthy
    restart: on-failure:3
    profiles:
    - backend
    - all

  admin:
    container_name: mono-admin
    extends:
      file: compose.dev.yaml
      service: dev
    command: ["python", "-m", "admin.app"]
    depends_on: *depends_on
    restart: on-failure:2 # initial startup sometimes fails because needs alembic to finish migrating
    ports:
    - "127.0.0.1:8081:8888"
    profiles:
    - backend
    - all

  data-admin:
    container_name: mono-data-admin
    extends:
      file: compose.dev.yaml
      service: dev
    command: ["python", "-m", "data_admin.app"]
    depends_on: *depends_on
    ports:
      - "127.0.0.1:8082:8888"
    profiles:
    - backend
    - all

  web:
    container_name: mono-web
    platform: linux/amd64
    build:
      context: www
      dockerfile: Dockerfile
    ports:
    - "127.0.0.1:8084:80"
    volumes:
    - ./www/static:/static
    stdin_open: true
    tty: true
    depends_on:
    - api
    profiles:
    - all

  pubsub:
    # https://console.cloud.google.com/gcr/images/google.com:cloudsdktool/GLOBAL/cloud-sdk?gcrImageListsize=30
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:339.0.0-emulators
    container_name: mono-pubsub
    ports:
    - "127.0.0.1:8085:8085"
    entrypoint: gcloud beta emulators pubsub start --project=local-dev --host-port=0.0.0.0:8085
    profiles:
    - storage
    - backend
    - all

  dd-agent:
    env_file:
    - .env
    image: datadog/agent
    container_name: mono-dd-agent
    expose:
    - "8126"
    profiles:
    - backend
    - all

volumes:
  mono-mysql:
  mono-redis:

networks:
  maven_default:
    external: true