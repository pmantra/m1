FORMAT: 1A
HOST: https://www.mavenclinic.com/api/v1

# Maven Clinic V1 API
The Maven Clinic API is the data storage and user management interface for The Maven Clinic.

ALL requests except for internal metadata, subscription plans, user creation and password reset require an *API-KEY* header (it's not case-sensitive) that contains a valid API Key--prepended with a TTL--for a Maven Clinic user. All requests must be transmitted over HTTPS.

API requests made directly during local development require an *X-Maven-User-Id* header containing a valid user id, and must be transmitted over HTTP.


# Group Internal Data
This provides app-level data for the frontends that is needed to initialize all the functionality.

## Internal Metadata [/_/metadata/]

### Get Internal Metadata [GET]

+ Response 200 (application/json)

    + Body

            {
              "messaging_member_character_limit": 4096,
              "platform_data": {
                "ios": {
                  "version": "1.2.0"
                }
              },
              "stripe_publishable_key": "pk_test_134u9q8fqofa",
              "tokbox_api_key": "o8ahf9a89fnui",
              "ziggeo_account_id": "e7f2538976d49815ede1ac4d3c1cdfbb",
              "default_college_vertical_group": "college",
              "asset_content_length_limit": 52428800,
              "recaptcha_site_key": "6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI",
              "launchdarkly_mobile_key": "mob-key-abc123",
              "launchdarkly_client_side_id": "client-side-id-abc123",
            }


## Internal Vendor Metadata [/_/metadata/vendor]
Note: You must be logged in to access this endpoint.

### Get Vendor Metadata [GET]

+ Response 200 (application/json)

    + Body

            {
                "braze": {
                  "ios_api_key": "be78ca61-b668-453f-a829-59481fca9a5a",
                  "ios_mpractice_api_key": "be78ca61-b668-453f-a829-59481fca9a5a",
                  "ios_sdk_url": "sdk.iad-02.braze.com"
                }
            }


## Country Metadata [/_/geography]
Standard information about countries from the pycountry library.

### Get Country Metadata [GET]

+ Response 200 (application/json)

    + Body

            [
                 {
                     "alpha_2": "AW",
                     "alpha_3": "ABW",
                     "name": "Aruba",
                     "numeric": "533"
                 },
                  {
                      "alpha_3": "TWN",
                      "common_name": "Taiwan",
                      "name": "Taiwan, Province of China",
                      "numeric": 158,
                      "alpha_2": "TW",
                      "official_name": "Taiwan, Province of China"
                  },
                 {
                     "alpha_2": "AO",
                     "alpha_3": "AGO",
                     "name": "Angola",
                     "numeric": "024",
                     "official_name": "Republic of Angola",
                     "common_name": ""
                 },
                 {
                     "alpha_2": "AI",
                     "alpha_3": "AIA",
                     "name": "Anguilla",
                     "numeric": "660"
                 },
                 ...
            ]


## Subdivision Metadata [/_/geography/{country_code}]
Standard information about the sub divisions of countries be it states, province, or otherwise.

+ Parameters
    + `country_code`: `US` (string) - The alpha_2 country code.

### Get Subdivision Metadata [GET]

+ Response 200 (application/json)

    + Body

            [
                {"subdivision_code": "US-AK", "abbreviation": "AK", "name": "Alaska"},
                {"subdivision_code": "US-AL", "abbreviation": "AL", "name": "Alabama"},
                {"subdivision_code": "US-AR", "abbreviation": "AR", "name": "Arkansas"},
                ...
            ]

## Vertical Groupings [/_/vertical_groupings/]

### Get Vertical Groupings Data [GET]

+ Response 200 (application/json)

    + Body

            {
                "my-health": [{"id": 1, "name": "Doula", "pluralized_display_name": "Doulas"}],
                "pregnancy-baby": [{"id": 2, "name": "Midwife", "pluralized_display_name": "Midwives"}]
            }


## Verticals [/verticals/]

### Get Verticals Data [GET]

+ Response 200 (application/json)

    + Body

            [{"id": 1, "name": "Doula", "pluralized_display_name": "Doulas", "can_prescribe": false},
             {"id": 2, "name": "Midwife", "pluralized_display_name": "Midwives", "can_prescribe": false}]


## Password Strength Score [/_/password_strength_score/]

### Retrieve Password Strength Score [POST]

+ Request (application/json)

        {
            "password": "foobar"
        }

+ Response 200 (application/json)

    + Body

            {
              "feedback": [
                "Add another word or two. Uncommon words are better.",
                "This is a very common password."
              ],
              "score": 2.961421094066448,
              "password_strength_score": 1,
              "password_strength_ok": False,
              "password_length": 6
            }


# Agreements

Maven maintains versioned agreements with both members and practitioners.

## Agreement by name [/_/agreements/agreement_name{?version}]

+ Parameters
  + version (optional, integer) ... Allow clients to retrieve specific versions. If no version is provided, the latest agreement will be returned.

### Get Agreements [GET]

The `agreement_name` currently has three enumerations: `service`, `privacy`, & `terms`

`/_/agreements/service?version=2`

+ Response 200 (application/json)

    + Body

            {
              "name": "service",
              "display_name": "Practitioner Service Agreement",
              "agreement": <html>agreement html</html>,
              "version": 2,
            }

## Accept Agreements [/_/agreements]

### Accept Agreements [POST]

A user can accept to an agreement or multiple agreements (note that it must always be sent in an array format under the `agreements` field name).

Accepts an array of objects comprised of a `name` and `version`.

The `name` field must match the AgreementName enumerations: `privacy`, `service`, & `terms`

+ Request (application/json)

    + Body

        {

          agreements: [
            {
              "name": "privacy",
              "version": 2
            },
            {
              "name": "terms",
              "version": 2
            }
          ]
        }


## Pending Agreements [/agreements/pending]

### Pending Agreements [GET]

Returns lists of user and organization scoped agreements that are pending for the current user

+ Response 200 (application/json)

            {
                "user": [
                    {
                        "name": "terms",
                        "display_name": "Terms of Use",
                        "version": 3,
                        "optional": false,
                    },
                    {
                        "name": "privacy",
                        "display_name": "Privacy Policy",
                        "version": 3,
                        "optional": false,
                    },
                ],
                "organization": [
                    {
                        "name": "Microsoft",
                        "display_name": "Microsoft Employee Consent Form",
                        "version": 3,
                        "optional": false,
                    }
                ]
            }


## Subscription Agreements [/_/agreements/subscription/{version}/]

This endpoint is deprecated in favor of `/_/agreements/`

+ Parameters
    + `version`: `0` (integer) - Send `0` as the version to get the latest agreement, or a positive integer for a specific version.

### Get Subscription Agreements Data [GET]

+ Response 200 (application/json)

    + Body

            {
                "agreement": "<body>foo</body>"
            }




# Group Users

## Me [/me{?include_profile}]

The **Me API** allows you to get, your own user without knowing your ID. It returns the same data as the [User](#users-user) API.

+ Parameters
    + include_profile (optional, boolean) ... this is a flag to indicate if we should include profile information in each response
        + Default: false

### Fetch Your Own User [GET]

+ Response 200 (application/json)

            {
                "first_name": "Jane",
                "middle_name": "J",
                "last_name": "Doe",
                "test_group": "a",
                "username": "Jane29785",
                "email": "jane@example.com",
                "image_id": 1,
                "esp_id": "2421b7a1-50cb-46ff-9fff-6f0bf3b6f818",
                "organization": {
                    "name": "Foo Bar Inc",
                    "vertical_group_version": "enterprise1",
                    "bms_enabled": true
                },
                "subscription_plans": [
                    {
                        "cancelled_at": "2016-06-01T16:19:13",
                        "api_id": "f77fddcc-f8cc-4e3d-874c-6d13e0df1b93",
                        "plan": {
                            "minimum_segments": 2,
                            "active": true,
                            "id": 1,
                            "is_recurring": true,
                            "price_per_segment": "125.00",
                            "segment_days": 30
                        },
                        "started_at": null,
                        "first_cancellation_date": null,
                        "total_segments": 0,
                        "is_claimed": null,
                        "plan_payer": {
                            "email_confirmed": true,
                            "email_address": "1@mavenclinic.com"
                        }
                    }
                ],
                "profiles": {
                    "practitioner": {
                        "certified_states": [
                            "NY"
                        ],
                        "years_experience": 12,
                        "certifications": [
                            "RN"
                        ],
                        "categories": [
                            "breastfeeding",
                            "digestion"
                        ],
                        "cancellation_policy": "strict",
                        "agreements": {
                            "subscription": true
                        },
                        "can_prescribe": true,
                        "is_cx": false,
                        "can_member_interact": true
                    },
                    "member": {
                        "state": "NY",
                        "tel_number": "tel:+1-913-476-8475"
                    }
                },
                "onboarding_state": "user_created",
                "pending_agreements":  [
                    {
                      "name": "terms",
                      "display_name": "Terms of Use",
                      "version": 3
                    },
                    {
                      "name": "privacy",
                      "display_name": "Privacy Policy",
                      "version": 3
                    },
                ],
                "unclaimed_invite": {
                    "invite_id": "b3ee74fa-a6e1-4bd9-8a20-80de5e83806a",
                    "type": "FILELESS_EMPLOYEE",
                    "email": "first@mavenclinic.com"
                },
                "wallet": {
                    "eligible":
                        [
                            {
                                "wallet_id": null,
                                "organization_setting_id": "1",
                                "survey_url": "https://www.surveymonkey.com/something/"
                                "state": null,
                                "benefit_overview_resource": {
                                    "url": "https://resource.url",
                                    "title": "Organization Maven Wallet Reimbursement Manual"
                                },
                                "benefit_faq_resource": {
                                    "url": "https://resource.url",
                                    "title": "Organization Maven Wallet FAQ"
                                }
                            }
                        ],
                    "enrolled":
                        [
                            {
                                "wallet_id": "1",
                                "state": "PENDING",
                                "channel_id": null,
                                "benefit_overview_resource": null,
                                "benefit_faq_resource": {
                                    "url": "https://resource.url",
                                    "title": "Organization Maven Wallet FAQ"
                                }
                            }
                        ]
                    }
            }

## Current User [/users/me]

The **User API** returns basic information about the authenticated user. It is effectively a slimmed down v2 of /me.

### Get Current User [GET]

+ Response 200 (application/json)

            {
                "id": 123123,
                "first_name": "Jane",
                "middle_name": "J",
                "last_name": "Doe",
                "email": "jane@example.com",
                "name": "Jane Doe",
                "username": "jane.doe"
                "date_of_birth": "2000-01-01",
                "role": "member",
                "onboarding_state": "user_created",
                "esp_id": "09e9e34b-73dd-42cf-9fed-ca59d8442b09",
                "encoded_id": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDYyMDg0NTUsImludHZhbCI6ODM5NjA4LCJzY29wZSI6InVzZXJfaWQifQ.riGN24qzGeLn2kRky20w3N9X3JDyAHV09xiOsVsE1xM",
                "avatar_url": "https://img-res.mavenclinic.com/qk0QbQkDcrq4jbtBvx1WLuROe3s=/500x500/smart/https://storage.googleapis.com/maven-dev-images/95038a62-9da6-4c5a-9108-7e920aeebfaa",
                "image_id": 123123,
                "image_url": "https://img-res.mavenclinic.com/qk0QbQkDcrq4jbtBvx1WLuROe3s=/500x500/smart/https://storage.googleapis.com/maven-dev-images/95038a62-9da6-4c5a-9108-7e920aeebfaa",
            }

## LaunchDarkly Context [/launchdarkly_context]

The **LaunchDarkly Context API** allows you to get the context data for the authenticated user necessary to evaluate LaunchDarkly feature flags. The response schema of this endpoint will conform to the LaunchDarkly-native representation of a [Multi-context](https://docs.launchdarkly.com/home/contexts/multi-contexts#multi-contexts).

### Fetch Your Own LaunchDarkly Contexts [GET]

+ Response 200 (application/json)

            {
                "kind": "multi",
                "user": {
                    "key": "ecf6d1ed-53fd-4f3f-b54c-d4e0a8884e46",
                    "name": "janedoe1337",
                    "email": "jane@example.com",
                    "roles": ["member"],
                    "activeTracks": ["pregnancy"],
                    "_meta": {
                        "privateAttributes": [
                            "name",
                            "email",
                            "roles",
                            "activeTracks"
                        ]
                    }
                }
            }


## Users [/users]

### Add a User [POST]

A user can be added. "source" will provide a different welcome flow if it is a recognized value, for example "ios" or "web". install_campaign is used for auto-application of referral codes, if present. install_source and install_content will be recorded (along with install_campaign) in order to attribute the registration to a particular ad campaign for that user. These 4 fields are all optional...

If the user explicitly consensts to agreements, pass `"agreements_accepted": true` to have the backend accept all the latest member agreements.

+ Request (application/json)

        {
            "first_name": "Jane",
            "middle_name": "J",
            "last_name": "Doe",
            "username": "Jane29785",
            "email": "jane@example.com",
            "password": "password :)",
            "source": "ios",
            "install_source": "Facebook Ads",
            "install_campaign": "Get users",
            "install_content": "maven is awesome 1",
            "plan_invite_id": "some_hash",
            "referral_code": "foobar",
            "agreements_accepted": true
        }

+ Response 200 (application/json)

            {
                "first_name": "Jane",
                "middle_name": "J",
                "last_name": "Doe",
                "username": "Jane29785",
                "email": "jane@example.com",
                "image_id": null
            }


## User [/users/{user_id}/{?include_profile}]

The **User API** allows you to get, edit, and delete users. It also allows you fetch access tokens to manage user access to other API resources.

+ Parameters
    + user_id (number) - ID of the user

### Fetch Your Own User (Including Profile) [GET]

+ Parameters
    + include_profile (optional, boolean) ... this is a flag to indicate if we should include profile information in each response
        + Default: false


+ Response 200 (application/json)

            {
              "first_name": "Jane",
              "middle_name": "J",
              "last_name": "Doe",
              "username": "Jane29785",
              "email": "jane@example.com",
              "image_id": 1,
              "organization": {
                "name": "Foo Bar Inc",
                "vertical_group_version": "enterprise1",
                "bms_enabled": true
              },
              "subscription_plans": [
                {
                  "cancelled_at": "2016-06-01T16:19:13",
                  "api_id": "f77fddcc-f8cc-4e3d-874c-6d13e0df1b93",
                  "plan": {
                    "minimum_segments": 2,
                    "active": true,
                    "id": 1,
                    "is_recurring": true,
                    "price_per_segment": "125.00",
                    "segment_days": 30
                  },
                  "started_at": null,
                  "first_cancellation_date": null,
                  "total_segments": 0,
                  "is_claimed": null,
                  "plan_payer": {
                    "email_confirmed": true,
                    "email_address": "1@mavenclinic.com"
                  }
                }
              ],
              "profiles": {
                "practitioner": {
                  "certified_states": [
                    "NY"
                  ],
                  "years_experience": 12,
                  "certifications": [
                    "RN"
                  ],
                  "categories": [
                    "breastfeeding",
                    "digestion"
                  ],
                  "cancellation_policy": "strict",
                  "agreements": {
                    "subscription": true
                  },
                  "can_prescribe": true,
                  "is_cx": false,
                  "can_member_interact": true
                },
                "member": {
                  "state": "NY",
                  "tel_number": "9134768475"
                }
              }
            }

### Fetch Your Own User (Generic Enterprise User) [GET]
A "generic" enterprise user has the "generic" module in their structured programs.

+ Response 200 (application/json)

            {
                "first_name": "Jane",
                "middle_name": "J",
                "last_name": "Doe",
                "test_group": "a",
                "username": "Jane29785",
                "email": "jane@example.com",
                "image_id": 1,
                "organization": null,
                "subscription_plans": [],
                "profiles": {
                    "practitioner": {},
                    "member": {
                        "state": "NY",
                        "tel_number": "tel:+1-913-476-8475"
                    }
                }
            }

### Fetch Your Own User (Pending Validation Enterprise User) [GET]
A pending verification/activation enterprise user has a pending type in their structured programs.

+ Response 200 (application/json)

            {
                "first_name": "Jane",
                "middle_name": "J",
                "last_name": "Doe",
                "test_group": "a",
                "username": "Jane29785",
                "email": "jane@example.com",
                "image_id": 1,
                "organization": null,
                "subscription_plans": [],
                "profiles": {
                    "practitioner": {},
                    "member": {
                        "state": "NY",
                        "tel_number": "tel:+1-913-476-8475"
                    }
                }
            }

### Edit a User (Update name, username, image_id, and email) [PUT]

+ Request (application/json)

        {
            "first_name": "Janey",
            "middle_name": "J",
            "last_name": "Doe",
            "username": "Jane29785",
            "image_id": 1,
            "email": "jane@example.com"
        }

+ Response 200 (application/json)

            {
                "first_name": "Janey",
                "middle_name": "J",
                "last_name": "Doe",
                "username": "Jane29785",
                "image_id": 1,
                "email": "jane@example.com"
            }

### Edit a User (Change password) [PUT]

+ Request (application/json)

        {
            "first_name": "Janey",
            "middle_name": "J",
            "last_name": "Doe",
            "username": "Jane29785",
            "old_password": "foo",
            "new_password": "bar",
            "email": "jane@example.com"
        }

+ Response 200 (application/json)

            {
                "first_name": "Janey",
                "middle_name": "J",
                "last_name": "Doe",
                "username": "Jane29785",
                "image_id": 1,
                "email": "jane@example.com"
            }

### Delete a User [DELETE]

A user can be deleted by ID if you have the required authorization (in reality, only if it is you :)).

This will DEACTIVATE the user so they cannot login anymore, but will not actually delete the row from the DB.

+ Response 204


## Organization Associations [/users/{user_id}/organizations]

A user can be associated with an organization.

+ Parameters
    + `user_id` - the ID of the user to be associated with an organization.

### Attach a user to an Organization [POST]

#### Arguments

+ **company_email**
+ **work_state**
+ **first_name**
+ **last_name**
+ **date_of_birth** (string, required)
+ **verification_reason**
+ **is_employee** (boolean) - Whether the user for this care program is employed by the
  associated organization or are receiving benefits through an employee of that
  organization.
+ **external_identity** (boolean) - Should be set to true if the user is using SSO to
  verify their eligibility.

`company_email` is required unless all three of `work_state`, `first_name`, and
`last_name` are provided. If the email/dob or
state/name/dob are in our records for an organization, we will attach. If not, we will
return a 400. For now, we will also return a 400 if there is no valid due date or last
child birthday in the users health profile since that happens earlier in signup and is
required.

The value of "verification_reason" should be the desired module name ("pregnancy" is
the default value). If the given module name is supported by the user/organization, we
return a 201 with the "can_invite_partner" boolean as seen in the example response
below. This value is true if the user can invite their partner using the Invite
endpoint. We will also return a 201 response if the given module is NOT supported by
the organization for that user. The user will be put into a pending state with limited
credit.

+ Request (application/json)

        {
            "company_email": "foo@bar.com",
            "work_state": "NY",
            "first_name": "Jen",
            "last_name": "Smith",
            "date_of_birth": "2016-01-01",
            "verification_reason": "partner-pregnant",
            "is_employee": true,
            "external_identity": false
        }

+ Response 201

         {"can_invite_partner": true}


### Attach a fileless user to an Organization [POST]

+ Request (application/json)
    {
        "verification_reason": "pregnancy",
        "fileless": true
    }

+ Response 201
    {"can_invite_partner": false}

## Organization Employee [/users/{user_id}/organization_employee]

This endpoint provide organization employee data, address information currently.

+ Parameters
    + user_id - the ID of the enterprise user.

### Get organization employee [GET]

Retrieve user's organization employee data. Right now it's address information.

+ Response 200 (application/json)

    + Body

            {
                "employee_first_name": "Jane",
                "employee_last_name": "Smith",
                "address_1": "100 Main Street",
                "address_2": null,
                "city": "New York",
                "state": "NY",
                "zip_code": "10013"
            }


## Program Transitions [/users/{user_id}/transitions/programs]
This endpoint provides descriptions of available program transitions, and controls to conduct transitions.

+ Parameters
    + user_id - the ID of the enterprise user.

### Get available transitions [GET]
Retrieve user's available program transitions, where `transitions[*].subject` can be used to initiate the program transition.

+ Response 200 (application/json)

    + Body

            {
                "my_program_display_name": "Maven Pregnancy",
                "transitions": [
                    {
                        "description": "I've gotten pregnant",
                        "subject": {"source": 1, "destination": 2}
                    },
                    {
                        "destination": "I've experienced a loss",
                        "subject": {"source": 1, "destination": 3}
                    }
            }

### Initiate a program transition [POST]
Once a transition is successfully initiated, the transitional dashboard can be retrieved from the prompt endpoint.

+ Request (application/json)

        {
            "source": 1, "destination": 2
        }

+ Response 200

### Cancel a program transition [POST]

+ Request (application/json)

        {
            "source": 1, "destination": "cancel-transition"
        }

+ Response 200

### Commit a program transition [POST]

+ Request (application/json)

        {
            "source": 1, "destination": "commit-transition"
        }

+ Response 200


## Dismissals [/users/{user_id}/dismissals]

+ Parameters
    + user_id - the ID of the enterprise user.

### Record a dismissal [POST]

+ Request (application/json)

        {
            "card_action_id": 1
        }

+ Response 200


## Dashboard [GET /users/{user_id}/dashboard]
Get the current dashboard that you should show to the user. Can only get your own. If a dashboard does not exist, an empty object will be returned.

See https://gitlab.mvnctl.net/maven/maven/wikis/dynamic-dashboards-schema for more detailed info.

+ Parameters
    + user_id - the ID of the enterprise user.

+ Response 200 (application/json)

            {
                "name": "Sample dashboard",
                "version": "123456789",
                "slug": "sample-dashboard",
                "blocks": [
                    {"title": "hi",
                     "cards": [
                        {"type": "foo",
                         "name": "test",
                         "body": [],
                         "actions": []}
                    ]}
                ]
            }


## Prompt [GET /users/{user_id}/prompt]
Get the current prompt that you should show to the user, will be a single overlay or fullscreen card. Can only get your own. If a prompt does not exist, an empty object will be returned.

See https://gitlab.mvnctl.net/maven/maven/wikis/dynamic-dashboards-schema for more detailed info.

+ Parameters
    + user_id - the ID of the enterprise user.

+ Response 200 (application/json)

            {
                "name": "Sample prompt",
                "version": "123456789",
                "slug": "sample-dashboard",
                "blocks": [
                    {"title": "hi",
                     "cards": [
                        {"type": "foo",
                         "style": "overlay",
                         "name": "test",
                         "body": [],
                         "actions": []}
                    ]}
                ]
            }


## Invite [/invite/{id}]

Create partner invites.

### Create an invite [POST]

Create an invite. This will create an invite object and send a partner invite email to the given "email". The supplied "date_of_birth" and "tel_number" will be applied to the user who accepts the invite. "due_date" and "last_child_birthday" are required based on the current user's module (i.e. "partner_pregnant" will require "due_date").

+ Request (application/json)

        {
            "email": "wife@family.com",
            "name": "Jane",
            "date_of_birth": "2016-01-01",
            "tel_number": "tel:+1-913-476-8475"
            "due_date": "2016-01-01",
            "last_child_birthday": "2016-01-01"
        }

+ Response 201

A region can be provided to contextualize a local phone number.

+ Request (application/json)

        {
            "email": "wife@family.com",
            "name": "Jane",
            "date_of_birth": "2016-01-01",
            "tel_number": "2 310 3000",
            "tel_region": "TH",
            "due_date": "2016-01-01",
            "last_child_birthday": "2016-01-01"
        }

+ Response 201

Manage partner invites.

###  Get an invite [GET]

+ Response 200 (application/json)

    + Body

        {
            "name": "Jane",
            "module": {
                "name": "pregnancy"
            }
        }

## Unclaimed invite [/invite/unclaimed]

### Get an unclaimed invite [GET]

+ Request (application/json)

        {
            "invite_id": "b3ee74fa-a6e1-4bd9-8a20-80de5e83806a",
            "type": "FILELESS_EMPLOYEE",
            "email": "first@mavenclinic.com"
        }

## Fileless Invite [/fileless_invite]

Create [fileless invites for mid-market client users][fileless] to allow eligibility verification
by verifying their work email.

[fileless]: https://www.notion.so/mavenclinic/Fileless-Eligibility-15f877eaae3e4d7bb0b062bca83ac486

### Create a fileless invite [POST]

+ Parameters
    + company_email (string) - The company email address to send the fileless invite to.
    + is_employee (bool) - Whether the user requesting an invite is an employee of a Maven client, or a dependent of an employee.

+ Request (application/json)

        {
            "company_email": "first.last@mavenclinic.com",
            "is_employee": true
        }

+ Response 201

## Fileless Invite Claim [/fileless_invite/claim]

### Claim a fileless invite [POST]

+ Request (application/json)

        {
            "invite_id": "cc1eb365-fcb0-4421-8be9-d833132565ae"
        }

+ Response 204

+ Response 400 (application/json)

        {
            "data": null,
            "errors": [
                {
                    "status": 400,
                    "title": "Bad Request",
                    "detail": "Fileless invite already claimed.",
                    "code": "FILELESS_INVITE_ALREADY_CLAIMED",
                    "message": "Fileless invite already claimed."
                }
            ]
        }

+ Response 404 (application/json)

{
    "data": null,
    "errors": [
        {
            "status": 404,
            "title": "Not Found",
            "detail": "Given fileless invite ID is invalid.",
            "code": "FILELESS_INVITE_INVALID",
            "message": "Given fileless invite ID is invalid."
        }
    ]
}

+ Response 410 (application/json)

        {
            "data": null,
            "errors": [
                {
                    "status": 410,
                    "title": "Gone",
                    "detail": "Fileless invite has expired.",
                    "code": "FILELESS_INVITE_EXPIRED",
                    "message": "Fileless invite has expired."
                }
            ]
        }

## Practitioners [/practitioners{?limit,offset,user_ids,order_by,verticals,vertical_ids,specialty_ids,type,can_prescribe,only_free,product_minutes,available_in_next_hours,availability_scope_in_days,needs,need_ids,bypass_availability}]

Practitioners are health professionals on Maven. Use this resource to search and list them based on different criteria.

### Practitioners [GET]

+ Parameters
    + limit: `20` (int, optional)
        The maximum number of practitioners to return for this call.
        The total count of the full result set will be returned in the pagination object, along with the current offset.
        This information can be used to create a paged view.
        + Default: `20`
    + offset: `20` (int, optional)
        The number of results to skip.
        The total count of the full result set will be returned in the pagination object, along with the current limit.
        This information can be used to create a paged view.
        + Default: `0``
    + user_ids: `1,2,3,5` (csv string, optional)
        This is a comma-separated list of practitioner user ids that you want to get info about.
    + order_by: `next_availability` (string, optional)
        The only valid value is currently `next_availability`
        + Default: `next_availability`
    + order_direction: `asc` (string, optional)
        The direction in which the returned practitioners are sorted.
        This works in conjunction with order_by.
        Valid values are `asc` and `desc`
        + Default: `desc`
    + needs: `Stomach Pains,Second Opinions` (csv string, optional)
        Comma-separated need names to filter to
        The values are case-insensitive.
    + need_ids: `1,2,4,8` (csv int, optional)
        Comma-separated need IDs to filter to
    + verticals: `Adoption Coach,nurse practitioner` (csv string, optional)
        Comma-separated vertical names to filter to
        The values are case-insensitive.
    + vertical_ids: `1,2,4,8` (csv int, optional)
        Comma-separated vertical IDs to filter to
    + specialties: `cold and flu,General Health` (csv string, optional)
        Comma-separated specialties to filter to
        The values are case-insensitive.
    + specialty_ids: `1,2,4,16` (csv int, optional)
        Comma-separated specialty IDs to filter to
    + can_prescribe: `true` (bool, optional)
        Only return prescribers if True
        + Default: `false`
    + only_free: `false` (bool, optional)
        Only return practitioners with products costing less than the current user's credit amount
        + Default: `false`
    + bypass_availability: `false` (bool, optional)
        Bypass next_availability check when searching for providers
        + Default: `false`
    + product_minutes: `10` (int, optional)
        Only return practitioners with products with the minute amount specified
        Not including this parameter or setting it to `0` will remove the limitation and this filter will not be applied.
        + Default: `0`
    + available_in_next_hours: `24` (int, optional)
        Only return practitioners with a "valid" availability inside this many hours. Valid as defined here means that it is not in the past and it is not None/Null. This setting does not take into account the show_when_unavailable flag in the practitioner's profile.
        Not including this parameter or setting it to `0` will remove the limitation and this filter will not be applied.
        + Default: `0`
    + availability_scope_in_days: `7` (int, optional)
        <p>
        Only return practitioners that have availabilities in the next given number of days.
        A value of 0 will not place any restriction.
        If the practitioner has `show_when_unavailable` disabled and does not have value set for `next_availability`,
        it will not be shown even with a value of 0.
        This is by design and done at a base class level.
        </p>
        This differs from available_in_next_hours in the following ways:
        1) It includes practitioners that have no future availabilities if the practitioner profile's `shown_when_unavailable` is `True`
        2) It measures days by the number of days, plus the amount of time up to, but not including, midnight of the next day.
        <p>
        This parameter was added for story 80147, which is part of the Booking Flow Parity epic and allows the front end to move off of the booking_flow endpoint.
        See the story for more details: https://app.shortcut.com/maven-clinic/story/80147/
        </p>
        + Default: `0`

+ Response 200 (application/json)

    + Body
        {
            "meta": null,
            "pagination": {
                "limit": 20,
                "order_direction": "desc",
                "total": 1,
                "offset": 0
            },
            "data": [
                {
                    "first_name": "Jane",
                    "last_name": "Doe",
                    "image_id": 1,
                    "profiles": {
                        "practitioner": {
                            "certified_states": [
                                "NY"
                            ],
                            "years_experience": 12,
                            "certifications": [
                                "RN"
                            ],
                            "categories": [
                                "breastfeeding",
                                "digestion"
                            ],
                            "verticals": [
                                "MD"
                            ],
                            "tel_number": "tel:+1-913-476-8475",
                            "cancellation_policy": "strict",
                            "agreements": {
                                "subscription": true
                            },
                            "can_prescribe": true,
                            "can_prescribe_to_member": true,
                            "rating": 4.96,
                            "is_cx": false,
                            "can_member_interact": true
                        }
                    },
                    "next_availability": "2014-6-12T12:12:12Z"
                }
            ]
        }

## Practitioner Profiles [/users/{id}/profiles/practitioner]

Profiles are where we store data like location, education history, specialties, and other data.

+ Parameters
    + id (number) - ID of the practitioner

### Get a Practitioner's Info [GET]

+ Response 200 (application/json)

        {
          "address": {
            "city": "",
            "country": "",
            "state": "",
            "street_address": "",
            "zip_code": ""
          },
          "agreements": {
            "subscription": false
          },
          "awards": "",
          "can_prescribe": false,
          "cancellation_policy": "moderate",
          "categories": [],
          "certifications": [],
          "certified_states": [],
          "education": "",
          "languages": [],
          "messaging_enabled": false,
          "next_availability": "2015-06-24T15:20:00",
          "tel_number": "tel:+1-913-476-8475",
          "tel_region": "US",
          "reference_quote": "",
          "response_time": null,
          "specialties": [],
          "state": null,
          "user_id": 2,
          "rating": 4.89,
          "vertical_objects": [
            {
              "can_prescribe": false,
              "id": 5,
              "name": "Physical Therapist"
            }
          ],
          "verticals": [
            "Physical Therapist"
          ],
          "work_experience": "",
          "years_experience": 0,
          "country": {
            "name": "United Kingdom",
            "abbr": "UK",
            "ext_info_link": "http://google.com/stuff",
            "summary": "blah blah blah..."
          },
          "is_cx": false,
          "can_member_interact": true
        }

### Edit a Practitioner's Info [PUT]

+ Request (application/json)

        {
          "certified_states": [
            "NY"
          ],
          "years_experience": 12,
          "certifications": [
            "RN"
          ],
          "categories": [
            "breastfeeding",
            "digestion"
          ],
          "verticals": [
            "Nurse Practitioner"
          ],
          "tel_number": "9134768475",
          "tel_region": "US",
          "cancellation_policy": "strict",
          "agreements": {
            "subscription": true
          },
          "can_prescribe": true
        }

+ Response 200 (application/json)

    + Body

            {
              "address": {
                "city": "",
                "country": "",
                "state": "",
                "street_address": "",
                "zip_code": ""
              },
              "agreements": {
                "subscription": true
              },
              "awards": "",
              "can_prescribe": true,
              "cancellation_policy": "strict",
              "categories": ["breastfeeding", "digestion"],
              "certifications": ["RN"],
              "certified_states": ["NY"],
              "education": "",
              "languages": [],
              "messaging_enabled": false,
              "next_availability": "2015-06-24T15:20:00",
              "tel_number": "tel:+1-913-476-8475",
              "tel_region": "US",
              "reference_quote": "",
              "response_time": null,
              "specialties": [],
              "state": null,
              "user_id": 2,
              "vertical_objects": [
                {
                  "can_prescribe": true,
                  "id": 5,
                  "name": "Nurse Practitioner"
                }
              ],
              "verticals": [
                "Nurse Practitioner"
              ],
              "work_experience": "",
              "years_experience": 12,
              "is_cx": false,
              "can_member_interact": true
            }


## Current User's Practitioner Profile [/users/profiles/practitioner]

### Get the Current User's Practitioner Info [GET]

+ Response 200 (application/json)

        {
          "address": {
            "city": "",
            "country": "",
            "state": "",
            "street_address": "",
            "zip_code": ""
          },
          "agreements": {
            "subscription": false
          },
          "awards": "",
          "can_prescribe": false,
          "cancellation_policy": "moderate",
          "categories": [],
          "certifications": [],
          "certified_states": [],
          "education": "",
          "languages": [],
          "messaging_enabled": false,
          "next_availability": "2015-06-24T15:20:00",
          "tel_number": "tel:+1-913-476-8475",
          "tel_region": "US",
          "reference_quote": "",
          "response_time": null,
          "specialties": [],
          "state": null,
          "user_id": 2,
          "rating": 4.89,
          "vertical_objects": [
            {
              "can_prescribe": false,
              "id": 5,
              "name": "Physical Therapist"
            }
          ],
          "verticals": [
            "Physical Therapist"
          ],
          "work_experience": "",
          "years_experience": 0,
          "country": {
            "name": "United Kingdom",
            "abbr": "UK",
            "ext_info_link": "http://google.com/stuff",
            "summary": "blah blah blah..."
          },
          "is_cx": false,
          "can_member_interact": true
        }


### Enable Messaging [PUT]

+ Request (application/json)

        {"messaging_enabled": true}

+ Response 200 (application/json)

    + Body

            {
              "address": {
                "city": "",
                "country": "",
                "state": "",
                "street_address": "",
                "zip_code": ""
              },
              "agreements": {
                "subscription": false
              },
              "awards": "",
              "can_prescribe": false,
              "cancellation_policy": "moderate",
              "categories": [],
              "certifications": [],
              "certified_states": [],
              "education": "",
              "is_cx": false,
              "languages": [],
              "messaging_enabled": true,
              "next_availability": "2015-06-24T15:20:00",
              "tel_number": "tel:+1-913-476-8475",
              "tel_region": "US",
              "reference_quote": "",
              "response_time": 24,
              "specialties": [],
              "state": null,
              "user_id": 2,
              "vertical_objects": [
                {
                  "can_prescribe": false,
                  "id": 5,
                  "name": "Physical Therapist"
                }
              ],
              "verticals": [
                "Physical Therapist"
              ],
              "work_experience": "",
              "years_experience": 0,
              "can_member_interact": true
            }


### Disable Messaging [DELETE]

+ Request (application/json)

        {"messaging_enabled": false}

+ Response 200 (application/json)

    + Body

            {
              "address": {
                "city": "",
                "country": "",
                "state": "",
                "street_address": "",
                "zip_code": ""
              },
              "agreements": {
                "subscription": false
              },
              "awards": "",
              "can_prescribe": false,
              "cancellation_policy": "moderate",
              "categories": [],
              "certifications": [],
              "certified_states": [],
              "education": "",
              "is_cx": false,
              "languages": [],
              "messaging_enabled": false,
              "next_availability": "2015-06-24T15:20:00",
              "tel_number": "tel:+1-913-476-8475",
              "tel_region": "US",
              "reference_quote": "",
              "response_time": null,
              "specialties": [],
              "state": null,
              "user_id": 2,
              "vertical_objects": [
                {
                  "can_prescribe": false,
                  "id": 5,
                  "name": "Physical Therapist"
                }
              ],
              "verticals": [
                "Physical Therapist"
              ],
              "work_experience": "",
              "years_experience": 0,
              "can_member_interact": true
            }

### Set Guarantee Response Time [PUT]

+ Request (application/json)

        {"response_time": 12}

+ Response 200 (application/json)

    + Body

            {
              "address": {
                "city": "",
                "country": "",
                "state": "",
                "street_address": "",
                "zip_code": ""
              },
              "agreements": {
                "subscription": false
              },
              "awards": "",
              "can_prescribe": false,
              "cancellation_policy": "moderate",
              "categories": [],
              "certifications": [],
              "certified_states": [],
              "education": "",
              "is_cx": false,
              "languages": [],
              "messaging_enabled": true,
              "next_availability": "2015-06-24T15:20:00",
              "tel_number": "tel:+1-913-476-8475",
              "tel_region": "US",
              "reference_quote": "",
              "response_time": 12,
              "specialties": [],
              "state": null,
              "user_id": 2,
              "vertical_objects": [
                {
                  "can_prescribe": false,
                  "id": 5,
                  "name": "Physical Therapist"
                }
              ],
              "verticals": [
                "Physical Therapist"
              ],
              "work_experience": "",
              "years_experience": 10,
              "can_member_interact": true
            }


## Practitioner Prescription Errors [/prescriptions/errors/{practitioner_id}]

These are refill requests and transmission errors which require the practitioners attention. The counts need to be displayed in our UI, and should be refreshed every 15 mins when the practitioner is in the app/site.

### Get the URL to Enter dosespot and Handle These Errors [GET]

+ Parameters
    + practitioner_id (number) - User ID of the practitioner

+ Response 200 (application/json)

    + Body

            {
                "refill_count": 1,
                "transaction_count": 1,
                "url": "https://dosespot.com/dealwitherrorssurl"
            }


## Practitioner Notes [/users/{id}/notes]

These are post session notes from practitioners with whom the given user has had appointment(s) with previously.

### Get all practitioner notes for the user [GET]

+ Parameters
    + id (number) - User ID with whom the notes are pertaining to

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "scheduled_start": "2015-06-12T21:09:38",
                        "id": 997947650,
                        "post_session": {
                            "notes": "12345",
                            "created_at": "2015-06-12T20:23:00"
                        },
                        "product": {
                            "id": 37,
                            "minutes": 7,
                            "practitioner": {
                                "avatar_url": "https://img-res.mavenclinic.com/qk0QbQkDcrq4jbtBvx1WLuROe3s=/500x500/smart/https://storage.googleapis.com/maven-dev-images/95038a62-9da6-4c5a-9108-7e920aeebfaa",
                                "email": null,
                                "encoded_id": "MS5DeDM5bUEuWGxTRzN1NWVaeUE4azJZRnpZTUhpUWt2cHo0",
                                "test_group": "a",
                                "first_name": "Zach",
                                "id": 1,
                                "image_id": 1,
                                "image_url": "https://img-res.mavenclinic.com/qk0QbQkDcrq4jbtBvx1WLuROe3s=/500x500/smart/https://storage.googleapis.com/maven-dev-images/95038a62-9da6-4c5a-9108-7e920aeebfaa",
                                "last_name": "Zaro",
                                "middle_name": "E",
                                "name": "Zach Zaro",
                                "organization": null,
                                "profiles": {
                                    "member": {},
                                    "practitioner": {
                                        "awards": "None",
                                        "can_prescribe": true,
                                        "cancellation_policy": "moderate",
                                        "categories": [],
                                        "certifications": [],
                                        "certified_states": [],
                                        "education": "",
                                        "is_cx": false,
                                        "languages": [],
                                        "messaging_enabled": true,
                                        "next_availability": null,
                                        "rating": null,
                                        "reference_quote": "",
                                        "response_time": 24,
                                        "specialties": [],
                                        "user_id": 1,
                                        "vertical_objects": [
                                            {
                                                "can_prescribe": false,
                                                "id": 6,
                                                "name": "Physical Therapist"
                                            }
                                        ],
                                        "verticals": [
                                            "Physical Therapist"
                                        ],
                                        "work_experience": "None",
                                        "years_experience": 12,
                                        "can_member_interact": true
                                    }
                                },
                                "role": "practitioner",
                                "subscription_plans": null,
                                "username": "zach"
                            },
                            "price": "25.00"
                        }
                    },
                    {
                        "scheduled_start": "2015-03-12T15:25:31",
                        "id": 997948129,
                        "post_session": {
                            "notes": "2 min and 30 s",
                            "created_at": "2015-03-12T20:23:00"
                        },
                        "product": {
                            "id": 47,
                            "minutes": 10,
                            "practitioner": {
                                "avatar_url": "https://img-res.mavenclinic.com/Wa0-jLWTTxzhJyDF6Gp8hndiYDI=/500x500/smart/https://storage.googleapis.com/maven-dev-images/bb5e10c1-c7eb-4c87-9eb9-7b42febb4499",
                                "email": null,
                                "encoded_id": "NjkuQ3g0QVF3LmEwWUh2LVhIVVo0dWdrOHc5a0o1R0x6SWk2OA",
                                "test_group": "a",
                                "first_name": "Lucy",
                                "id": 69,
                                "image_id": 8,
                                "image_url": "https://img-res.mavenclinic.com/Wa0-jLWTTxzhJyDF6Gp8hndiYDI=/500x500/smart/https://storage.googleapis.com/maven-dev-images/bb5e10c1-c7eb-4c87-9eb9-7b42febb4499",
                                "last_name": "Ricardo",
                                "middle_name": "",
                                "name": "Lucy Ricardo",
                                "organization": null,
                                "profiles": {
                                    "member": {},
                                    "practitioner": {
                                        "awards": "",
                                        "can_prescribe": false,
                                        "cancellation_policy": "moderate",
                                        "categories": [],
                                        "certifications": [
                                            "MSN",
                                            "NP"
                                        ],
                                        "certified_states": [],
                                        "education": "SUNY Albany,Adelphi University",
                                        "is_cx": false,
                                        "languages": [],
                                        "messaging_enabled": true,
                                        "next_availability": null,
                                        "rating": null,
                                        "reference_quote": "",
                                        "response_time": null,
                                        "specialties": [
                                            "Allergies",
                                            "Diabetes",
                                            "Digestive health",
                                            "Emotional well-being"
                                        ],
                                        "user_id": 69,
                                        "vertical_objects": [
                                            {
                                                "can_prescribe": false,
                                                "id": 6,
                                                "name": "Physical Therapist"
                                            }
                                        ],
                                        "verticals": [
                                            "Physical Therapist"
                                        ],
                                        "work_experience": "Grace Family Medical Practice,Flatbush Family Practice",
                                        "years_experience": 17,
                                        "can_member_interact": true
                                    }
                                },
                                "role": "practitioner",
                                "subscription_plans": null,
                                "username": "Students5"
                            },
                            "price": "18.00"
                        }
                    },
                    {
                        "scheduled_start": "2015-03-07T05:33:45",
                        "id": 997948107,
                        "post_session": {
                            "notes": "76 dfg x x sds sd  test teddd",
                            "created_at": "2015-03-07T20:23:00"
                        },
                        "product": {
                            "id": 9,
                            "minutes": 10,
                            "practitioner": {
                                "avatar_url": "https://img-res.mavenclinic.com/rlwf1vejk7v4HMn2YQvif6JHtEw=/500x500/smart/https://storage.googleapis.com/maven-dev-images/9803612d-1cb3-4a43-bacb-5fb27c2c4e80",
                                "email": null,
                                "encoded_id": "MTMuQ3g0QWJRLkZlZl9jTDdVTVdmc3ktUnFIRHZOLUJuaXNOQQ",
                                "test_group": "a",
                                "first_name": "test4",
                                "id": 13,
                                "image_id": 16,
                                "image_url": "https://img-res.mavenclinic.com/rlwf1vejk7v4HMn2YQvif6JHtEw=/500x500/smart/https://storage.googleapis.com/maven-dev-images/9803612d-1cb3-4a43-bacb-5fb27c2c4e80",
                                "last_name": "Midwife",
                                "middle_name": "Gh",
                                "name": "test4 Midwife",
                                "organization": null,
                                "profiles": {
                                    "member": {},
                                    "practitioner": {
                                        "awards": "",
                                        "can_prescribe": true,
                                        "cancellation_policy": "moderate",
                                        "categories": [],
                                        "certifications": [
                                            "ANP",
                                            "BA",
                                            "CAPPA",
                                            "CBS",
                                            "CLC",
                                            "CLS",
                                            "CM",
                                            "CN",
                                            "CNS",
                                            "CPD",
                                            "DNP"
                                        ],
                                        "certified_states": [
                                            "NJ",
                                            "NY"
                                        ],
                                        "education": "",
                                        "is_cx": false,
                                        "languages": [],
                                        "messaging_enabled": true,
                                        "next_availability": "2016-11-14T20:40:00",
                                        "rating": null,
                                        "reference_quote": "Great Stuff",
                                        "response_time": null,
                                        "specialties": [
                                            "Allergies",
                                            "Breastfeeding management",
                                            "Breathing techniques",
                                            "Chronic pain management",
                                            "Disease prevention"
                                        ],
                                        "user_id": 13,
                                        "vertical_objects": [
                                            {
                                                "can_prescribe": true,
                                                "id": 7,
                                                "name": "Nurse Practitioner"
                                            }
                                        ],
                                        "verticals": [
                                            "Nurse Practitioner"
                                        ],
                                        "work_experience": "Loads...",
                                        "years_experience": 98,
                                        "can_member_interact": true
                                    }
                                },
                                "role": "practitioner",
                                "subscription_plans": null,
                                "username": "test4"
                            },
                            "price": "20.00"
                        }
                    }
                ],
                "meta": null,
                "pagination": {
                    "limit": 10,
                    "offset": 0,
                    "order_direction": "desc",
                    "total": 3
                }
            }

## Patient Search [/users/{id}/my_patients{?first_name,last_name,limit,offset}]

+ Parameters
    + id - id of the practitioner with whom the patient search is for.
    + first_name - search patient first name that contains this string
    + last_name - search patient last name that contains this string

This API endpoint provides a way for practitioners to search and find their past and present patients. Patients are ordered by their first name's ascending order.

### Get My Patients [GET]

+ Response 200 (application/json)

    + Body

            {
              "pagination": {
                "total": 1,
                "offset": 0,
                "limit": 10,
                "order_direction": "desc"
              },
              "meta": null,
              "data": [
                {
                  "encoded_id": null,
                  "test_group": "a",
                  "middle_name": "",
                  "email": null,
                  "care_coordinators": [],
                  "username": "",
                  "profiles": {
                    "member": {
                      "color_hex": ""
                    }
                  },
                  "id": 1,
                  "avatar_url": "",
                  "role": "member",
                  "name": "Jane1 Smith1",
                  "subscription_plans": null,
                  "image_url": null,
                  "organization": null,
                  "image_id": 0,
                  "last_name": "Smith1",
                  "first_name": "Jane1",
                  "country": {
                    "name": "United Kingdom",
                    "abbr": "UK",
                    "ext_info_link": "http://google.com/stuff",
                    "summary": "blah blah blah..."
                  }
                }
              ]
            }

## Member Profiles [/users/{id}/profiles/member]

+ Parameters
    + id - id of the user

Member profiles store phone numbers, states and some user specific settings like opt-in for post session notes sharing. Phone numbers will be parsed and normalized according to RFC3966. For phone number region use CLDR two-letter region-codes. For states use the standard 2 letter abbreviations, uppercased.


### Get a Member's Info [GET]

+ Response 200 (application/json)

    + Body

            {
                "address": {
                    "city": "New York",
                    "country": "US",
                    "state": "NY",
                    "street_address": "123 Main st",
                    "zip_code": "10002"
                },
                "tel_number": "tel:+1-510-555-5555",
                "tel_region": "US",
                "state": "NY",
                "color_hex": "#313694;",
                "user_flags": [
                    {
                        "id": 1
                    }, {
                        "id": 2
                    }
                ]
            }

### Edit a Member's Info [PUT]

+ Request (application/json)

        {
            "state": "NJ",
            "tel_number": "9134768475"
            "opted_in_notes_sharing": false,
            "color_hex": "#313694;"
        }

+ Response 200 (application/json)

    + Body

            {
                "state": "NJ",
                "tel_number": "tel:+1-913-476-8475",
                "tel_region": "US",
                "opted_in_notes_sharing": false,
                "color_hex": "#313694;"
            }

## Current User's Member Profile [/users/profiles/member]

### Get the Current User's Member Info [GET]

+ Response 200 (application/json)

    + Body

            {
                "address": {
                    "city": "New York",
                    "country": "US",
                    "state": "NY",
                    "street_address": "123 Main st",
                    "zip_code": "10002"
                },
                "tel_number": "tel:+1-510-555-5555",
                "tel_region": "US",
                "state": "NY",
                "color_hex": "#313694;",
                "user_flags": [
                    {
                        "id": 1
                    }, {
                        "id": 2
                    }
                ]
            }

## API Key [/api_key]

### Get One API Key [POST]

A user's API Key can be acquired using the correct email/password combination.

+ Request (application/json)

        {
            "email": "jane@example.com",
            "password": "badpasssword",
        }


+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "api_key": "72d466d-2cdf-4e5c-b0ea-2ef4f8616651"
            }


### Attribute Device [POST]

Should be called once per app open for a logged in user (or right after login for a non-logged in user).

+ Request (application/json)

        {
            "apple_ifa": "foobar"
        }

+ Response 204


## Password Reset [/users/{email}/password_reset]

+ Parameters
    + email - the email of the user where reset password link is going to be sent to.

### Request Reset Password Link via E-Mail for a User [GET]

If the email address represents a valid user, an email with a link containing a reset password token will be sent to that email address.

+ Response 204

### Change Password [POST]

If the email address represents a valid user, an email with a link containing a reset password token will be sent to that email address.

+ Request

        {
            "token": "lfjdsafsdf",
            "password": "newpasssword"
        }

+ Response 204

## Confirm Email [/users/{email}/email_confirm{?token}]

### Confirm E-Mail address for a User [GET]

A token needs to be sent to us to confirm that the E-Mail address is valid.

+ Parameters
    + email - the email of the user to be confirmed.
    + token (required, str) ... The server-generated token needs to be in the URL

+ Response 204


## User Setup [/users/{id}/setup]

This endpoint is used to set a user’s email and password as the first step in SAML
onboarding on the account set up page.

+ Parameters
    + id - the id of the user

### Set email and password for a User [PUT]

+ Request (application/json)

        {
            "email": "personal@test.com",
            "password": "desired_password"
        }

+ Response 204


## Onboarding State [/users/{id}/onboarding_state]

The **Onboarding State API** allows clients to get or alter the onboarding state of a user

+ Parameters
    + id - the id of the user

### Get the Onboarding State [GET]

+ Response 200 (application/json)

        {
            "onboarding_state": "some_state"
        }

### Add an Onboarding State [POST]

+ Response 201 (application/json)

        {
            "onboarding_state": "new_state"
        }

### Update an Onboarding State [PUT]

+ Request (application/json)

        {
            "onboarding_state": "new_state"
        }

+ Response 200 (application/json)

        {
            "onboarding_state": "new_state"
        }

## User Devices [/users/{id}/devices]

The **User Devices API** allows clients to register new devices for the Maven platform to receive push notifications.

+ Parameters
    + id - the id of the user

### Add a New Device [POST]

+ Request (application/json)

        {'device_token': 'foobarbaz'}

+ Response 201 (application/json)

        {
            'device_token': 'foobarbaz',
            'id': 1
        }


## User Settings [/users/{id}/settings]

The **User Settings API** allows you get information about a user's settings (for example notification preferences). POST and DELETE are not allowed, because each user has one and only one settings object associated with their user account on Maven.

+ Model

    A JSON Representation of a User's Settings.

    + Body

            {
                "user_id": 10,
                "notifications": [{"session_pre_reminder": {"push": {"enabled": true,
                                                                     "time_offset": 15},
                                                            "email": {"enabled": false,
                                                                      "time_offset": null},,
                                                            "SMS": {"enabled": true,
                                                                    "time_offset": 1}}
                                  }],
                "privacy": "BASIC",
            }

### Get User Settings Information [GET]

A user's settings JSON

+ Response 200 (application/json)

    [User Settings][]

### Edit User Settings Information [PUT]

A user's settings JSON

+ Request (application/json)

        {
            "user_id": 10,
            "notifications": [{"session_pre_reminder": {"push": {"enabled": false,
                                                                    "time_offset": 15},
                                                        "email": {"enabled": false,
                                                                    "time_offset": null},,
                                                        "SMS": {"enabled": true,
                                                                "time_offset": 1}}
                                }],
            "privacy": "BASIC",
        }

+ Response 200 (application/json)

    + Body

            {
                "user_id": 10,
                "notifications": [{"session_pre_reminder": {"push": {"enabled": false,
                                                                        "time_offset": 15},
                                                            "email": {"enabled": false,
                                                                        "time_offset": null},,
                                                            "SMS": {"enabled": true,
                                                                    "time_offset": 1}}
                                    }],
                "privacy": "BASIC",
            }


## User Needs Assessments [/users/{user_id}/assessments]

This API endpoint allows retrieving and creating of all needs assessment questionnaires for the given enterprise user.
For more information about assessment templates, please see [Assessments](#assessment)

### Get User Assessment Questions [GET /users/{user_id}/assessments{?type,version,appointment_id}]

+ Parameters
    + user_id (required, number) - User ID
    + type(optional, string) - The type of user assessment, `PREGNANCY` or `POSTPARTUM`.
    + version(optional, string) - The version of the assessment object
    + appointment_id(optional, number) - The associated appointment's ID, obfuscated.
    + assessment_id (optional, number) - The ID of Assessment(assessment template).

+ Response 200 (application/json)

    + Body

            {
              "pagination": {
                "offset": 0,
                "total": 1,
                "limit": 10,
                "order_direction": "desc"
              },
              "meta": null,
              "data": [
                {
                  "answers": [
                    {
                      "id": 18,
                      "body": "1"
                    },
                    {
                      "id": 17,
                      "body": "someday"
                    },
                    {
                      "id": 16,
                      "body": "no"
                    },
                    {
                      "id": 15,
                      "body": {
                        "first_name": "Doc",
                        "last_name": "Who",
                        "email": "test@test.com"
                      }
                    },
                    {
                      "id": 13,
                      "body": "yes"
                    },
                    {
                      "id": 12,
                      "body": "yes"
                    },
                    {
                      "id": 11,
                      "body": "both"
                    },
                    {
                      "id": 9,
                      "body": "yes"
                    },
                    {
                      "id": 8,
                      "body": "2"
                    },
                    {
                      "id": 7,
                      "body": "reasons"
                    },
                    {
                      "id": 5,
                      "body": "yes"
                    },
                    {
                      "id": 4,
                      "body": "c-section"
                    },
                    {
                      "id": 3,
                      "body": "a due day"
                    },
                    {
                      "id": 2,
                      "body": "birth"
                    },
                    {
                      "id": 1,
                      "body": "on a day"
                    }
                  ],
                  "meta": {
                    "completed": false
                  }
                }
              ]
            }


### Submit User Assessment Answers [POST /users/{user_id}/assessments]

Except `user_id`, all other URI parameters specified below should be supplied in the `Assessment Object`'s meta attribute in the POST request payload.
In the response json, ".meta.id" refers to the ID of Needs Assessment object, which is this endpoint all about.

+ Parameters
    + user_id (required, number) - User ID
    + type(optional, string) - The type of user assessment, `PREGNANCY` or `POSTPARTUM`.
    + version(optional, string) - The version of the assessment object
    + appointment_id(optional, number) - The associated obfuscated appointment ID.
    + assessment_id(optional, number) - The ID of Assessment(assessment template).
      Either assessment_id or type & version need to be provided, not both.

+ Request Assessment Object (application/json)

        {
          "answers": [
            {
              "id": 18,
              "body": "1"
            },
            {
              "id": 17,
              "body": "someday"
            },
            {
              "id": 16,
              "body": "no"
            },
            {
              "id": 15,
              "body": {
                "first_name": "Doc",
                "last_name": "Who",
                "email": "test@teset.com"
              }
            },
            {
              "id": 5,
              "body": "yes"
            },
            {
              "id": 4,
              "body": "c-section"
            },
            {
              "id": 3,
              "body": "a due day"
            },
            {
              "id": 2,
              "body": "birth"
            },
            {
              "id": 1,
              "body": "on a day"
            }
          ],
          "meta": {
            "completed": true,
            "type": "PREGNANCY",
            "version": "1",
            "assessment_id": 1,
            "appointment_id": "997948328"
          }
        }


+ Response 201 (application/json)

    + Body

        {
          "answers": [
            {
              "id": 18,
              "body": "1"
            },
            {
              "id": 17,
              "body": "someday"
            },
            {
              "id": 16,
              "body": "no"
            },
            {
              "id": 15,
              "body": {
                "first_name": "Doc",
                "last_name": "Who",
                "email": "test@teset.com"
              }
            },
            {
              "id": 5,
              "body": "yes"
            },
            {
              "id": 4,
              "body": "c-section"
            },
            {
              "id": 3,
              "body": "a due day"
            },
            {
              "id": 2,
              "body": "birth"
            },
            {
              "id": 1,
              "body": "on a day"
            }
          ],
          "meta": {
            "completed": true,
            "type": "PREGNANCY",
            "version": "1",
            "assessment_id": 1,
            "appointment_id": "997948328"
          }
        }


## User Needs Assessment [/users/{user_id}/assessments/{needs_assessment_id}]

This API endpoint allow an existing needs assessment's answers for the given enterprise user to be fetched or modified.

+ Parameters
    + user_id (required, number) - User ID
    + needs_assessment_id (required, number) - The ID for the need assessment.

### Fetch a Needs Assessment by ID [GET]

+ Response 200

    + Body

            {
              "answers": [
                {
                  "id": 18,
                  "body": "1"
                },
                {
                  "id": 17,
                  "body": "someday"
                },
                {
                  "id": 16,
                  "body": "no"
                },
                {
                  "id": 15,
                  "body": {
                    "first_name": "Doc",
                    "last_name": "Who",
                    "email": "test@teset.com"
                  }
                },
                {
                  "id": 5,
                  "body": "yes"
                },
                {
                  "id": 4,
                  "body": "c-section"
                },
                {
                  "id": 3,
                  "body": "a due day"
                },
                {
                  "id": 2,
                  "body": "birth"
                },
                {
                  "id": 1,
                  "body": "on a day"
                }
              ],
              "meta": {
                "completed": false,
                "type": "POSTPARTUM",
                "version": "1"
              }
            }

### Modify a Needs Assessment [PUT]

+ Request Assessment Object (application/json)

        {
          "answers": [
            {
              "id": 18,
              "body": "1"
            },
            {
              "id": 17,
              "body": "someday"
            },
            {
              "id": 16,
              "body": "no"
            },
            {
              "id": 15,
              "body": {
                "first_name": "Doc",
                "last_name": "Who",
                "email": "test@teset.com"
              }
            },
            {
              "id": 5,
              "body": "yes"
            },
            {
              "id": 4,
              "body": "c-section"
            },
            {
              "id": 3,
              "body": "a due day"
            },
            {
              "id": 2,
              "body": "birth"
            },
            {
              "id": 1,
              "body": "on a day"
            }
          ],
          "meta": {
            "completed": false,
            "type": "POSTPARTUM",
            "version": "1"
          }
        }


+ Response 200

    + Body

            {
              "answers": [
                {
                  "id": 18,
                  "body": "1"
                },
                {
                  "id": 17,
                  "body": "someday"
                },
                {
                  "id": 16,
                  "body": "no"
                },
                {
                  "id": 15,
                  "body": {
                    "first_name": "Doc",
                    "last_name": "Who",
                    "email": "test@teset.com"
                  }
                },
                {
                  "id": 5,
                  "body": "yes"
                },
                {
                  "id": 4,
                  "body": "c-section"
                },
                {
                  "id": 3,
                  "body": "a due day"
                },
                {
                  "id": 2,
                  "body": "birth"
                },
                {
                  "id": 1,
                  "body": "on a day"
                }
              ],
              "meta": {
                "completed": false,
                "type": "POSTPARTUM",
                "version": "1"
              }
            }

## Assessment Answers [/users/{user_id}/assessments/assessment_answers]

### Get Assessment Answers [GET /users/{user_id}/assessments/assessment_answers?assessment_lifecycle_type={type}]

This API endpoint retrieves a user's latest answers to an assessment of the given assessment lifecycle type, but in an exported format (the same format used when exporting them to BigQuery).  If the assessment does not have export logic defined in the `quiz_body`, it will return an empty array.

+ Parameters
    + user_id (required, number) - User ID
    + assessment_id (optional, number) - Assessment ID
    + assessment_lifecycle_name (optional, string) - The `type` of the assessment lifecycle. If no type is given, the response will return all answers for all types.

### Fetch a Needs Assessment by ID [GET]

+ Response 200

    + Body

            [
              {
                  "assessment_id": 1,
                  "assessment_lifecycle_type": "PREGNANCY_ONBOARDING",
                  "question_name": "bmi_flag",
                  "question_id": 1,
                  "raw_answer": {"height": 0, "weight": 0}
                  "body": false,
                  "modified_at": 2020-12-01T05:00:01,
              },
              {
                  "assessment_id": 1,
                  "assessment_lifecycle_type": "PREGNANCY_ONBOARDING",
                  "question_name": "birth_preference",
                  "question_id": 2,
                  "raw_answer": "c-section",
                  "body": "c-section"
                  "modified_at": 2020-12-01T05:00:01,
              }
            ]


## User File Attachments [/users/{id}/files{?type,appointment_id}]

This endpoint allows appointment file attachments for a given user can be uploaded and retrieved later on.
Except `id`, all the rest of the URI parameters are to be encoded in multi-part form data in the POST payload as shown in the request below.

+ Parameters
    + id (required, number) - User ID. For `BIRTH_PLAN` appointments, this is the member id.
    + type (optional, string) - Type of the attachment, `BIRTH_PLAN` and so on.
    + appointment_id (optional, number) - The id of the appointment where the file is attached to.

### Upload a File [POST /users/{id}/files]

+ Request (multipart/form-data)

        Content-Type: multipart/form-data; boundary=45eab7247d134ca382c9b13022a3ee9c

        --45eab7247d134ca382c9b13022a3ee9c
        Content-Disposition: form-data; name="type"

        BIRTH_PLAN
        --45eab7247d134ca382c9b13022a3ee9c
        Content-Disposition: form-data; name="appointment_id"

        997948358
        --45eab7247d134ca382c9b13022a3ee9c
        Content-Disposition: form-data; name="BIRTH_PLAN"; filename="birth_plan.pdf"

        +-----------------------------------------+
        | NOTE: binary data not shown in terminal |
        +-----------------------------------------+
        ----45eab7247d134ca382c9b13022a3ee9c--

+ Response 201

    + Body

            {
                "id": 1,
                "type": "BIRTH_PLAN",
                "content_type": "application/pdf",
                "signed_url": "https://storage.googleapis.com/cdd7f711-70c5-48bd-b607-c130541ffc60/d22c51ce-181d-4879-a128-71732b931542?GoogleAccessId=service_account@maven.com&Expires=1483565640&Signature=%3C%B2%F9mb%AD%C0%98c%86%3A3%97%F6I%D9%0AsH%3F8%24%EF%CC%DD%21"
            }

### Retrieve Files [GET]

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "content_type": "application/pdf",
                        "id": 4,
                        "signed_url": "https://storage.googleapis.com/test-bp-aaaa-bbbb-cc-dddddd/9eb1c70b-38c2-4131-8732-ff40ae5832e6?GoogleAccessId=ye-dev-cloud-storage%40maven-clinic-ye-dev.iam.gserviceaccount.com&Expires=1484331631&response-content-type=application%2Fpdf&response-content-disposition=attachment%3B+filename%3DMAVEN_BIRTH_PLAN.pdf&Signature=TgYUBpra5kDW%2B5iRE%2BDCdmgmVtjqk1r9VOdJ5eYj1b0KYuyLlTc5hVAQpcX2VUcD56SRI67FlmGxAkMZkGNr54a6AOaL%2FlwOy%2FkgFQqG5MhzhDS0LQRAoBtLsQmsNMhgcM%2F%2FVqk1eUzPkEYnxdjFYnMxu01lWPgwqilWwoZJeUcnMeMza2E6OJItzsM4aKjGGazyZGPWCBE6oUofFijVYl%2B2u2KDLyQneEJsj3IugYC1rppL5XCuTFBkrMO2ZVTVDVtxNnMLb%2FbgxN4Pm9wx1NL0GaJNrPoSdRTJohU7F11pJ8rIj4b9k%2Fn9Uvzv1ldPD38VddCegg4JIh%2Bjup4Cog%3D%3D",
                        "type": "BIRTH_PLAN"
                    },
                    {
                        "content_type": "application/pdf",
                        "id": 3,
                        "signed_url": "https://storage.googleapis.com/test-bp-aaaa-bbbb-cc-dddddd/9e565bd1-0a15-4abc-a052-fc969c116c0f?GoogleAccessId=ye-dev-cloud-storage%40maven-clinic-ye-dev.iam.gserviceaccount.com&Expires=1484331632&response-content-type=application%2Fpdf&response-content-disposition=attachment%3B+filename%3DMAVEN_BIRTH_PLAN.pdf&Signature=izx%2BXjzqaCklW485pULDTOf09EP4zrE34%2F0hKg1saVXbT3uaMw6FxBIk3iArH%2FcnQy5GAe8zmqv6Piq4PkyrgqVL2u0RGaY6aKtPiJlQ1F%2Bp3pBRKx%2FmZBSUjksHAQROM7LQVkJFxqBiY12H5FV2nWdWzoE5E56Z80AFp%2BmGOBmDbV185zEfpQBQhJ4Da5X7zKvRKOrbjc8amO8Gm6RzS5Gjj%2BisIiMVMrh%2FJuZGa8OJLLqSPvJk3ZjNYGluYN0KqzLGsQNCG1s7FH7KzZA9M2hVzz2nz6lxG3yqeeSXj8i7lebSot5gmpjuY3K2Zo2Q3O7GjCKFJOyNh%2BjyK%2FpKWA%3D%3D",
                        "type": "BIRTH_PLAN"
                    },
                    {
                        "content_type": "application/pdf",
                        "id": 2,
                        "signed_url": "https://storage.googleapis.com/test-bp-aaaa-bbbb-cc-dddddd/b9564b77-61f8-4f33-9442-f4cd8d5a1dce?GoogleAccessId=ye-dev-cloud-storage%40maven-clinic-ye-dev.iam.gserviceaccount.com&Expires=1484331632&response-content-type=application%2Fpdf&response-content-disposition=attachment%3B+filename%3DMAVEN_BIRTH_PLAN.pdf&Signature=li8EkCalCHrYS4d4TAaNo4sONUnDzeINCRrvyQ3QL%2B%2FEJqxNA%2FbQu4YFtUDK95Ip4bIM21fi4HTIyH7ce01509eH3HsgUIsmT9ZAfAG5AhOTd1WwFiv%2BNW%2FIynkJ%2BMitPer02%2B9I5L5DCJHQuCq%2F8Us86F%2BdlZ4ySxfz80y6u4WIaTUQ3YYBjnEgrNkNNC8RTd3yXqsGeQ3hRwlhletM2IH4NYDrfsOjxRPnPZbLVqwM6salRo6CR%2F1Ooue4F%2B1sg0PtPXWruuGUhNayFYkb1rLlMgisKms8QABjLI5AXoGb3EU1EpvIfix0gsEnJ9m5l%2Bt1ALSJGZ6HsR88uVwpsQ%3D%3D",
                        "type": "BIRTH_PLAN"
                    },
                    {
                        "content_type": "application/pdf",
                        "id": 1,
                        "signed_url": "https://storage.googleapis.com/test-bp-aaaa-bbbb-cc-dddddd/fff756f4-0d9e-418b-bfca-76b8ae654cd4?GoogleAccessId=ye-dev-cloud-storage%40maven-clinic-ye-dev.iam.gserviceaccount.com&Expires=1484331633&response-content-type=application%2Fpdf&response-content-disposition=attachment%3B+filename%3DMAVEN_BIRTH_PLAN.pdf&Signature=aKuGa7WZl6r9S6hHNp6b0wbUU3%2FafKqVtthmWDjnKhEVH4WiycI0qw1g6E6WkYCx54fJlkHyrljCxnVGn2s92hbYlNYHcdbTB7dnG%2FaL17MuuE8LqV%2Fo6De3n6suXcD2%2BbGxRE0NhQw64NcPl9Sti3R51Vz3ZE8BfGjq1UzL1wUIxl%2F7ALjSoHMX1FErCG0cDiAZU225bpxEH4tQzwZl2n0keGv%2FXfKOK9B0R0Pu8vvvGo0kfNmFXb5hwiSnuUKFVBdT1NUf2murQ5H6vnHDyVXcV9r4YaGviwNF1YN3HiViXWr4I%2Fv2L8%2FiaYWlmB9OSpoLW%2B%2FOgTcOhtgnAq4uTw%3D%3D",
                        "type": "BIRTH_PLAN"
                    }
                ],
                "meta": null,
                "pagination": {
                    "limit": 10,
                    "offset": 0,
                    "order_direction": "desc",
                    "total": 4
                }
            }

## Patient Profile [/users/{id}/patient_profile]

This endpoint allows access to member's patient profile.  Currently this consists of pharmacy info.

Practitioners may retrieve patient profiles.  A member may only retrieve their own patient profile.
A 404 will be returned if a member tries to retrieve another member's patient profile, or if the
given member id is invalid.

### Retrieve Patient Profile [GET]

+ Parameters
    + id (required, integer) - Member id.

+ Response 200 (application/json)

    + Body

        {
            "user_id": 1,
            "pharmacy_id": "1",
            "pharmacy_info": {
                "Address1": "999 999th St",
                "Address2": None,
                "City": "NEW YORK",
                "Pharmacy": None,
                "PharmacyId": "1",
                "PrimaryFax": "555-555-5555",
                "PrimaryPhone": "555-555-5556",
                "PrimaryPhoneType": "Work",
                "State": "NY",
                "StoreName": "999 Pharmacy",
                "ZipCode": "10027"
            }
        }

+ Response 404 (application/json)

    + Body

      {
        "message": "Cannot access patient profile"
      }


### Update Patient Profile [PATCH]

+ Parameters
    + id (required, integer) - Member id.
    + pharmacy_id (optional, string)
    + pharmacy_info (optional, json) - Address and contact info for pharmacy.

+ Request (application/json)

    {
        "user_id": 1,
        "pharmacy_id": "1",
        "pharmacy_info": {
            "Address1": "999 999th St",
            "Address2": None,
            "City": "NEW YORK",
            "Pharmacy": None,
            "PharmacyId": "1",
            "PrimaryFax": "555-555-5555",
            "PrimaryPhone": "555-555-5556",
            "PrimaryPhoneType": "Work",
            "State": "NY",
            "StoreName": "999 Pharmacy",
            "ZipCode": "10027"
        }
    }

+ Response 200 (application/json)

    + Body

      {
        "user_id": 1,
        "pharmacy_id": "1",
        "pharmacy_info": {
            "Address1": "999 999th St",
            "Address2": None,
            "City": "NEW YORK",
            "Pharmacy": None,
            "PharmacyId": "1",
            "PrimaryFax": "555-555-5555",
            "PrimaryPhone": "555-555-5556",
            "PrimaryPhoneType": "Work",
            "State": "NY",
            "StoreName": "999 Pharmacy",
            "ZipCode": "10027"
        }
      }

+ Response 404 (application/json)

    + Body

      {
        "message": "Cannot access patient profile"
      }

### Pharmacy Search [/pharmacy_search?zip_code={zip_code}]

Non-RESTful endpoint returning a list of pharmacies retrieved from DoseSpot.

+ Parameters
    + zip_code (required, string) Zip code around which to retrieve pharmacies.

+ Response 200 (application/json)

    + Body

        {"data": [{"Pharmacy": null,
         "State": "DC",
         "PrimaryPhoneType": "Work",
         "Address1": "90001 1ST ST",
         "PrimaryFax": "2025551213",
         "PharmacyId": "1",
         "ZipCode": "20000",
         "PrimaryPhone": "2025551212",
         "StoreName": "Test One Pharmacy",
         "Address2": "1ST FL",
         "City": "Washington"}]}


## Address [/users/{user_id}/address]

An endpoint that adds an address to a user(POST) or retrieves all addresses for a user(GET)

### Get all addresses [GET]

+ Parameters
    + user_id (required, integer) - User ID

+ Response 200 (application/json)

    + Body

            [
              {
                "zip_code": "60618",
                "city": "chicago",
                "state": "illinois",
                "street_address": "123 Street",
                "country": "usa"
              },
              ...
            ]

### Add an address [POST]

+ Parameters
    + user_id (required, integer) - User ID

Address 1 (required) and address 2 (optional) will be formatted on the back end

+ Request (application/json)
    {
      "address_1":"123 Fake street",
      "city":"townsville",
      "state":"ME",
      "country":"US",
      "zip_code":"12345"
    }

# Group Tracks

For interacting with a user's MemberTracks.

## Tracks [GET /tracks]

Information about a user's active and available tracks.

+ Response 200

        {
            "active_tracks": [
                {
                    "current_phase": "week-6",
                    "description": "On-demand support, personalized weekly curriculum, and virtual classes to support your pregnancy journey.",
                    "display_name": "Pregnancy",
                    "enrollment_requirement_description": null,
                    "id": 26205,
                    "image": "https://storage.googleapis.com/maven-qa-images/Programs/Maven_Pregnancy.png",
                    "name": "pregnancy",
                    "scheduled_end": "2021-09-24",
                    "transitions": [
                        {
                            "description": "I’ve given birth",
                            "destination": "postpartum"
                        },
                        {
                            "description": "I’ve experienced a loss",
                            "destination": "pregnancyloss"
                        }
                    ]
                }
            ],
            "available_tracks": [
                {
                    "description": "Guidance on refining your parenting skills while managing your kids’ development, from age 1 through early adolescence.",
                    "display_name": "Parenting and Pediatrics",
                    "enrollment_requirement_description": "Enrollment requires you to have kids between one and ten years old.",
                    "image": "https://storage.googleapis.com/maven-qa-images/Programs/Maven_Pediatrics.png",
                    "name": "parenting_and_pediatrics"
                }
            ]
        }


## Track [GET /tracks/{track_id}]

Information about a specific track belonging to a user.

+ Response 200 (active track)

        {
            "id": 2,
            "name": "parenting_and_pediatrics",
            "display_name": "Parenting & Pediatrics",
            "scheduled_end": "2025-01-16",
            "current_phase": "static",
            "organization": {
                "id": 3,
                "name": "Test Organization X",
                "vertical_group_version": "Enterprise",
                "bms_enabled": false,
                "rx_enabled": true,
                "education_only": false,
                "display_name": "Test Organization X"
            }
        }

+ Response 200 (inactive track)

        {
            "id": 1,
            "name": "pregnancy",
            "display_name": "Pregnancy",
            "scheduled_end": "2025-04-09",
            "ended_at": "2024-02-06T21:52:13"
        }

+ Response 200 (scheduled track)

        {
            "id": 1,
            "name": "parenting_and_pediatrics",
            "display_name": "Parenting & Pediatrics",
            "scheduled_end": "2025-04-09",
            "start_date": "2024-02-20"
        }



## Active Tracks [GET /tracks/active]

Information about a user's active tracks.

+ Response 200

        {
            "active_tracks": [
                {
                    "id": 2,
                    "name": "parenting_and_pediatrics",
                    "display_name": "Parenting & Pediatrics",
                    "scheduled_end": "2025-01-16",
                    "current_phase": "static",
                    "organization": {
                        "id": 3,
                        "name": "Test Organization X",
                        "vertical_group_version": "Enterprise",
                        "bms_enabled": false,
                        "rx_enabled": true,
                        "education_only": false
                    }
                }
            ]
        }


## Inactive Tracks [GET /tracks/inactive]

Information about a user's inactive tracks.

+ Response 200

        {
            "inactive_tracks": [
                {
                    "id": 1,
                    "name": "pregnancy",
                    "display_name": "Pregnancy",
                    "scheduled_end": "2025-04-09",
                    "ended_at": "2024-02-06T21:52:13"
                }
            ]
        }


## Scheduled Tracks [GET /tracks/scheduled]

Information about a user's scheduled tracks.

+ Response 200

        {
            "scheduled_tracks": [
                {
                    "id": 1,
                    "name": "parenting_and_pediatrics",
                    "display_name": "Parenting & Pediatrics",
                    "scheduled_end": "2025-04-09",
                    "start_date": "2024-02-20"
                }
            ]
        }


### Track Onboarding Assessment [GET /tracks/{track_id}/onboarding_assessment]

Information about an active track's onboarding assessment

+ Parameters
    + track_id - the ID of the track

+ Response 200

        {
            "onboarding_assessment_id": 123,
            "onboarding_assessment_slug": "test-slug"
        }


### Start a transition [POST /tracks/{track_id}/start-transition]

Start a transition, putting the track into a "transitional state". After calling this method, this track's dashboard
will reflect the active transition. NOTE: after calling this method, the user is still not in the `destination` track.
`POST /tracks/{track_id}/finish-transition` should be used to actually execute the transition (usually after certain
assessments are finished).

+ Request (application/json)

        {
            "destination": "pregnancy"
        }

+ Parameters
    + track_id - the ID of the track to transition

+ Response 200

        {
            "success": true
        }


### Finish a transition [POST /tracks/{track_id}/finish-transition]

If the given track is in a transitional state, complete the transition by creating a new MemberTrack for the transition's
destination. Returns a 400 error if the given track is not in a transitional state.

+ Parameters
    + track_id - the ID of the track to transition

+ Response 200

        {
            "success": true
        }


### Cancel a transition [POST /tracks/{track_id}/cancel-transition]

If the given track is in a transitional state, cancel the transition so that it no longer is.

+ Parameters
    + track_id - the ID of the track to transition

+ Response 200

        {
            "success": true
        }

### Get intro appointment eligibility for list of tracks [GET /tracks/intro_appointment_eligibility]

Validate if any of the provided tracks is eligible for a CA intro appointment.

+ Parameters
    + tracks - the list of tracks' names

+ Response 200

        {
            "eligible_for_intro_appointment": true
        }

### Renew a track [POST /tracks/{track_id}/renewal]

Schedule a renewal of a track. This will create a new MemberTrack in the background that will be activated as soon as the currently active track ends.

+ Parameters
    + track_id - the ID of the track to renew

+ Response 201 (application/json)

        {
            "success": true,
            "track_id": 1234,
            "scheduled_end_date": "2024-01-23"
        }


### Terminate a scheduled track [DELETE /tracks/{track_id}/scheduled]

Terminate the scheduled track that was created as part of the renewal/transition process.

+ Parameters
    + track_id - the ID of the track that has been scheduled for renewal or transition

+ Response 204 (application/json)

        {}


# Group Features

The features endpoint allows an authenticated marketplace member see what features they are able to enroll in with a given set of organization employee credentials.

## Standard Verification Features [/features{?date_of_birth,company_email}]

Organizations that use standard verification expect employees to be verified using date of birth and the employee's company email.

+ Parameters
    + `date_of_birth`: `1984-04-13` (date) - Employee date of birth as provided in the census file.
    + `company_email`: `jane.doe@organization.net` - Employee email as provided in the census file.

### Get Features [GET]

+ Response 200 (application/json)

    + Body

            {
              "data": {
                "verified_employee": {
                  "organization_display_name": "The People's Paper Company"
                },
                "modules": {
                  "eligible": [
                    {
                      "name": "pregnancy",
                      "label": "I'm pregnant",
                      "required_information": ["DUE_DATE"],
                      "is_partner": false
                    },
                    {
                      "name": "postpartum",
                      "label": "I just gave birth",
                      "required_information": ["CHILD_DOB"],
                      "is_partner": false
                    },
                    {
                      "name": "fertility",
                      "label": "I'm undergoing or considering IUI/IVF",
                      "required_information": [],
                      "is_partner": false
                    },
                    {
                      "name": "egg_freezing",
                      "label": "I want to freeze my eggs",
                      "required_information": [],
                      "is_partner": false
                    },
                    {
                      "name": "surrogacy",
                      "label": "I'm using a surrogate",
                      "required_information": [],
                      "is_partner": false
                    },
                    {
                      "name": "adoption",
                      "label": "I'm adopting",
                      "required_information": [],
                      "ispartner": false
                    },
                    {
                      "name": "pregnancyloss",
                      "label": "I've experienced a loss",
                      "required_information": [],
                      "is_partner": false
                    }
                  ]
                }
              },
              "errors": []
            }

## Alternate Verification Features [/features{?date_of_birth,work_state,first_name,last_name}]

Organizations that use alternate verification expect employees to be verified using date of birth, first name, last name, and work state.

+ Parameters
    + `date_of_birth`: `1984-04-13` (date) - Employee date of birth as provided in the census file.
    + `work_state`: `NY` - Employee work state as provided in the census file.
    + `first_name`: `Jane` - Employee first name as provided in the census file.
    + `last_name`: `Doe` - Employee last name as provided in the census file.

### Get Features [GET]

+ Response 200 (application/json)

    + Body

            {
              "data": {
                "verified_employee": {
                  "organization_display_name": "The People's Paper Company"
                },
                "modules": {
                  "eligible": [
                    {
                      "name": "partner_pregnant",
                      "label": "My partner is pregnant",
                      "required_information": ["DUE_DATE"],
                      "is_partner": true
                    },
                    {
                      "name": "partner_newpregnant",
                      "label": "My partner just gave birth",
                      "required_information": ["CHILD_DOB"],
                      "is_partner": true
                    },
                    {
                      "name": "partner_fertility",
                      "label": "My partner is undergoing or considering IUI/IVF",
                      "required_information": [],
                      "is_partner": false
                    },
                    {
                      "name": "surrogacy",
                      "label": "I'm using a surrogate",
                      "required_information": [],
                      "is_partner": false
                    },
                    {
                      "name": "adoption",
                      "label": "I'm adopting",
                      "required_information": [],
                      "is_partner": false
                    }
                  ]
                }
              },
              "errors": []
            }

## External Verification Features [/features{?external_identity}]

Organizations that use SSO have a separate verification process. Because a user is
implicitly verified as an organization employee through SAML assertions, we simply check
if a user is linked to an organization employee through their external identity.

+ Parameters
    + `external_identity`: true (boolean)

### Get Features [GET]

+ Response 200

    + Body

            {
              "data": {
                "verified_employee": {
                  "organization_display_name": "The People's Paper Company"
                },
                "modules": {
                  "eligible": [
                    {
                      "name": "partner_pregnant",
                      "label": "My partner is pregnant",
                      "required_information": ["DUE_DATE"],
                      "is_partner": true
                    },
                    {
                      "name": "partner_newpregnant",
                      "label": "My partner just gave birth",
                      "required_information": ["CHILD_DOB"],
                      "is_partner": true
                    },
                    {
                      "name": "partner_fertility",
                      "label": "My partner is undergoing or considering IUI/IVF",
                      "required_information": [],
                      "is_partner": false
                    },
                    {
                      "name": "surrogacy",
                      "label": "I'm using a surrogate",
                      "required_information": [],
                      "is_partner": false
                    },
                    {
                      "name": "adoption",
                      "label": "I'm adopting",
                      "required_information": [],
                      "is_partner": false
                    }
                  ]
                }
              },
              "errors": []
            }

## Fileless Verification Features [/features{?fileless}]

Specifically used for mid-market organizations that enable [eligibility through work
email invite verification][fileless]. When a user has claimed their fileless invite,
there should be an organization employee associated to that user, and stored in Redis.

[fileless]: https://www.notion.so/mavenclinic/Fileless-Eligibility-15f877eaae3e4d7bb0b062bca83ac486

+ Parameters
    + `fileless`: true (boolean)

### Get Features [GET]

+ Response 200

    + Body

            {
              "data": {
                "verified_employee": {
                  "organization_display_name": "The People's Paper Company"
                },
                "modules": {
                  "eligible": [
                    {
                      "name": "partner_pregnant",
                      "label": "My partner is pregnant",
                      "required_information": ["DUE_DATE"],
                      "is_partner": true
                    },
                    {
                      "name": "partner_newpregnant",
                      "label": "My partner just gave birth",
                      "required_information": ["CHILD_DOB"],
                      "is_partner": true
                    },
                    {
                      "name": "partner_fertility",
                      "label": "My partner is undergoing or considering IUI/IVF",
                      "required_information": [],
                      "is_partner": false
                    },
                    {
                      "name": "surrogacy",
                      "label": "I'm using a surrogate",
                      "required_information": [],
                      "is_partner": false
                    },
                    {
                      "name": "adoption",
                      "label": "I'm adopting",
                      "required_information": [],
                      "is_partner": false
                    }
                  ]
                }
              },
              "errors": []
            }

## Client Specific Verification Features [/features{?date_of_birth,unique_corp_id,organization_id}]

+ Parameters
    + `date_of_birth`: `1984-04-13` (date) - Date of birth as provided in the census file.
    + `own_date_of_birth`: `2000-02-02` (date) - The dependent’s date of birth. Used when onboarding as a dependent.
    + `unique_corp_id`: `123` (string) - Unique value to identify the guarantor as provided in the census file.
    + `organization_id`: `1` (int)

### Get Features [GET]

+ Response 200

    + Body
            {
              "data": {
                "verified_employee": {
                  "organization_display_name": "The People's Paper Company"
                },
                "modules": {
                  "eligible": [
                    {
                      "name": "partner_pregnant",
                      "label": "My partner is pregnant",
                      "required_information": ["DUE_DATE"],
                      "is_partner": true
                    },
                    {
                      "name": "partner_newpregnant",
                      "label": "My partner just gave birth",
                      "required_information": ["CHILD_DOB"],
                      "is_partner": true
                    },
                    {
                      "name": "partner_fertility",
                      "label": "My partner is undergoing or considering IUI/IVF",
                      "required_information": [],
                      "is_partner": false
                    },
                    {
                      "name": "surrogacy",
                      "label": "I'm using a surrogate",
                      "required_information": [],
                      "is_partner": false
                    },
                    {
                      "name": "adoption",
                      "label": "I'm adopting",
                      "required_information": [],
                      "is_partner": false
                    }
                  ]
                }
              },
              "errors": []
            }

## Error States [/features?...]

### Get Features With Bad Employee Credentials [GET]

+ Response 404 (application/json)

    + Body

            {
              "data": null,
              "errors": [
                {
                  "code": "EMPLOYEE_NOT_FOUND",
                  "message": "Could not find employee with the provided credentials."
                }
              ]
            }

### Get Features As Enterprise Member [GET]

+ Response 409 (application/json)

    + Body

            {
              "data": null,
              "errors": [
                {
                  "code": "ALREADY_ENTERPRISE",
                  "message": "Enterprise members cannot be associated with another organization employee."
                }
              ]
            }

### Get Features For An Employee That Has Already Been Claimed [GET]

+ Response 409 (application/json)

    + Body

            {
              "data": null,
              "errors": [
                {
                  "code": "EMPLOYEE_CLAIMED",
                  "message": "Member cannot be associated with verified employee that has been claimed."
                }
              ]
            }


### Get Features For A Client Specific Eligibility Employee [GET]

+ Response 409 (application/json)

    + Body

            {
              "data": {
                "organization_name": "Microsoft",
                "organization_id": 123,
                "organization_logo": "https://qa.mvnctl.net/microsoft.png",
                "fields": [
                  {"name": "unique_corp_id", "label": "PERNER"}
                ]
              },
              "errors": [
                {
                  "code": "CLIENT_SPECIFIC_ELIGIBILITY_ENABLED",
                  "message": "Member likely belongs to an organization with client specific eligibility enabled. Member must verify their eligibility with provided eligibility fields."
                }
              ]
            }


### Get Features For A Fileless Eligibility Employee [GET]

+ Response 409 (application/json)

    + Body
            {
                "data": {
                    "organization_id": 1
                },
                "errors": [
                    {
                        "status": 409,
                        "title": "Conflict",
                        "detail": "Member likely belongs to an organization with fileless eligibility.",
                        "code": "FILELESS_ELIGIBILITY_ENABLED",
                        "message": "Member likely belongs to an organization with fileless eligibility."
                    }
                ]
            }

# Group Assets

## Assets [/assets]

User assets, formerly known as user files, are a mechanism for storing arbitrary user data such as images and documents.
Once created, assets can be used in various ways: as birth plans shared during an appointment, as message attachments, etc.
Creation, upload, and use of assets requires distinct api interactions in order to facilitate flexible usage and upload mechanics.

### Creating An Asset [POST]

The first step is to create an asset, passing in the file name chosen by the user and the content length.

+ Request Okay (application/json)

        {
          "file_name": "my_image.jpg",
          "content_length": 1234,
        }

+ Response 200 (application/json)

    + Body

            {
              "data": {
                "id": "1",
                "upload_url": "https://www.mavenclinic.com/api/v1/assets/1/upload",
                "upload_form_data": {}
              },
              "errors": []
            }

+ Request Content Length Too Large (application/json)

        {
          "file_name": "my_large_image.png",
          "content_length": 99999999999999
        }

+ Response 400 (application/json)

        {
          "data": null,
          "errors": [
            {
              "code": "BAD_REQUEST",
              "message": "Cannot create asset with contents exceeding 52428800 bytes.",
              "field": "content_length"
            }
          ]
        }

+ Request File Name Too Long (application/json)

        {
          "file_name": "my_image_with_a_really_long_name_..._will_fail.jpg",
          "content_length": 1234
        }

+ Response 400 (application/json)

        {
          "data": null,
          "errors": [
            {
              "code": "BAD_REQUEST",
              "message": "Longer than maximum length 255.",
              "field": "file_name"
            }
          ]
        }


## Asset Uploading [/assets/{asset_id}/upload]

+ Parameters
    + `asset_id`: `123` (integer) - The primary key of the asset.

### Uploading Asset Contents [POST]

A successful asset creation response will include an `upload_url` and an `upload_form_data` object which should be used in a subsequent request uploading asset contents.
Given the following successful asset creation response, upload the asset as shown below.

```
{
  "data": {
    "id": "123",
    "upload_url": "https://www.mavenclinic.com/api/v1/assets/123/upload",
    "upload_form_data": {
      "k1": "v1",
      "k2": "v2"
    }
  },
  "errors": []
}
```

Perform a `POST mutlipart/form-data` request to `upload_url` with any form data specified by `upload_form_data` as well as a form field `file` providing the asset contents.
Make sure that the `Content-Disposition` `filename` matches the value given when the asset was created.
If the upload fails, create another asset and use the new upload data to try again.

+ Request (multipart/form-data)

        Content-Type: multipart/form-data; boundary=45eab7247d134ca382c9b13022a3ee9c

        --45eab7247d134ca382c9b13022a3ee9c
        Content-Disposition: form-data; name="k1"

        v1
        --45eab7247d134ca382c9b13022a3ee9c
        Content-Disposition: form-data; name="k2"

        v2
        --45eab7247d134ca382c9b13022a3ee9c
        Content-Disposition: form-data; name="file"; filename="image.jpg"

        +-----------------------------------------+
        | NOTE: binary data not shown in terminal |
        +-----------------------------------------+
        ----45eab7247d134ca382c9b13022a3ee9c--

+ Response 200


## Asset State [/assets/{asset_id}]

+ Parameters
    + `asset_id`: `123` (integer) - The primary key of the asset.

### Polling Asset State [GET]

After the asset contents have been uploaded, asynchronous processing is required on the server before the asset can be used.
The client is now expected to poll the server for asset state until it reaches a terminal state.

`UPLOADING`: Continue polling the asset state. Its contents have not been processed by the server yet.

`CANCELED`: Server gave up on receiving this asset's contents. Try creating a new asset and uploading its contents again.

`REJECTED`: Server could not process this asset's contents. Client should not try uploading it again.

`COMPLETE`: The asset has been processed and is ready to be used!

+ Response (application/json)

        {
          "data": {
            "id": "123",
            "state": "UPLOADING"
          },
          "errors": []
        }


## Asset Download [/assets/{asset_id}/download{?disposition}]

+ Parameters
    + `asset_id`: `123` (integer) - The primary key of the asset.
    + `disposition`: `inline` (enum[string], optional) - The desired content disposition from the redirected response.
        + Default: `attachment`
        + Members:
            + `inline`
            + `attachment`

### Accessing Original Asset [GET]

This endpoint will redirect to a temporary signed cdn url serving the original asset contents.

+ Response 302

    + Header

        Location: https://asset.mavenclinic.com/o/...


## Asset Thumbnail [/assets/{asset_id}/thumbnail]

+ Parameters
    + `asset_id`: `123` (integer) - The primary key of the asset.

### Accessing Asset Thumbnail [GET]

This endpoint will redirect to a temporary signed cdn url serving a thumbnail of the asset.

+ Response 302

    + Header

        Location: https://asset.mavenclinic.com/t/...

+ Response 404

        {
          "data": null,
          "errors": [
            {
              "code": "NOT_FOUND",
              "message": "Asset with content type text/plain does not have a thumbnail.",
            }
          ]
        }


# Group Image

The **Images API** allows you to upload a new image file to the Maven system. You can also GET info about the image like the size and image type once it is uploaded.

## Images [/images]

### Add an Image [POST]

We don't care about the boundary or encoding as long as it is something standard. name should always be image but filename can change to whatever the filename on the device is.

+ Request (multipart/form-data)

        Content-Disposition: form-data; name="image"; filename="image.jpg"
        Content-Type: image/jpeg
        Content-Transfer-Encoding: base64

        -----BOUNDARY
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ Response 201 (application/json)

    + Body

            {
                "id": 1,
                "height": 1000,
                "width": 1000,
                "filetype": "jpeg",
                "original_filename": "image.jpg",
                "url": "https://cdn.com/image/938y4hbfbs"
            }

## Image [/images/{id}]

### Get an Image [GET]

+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "height": 1000,
                "width": 1000,
                "filetype": "jpeg",
                "original_filename": "image.jpg",
                "url": "https://cdn.com/image/938y4hbfbs"
            }

### Delete an Image [DELETE]

You can delete an image if you have the correct authorization.

+ Response 204


## Image Asset URL [/images/{id}/{size}]

### Get an Asset [GET]

If size is an allowed size, return the resized image file's CDN URL. Size is height x width, 0 for either will leave it as the original for that dimension (or scale it to match the dimension if only one is provided).

+ Response 200 (application/json)

    + Body

            {
                "url": "https://cdn.com/image/300x300/938y4hbfbs"
            }

# Group Forum

## Categories [/categories{?client_name}]

The **Categories API** gives you access to the list of supported post categories.

### Get a List of Categories [GET]

+ Parameters
    + client_name (string, optional) ... A tag that can be applied to limit the result set for a particular client (app version, web, etc...)

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "name": "category1",
                        "display_name":
                        "Category 1",
                        "ordering_weight": 1,
                        "id": 1
                    }
                ]
            }

## Posts [/posts{?parent_ids,ids,order_by,categories,author_ids,author_role,depth,sticky}]

The **Posts API** gives you access to posts that have been made in the forum. Default ordering is based on the created_at date, descending.
Posts may optionally have a parent. The current max depth supported is 3 generations.

### Get a List of Posts [GET]

This endpoint also has a public (logged out) view in addition to the usual logged in view when `api-key` is not present. All personalized fields
such as `has_voted`, `has_bookmarked` will be irrelevant in the public view.

+ Parameters
    + parent_ids (csv numbers, optional) ... IDs of the parent posts to get children posts for.
    + ids (csv numbers, optional) ... IDs of the posts to get.
    + order_by (string, optional) ... default is based on created date of posts, other options are 'activity', which will sort by the posts with the most recent replies and 'upvotes' which will sort by posts with the highest amount of (upvotes - downvotes). 'replies' will sort by reply count (total reply count) and 'bookmarks' will sort by bookmark count. 'popular' will sort by the backends preferred definition of popular at that time (one of replies or bookmarks)
    + categories (csv string, optional) ... comma separated list of the categories that posts returned should have
    + `author_ids` (csv numbers, optional) ... comma separated list of `user_ids` whose posts you'd like to see. Can pull providers, or your own posts, but not the posts of another member. Does include anonymous posts.
    + author_role (string, optional) ... choices are: (member,practitioner) - filter to just posts from members with that role
    + depth (int, optional) ... choices are: (0, 1) - filter to just posts with or without parents (0 is without a parent - a root post)
    + sticky (enum[string], optional) - filter to just retrieve featured posts at certain level.
        + LOW
        + MEDIUM
        + HIGH
    + keywords (string, optional) ... filter posts to have keywords in titles and/or bodies via full text search
    + `title_keywords` (string, optional) ... filter posts with keywords matching only in titles
    + `body_keywords` (string, optional) ... filter posts with keywords matching only in bodies
    + `include_parent` (bool, optional) ... the flag to indicate whether to include the full parent post object
        + Default: false

+ Response 200 (application/json)

    + Body

            {
              "meta": null,
              "data": [
                {
                  "net_votes": 0,
                  "parent_id": 0,
                  "bookmarks_count": 0,
                  "categories": ["foo"],
                  "id": 1,
                  "has_bookmarked": false,
                  "has_voted": false,
                  "anonymous": false,
                  "body": "Here is a great story...",
                  "sticky_priority": "LOW",
                  "category_objects": [{"name": "foo", "display_name": "foo bar", "id": 12}],
                  "author": {
                    "avatar_url": "",
                    "profiles": {
                      "member": {}
                    },
                    "id": 1,
                    "middle_name": "",
                    "role": "member",
                    "last_name": "Smith1",
                    "first_name": "Jane1",
                    "image_url": null,
                    "name": "Jane1 Smith1",
                    "username": "user1",
                    "email": "user1@test.com",
                    "image_id": 0
                  },
                  "title": "A Short Story",
                  "created_at": "2016-02-03T22:27:10",
                  "reply_counts": {
                    "members": 0,
                    "practitioners": 0
                  }
                },
                {
                  "net_votes": 0,
                  "parent_id": 0,
                  "bookmarks_count": 0,
                  "categories": ["foo"],
                  "id": 2,
                  "has_bookmarked": false,
                  "has_voted": false,
                  "anonymous": true,
                  "body": "Another great story.",
                  "sticky_priority": "LOW",
                  "category_objects": [{"name": "foo", "display_name": "foo bar", "id": 12}],
                  "author": null,
                  "title": "Another great",
                  "created_at": "2016-02-03T22:27:10",
                  "reply_counts": {
                    "members": 0,
                    "practitioners": 0
                  }
                },
                {
                  "net_votes": 0,
                  "parent_id": 0,
                  "bookmarks_count": 0,
                  "categories": ["foo"],
                  "id": 3,
                  "has_bookmarked": false,
                  "has_voted": false,
                  "anonymous": false,
                  "body": "Once upon a time, there is...",
                  "sticky_priority": "LOW",
                  "category_objects": [{"name": "foo", "display_name": "foo bar", "id": 12}],
                  "author": {
                    "avatar_url": "",
                    "profiles": {
                      "member": {}
                    },
                    "id": 2,
                    "middle_name": "",
                    "role": "member",
                    "last_name": "Smith2",
                    "first_name": "Jane2",
                    "image_url": null,
                    "name": "Jane2 Smith2",
                    "username": "",
                    "email": "user2@test.com",
                    "image_id": 0
                  },
                  "title": "Short story",
                  "created_at": "2016-02-03T22:27:10",
                  "reply_counts": {
                    "members": 0,
                    "practitioners": 0
                  }
                }
              ],
              "pagination": {
                "total": 3,
                "order_direction": "desc",
                "offset": 0,
                "limit": 10
              }
            }

### Add a Post [POST]

+ Request (application/json)

        {
            "title": "My Post",
            "body": "What do I do?",
            "parent_id": 2,
            "categories": "foo,baz",
            "anonymous": true,
            "recaptcha_token": "03AGdBq24kKGlKMCJl1RvCc4cAjgMvic1gkRXnf_a4aTbiKXKTgQjRYvGNwbAY_sd-EM5SmqD1_SYbxlRs7SObtvOEXZ4ASGjRrUf3wS4EHE9ZaECo5FpMOvCYOI_TeVgCTPXQNe2Gq8B63L5l8VCRsM0emKy53OAiGkIRdlTYITRT-yJrV-roF-hfo1SJ3WE7KMIclaC7PBAvHlCxO9PCIoHAQYzHPEgy8WlUfBTM-ue9fxFscLi73irK6rKADcTFXa5kgye8kLXD9FS0nwHMYwJF4ut5cKIX6RoCzcbTUyHBfTYjSe3d-7XLclqkxOKtbWPw6nsS9_y489kcnfgQCPESiVImARLEAeY9s51_6LUgHw8T-fRTBqxT_-NwfWeWe1s2NJyNfeHj3pS9Cs2pboNdySDTlBR6J036Eyjk5EyLdlmTvX627QUcU1s_5k7KPMX8CN_gAeCSZ6HsahwIezQho7PSAmF4hmn0sRGp_SZmJMw-aBihGeM0OnTJRbNK8QBuI165xNCnDU9bujnM1mrgqljowHmAc9ThFYeYuRIU1rXg_sUCm1KwPywgBS0wruHmEIjQQW5TyG6GhBfxY4Y_iMJamr00AAoWqIK41knM6p32JfRYXm7-M66XQ4N4r5JtIQJwDEYl1Z_LZUh-dEZabdncYV2VKn6tdCGwnrZovV5Wvnf0PdiEPn9MYWqCII6VcBgCR68dtSyoN7n7ABjHPOFay7I4zFLQeyrMfq6WRbGNrh18b0gB2AvaJdGQrmU6HBk1RN8ma_WwM0memz-2EspdTfOQ35Puy1dwkGAUTU0yt-dOtGJurLTp4bb_EGUKt5ZgPXGazQLHaekAjzN738137gYNMlacVWC6U0GineL0QHqSDT9FvFOPU9EPG97zPGmrqc5Trr7QKjkWJLAtomEusl-u5Zb1eVQa4vqIsiJZSSOQyZRy-jcFOAv6BGk-WYVPRWhmLO9pNIsZCE1SUyTwI3lrD3RClqE_pFkJbomOgquX-3ZS1THhNNHjU6I9sOErzDM1lU-SFAeqqjw4qOFr3vznYsLo9lDqqwqOzj3Tv3alZJ4KI0IYtz2L7ypevZuBGV_eulW4sIN6DTdF06dGUKEWJj3voCT8QDG-bTfGZs75cnI7hYYBnldzCETwL7oZFLiRju6tUMvnCuyx7ezjM4N5sJuKUjSJe5cfn-YYt8oIc786vF3nFZZAeiThwCow3_qWPBhhUGIhLuSm7SSQAU4JfA"
        }

+ Response 201 (application/json)

    + Body

            {"id": 23456,
             "title": "My Post",
             "parent_id": 2,
             "body": "What do I do?",
             "author": {"name": "Peg Smith",
                        "username": "foobar",
                        "id": 1,
                        "role": "member"},
             "created_at": "2014-6-12T12:12:12Z",
             "reply_counts": {"members": 0, "practitioners": 0},
             "has_voted": true,
             "categories": ["foo", "baz"],
             "category_objects": [{"name": "foo", "display_name": "foo bar", "id": 12},
                                  {"name": "baz", "display_name": "baz bar", "id": 122}]}

## Post [/posts/{id}]

+ Parameters
    + id (number) - ID of the post

### Get a Post by ID [GET]

+ Response 200 (application/json)

            {"id": 23456,
             "title": "My Post",
             "parent_id": 2,
             "body": "What do I do edited?",
             "author": {"name": "Peg Smith",
                        "username": "foobar",
                        "id": 2,
                        "role": "member"},
             "created_at": "2014-6-12T12:12:12Z",
             "reply_counts": {"members": 0, "practitioners": 0},
             "has_voted": true,
             "categories": ["foo", "baz"],
             "category_objects": [{"name": "foo", "display_name": "foo bar", "id": 12},
                                  {"name": "baz", "display_name": "baz bar", "id": 122}]}

### Edit a Post [PUT]

You can edit a post's body, title, and categories by ID.

+ Request (application/json)

        {
            "id": 23456,
            "title": "My Post",
            "parent_id": 2,
            "body": "What do I do edited?",
            "author": {
                "name": "Peg Smith",
                "username": "foobar",
                "id": 2,
                "role": "member"
            },
            "created_at": "2014-6-12T12:12:12Z",
            "reply_counts": {
                "members": 0,
                "practitioners": 0
            },
            "has_voted": true,
            "categories": "foo,baz"
        }

+ Response 200 (application/json)

    + Body

            {
                "id": 23456,
                "title": "My Post",
                "parent_id": 2,
                "body": "What do I do edited?",
                "author": {
                    "name": "Peg Smith",
                    "username": "foobar",
                    "id": 2,
                    "role": "member"
                },
                "created_at": "2014-6-12T12:12:12Z",
                "reply_counts": {
                    "members": 0,
                    "practitioners": 0
                },
                "has_voted": true,
                "categories": "foo,baz"
            }


### Delete a Post [DELETE]

A post can be deleted by ID if it is your post.

+ Response 204

## Votes [/post/{id}/votes{?direction,actor_role}]

+ Parameters
    + id - the ID of the post
    + direction (string, optional) ... choices are: (up,down) - filter to just votes from members with that role
    + actor_role (string, optional) ... choices are: (member,practitioner) - filter to just votes from members with that role

### Vote on a Post [POST]

+ Request (application/json)

        {"direction": "up",
         "anonymous": true}

+ Response 204

### Remove Your Vote From a Post [DELETE]

+ Response 204

## Bookmarks [/posts/{id}/bookmarks]

### Bookmark a Post [POST]

+ Response 204

### De-bookmark a Post [DELETE]

+ Response 204

## User Bookmarks [/me/bookmarks]

### Get Your Own Bookmarks [GET]

+ Response 200 (application/json)

    + Body

            {"data": [{"id": 256,
                       "parent_id": 5,
                       "title": "A Short Story",
                       "body": "That is a great story...",
                       "author": {"name": "Jane Smith",
                                  "username": "foobar",
                                  "id": 1,
                                  "role": "member"},
                       "created_at": "2014-7-16T12:12:12Z",
                       "reply_counts": {"members": 0, "practitioners": 0},
                       "has_voted": true,
                       "categories": ["foo", "baz"],
                       "category_objects": [{"name": "foo", "display_name": "foo bar", "id": 12},
                                            {"name": "baz", "display_name": "baz bar", "id": 122}]},
                      {"id": 1,
                       "title": "Post Title",
                       "parent_id": null,
                       "body": "I am so sick!",
                       "author": {"name": "Peg Smith",
                                  "username": "foobar",
                                  "id": 2,
                                  "role": "member"},
                       "created_at": "2014-6-12T12:12:12Z",
                       "reply_counts": {"members": 0, "practitioners": 0},
                       "has_voted": true,
                       "categories": ["foo", "baz"],
                       "category_objects": [{"name": "foo", "display_name": "foo bar", "id": 12},
                                            {"name": "baz", "display_name": "baz bar", "id": 122}]}]}

# Group Payments

## Member Payment Methods [/users/{id}/payment_methods]

The **Payment Methods API** gives you access to stored payment methods on Maven. Right now, it's only credit cards, and we are only going to allow one per user.

### Get a user's own payment methods that they have saved with Maven [GET]

+ Response 200 (application/json)

    + Body

            {"data": [{"user_id": 1,
                       "brand": "Visa",
                       "last4": "8239",
                       "default": true}]}

### Add a New Payment Method [POST]

+ Request (application/json)

        {"stripe_token": "lnfdsishf798hvs9nnclso"}

+ Response 201 (application/json)

    + Body

            {"data": [{"user_id": 1,
                       "brand": "Visa",
                       "last4": "8239",
                       "default": true}]}

## Member Payment Method [/users/{id}/payment_methods/{card_id}]

This is where actions, such a delete, can be taken on an individual payment method such as a credit card.

### Remove a Payment Method for a User [DELETE]

+ Response 204


## Maven Credits [/users/{id}/credits]

+ Parameters
    + id (number) - ID of the user

The **Credits API** allows you to see the credits that an user has accrued on Maven.

### See the Existing Credits for a User [GET]

+ Response 200 (application/json)

    + Body

            {
                "meta": {
                    "total_credit": "29.00"
                },
                "data": [
                    {
                        "amount": "29.00",
                        "created_at": "2018-07-24T19:57:02",
                        "expires_at": "2018-11-21T19:52:50"
                    }
                ],
                "pagination": {
                    "limit": 10,
                    "offset": 0,
                    "order_direction": "desc",
                    "total": 1
                }
            }



## Practitioner Recipient Information  [/users/{id}/recipient_information]

+ Parameters
    + id (number) - ID of the user

This information is required to validate a connect account before they can attach a bank account, receive transfers of money, or have that money paid out to their banks. It's used to prevent fraud and money laundering by Stripe.

This resource is a proxy for a connected account on the Stripe Connect Account API. The only attribute that we need to edit with this resource is the legal_entity. The full list of attributes for the legal entity is here (show child attributes under the account.legal_entity to see them all): https://stripe.com/docs/api#account_object. The list of fields that we collect as US marketplace are here: https://stripe.com/docs/connect/required-verification-information (look for ones prefixed with legal_entity). We don't do any verification of the object passed to this endpoint - we send and receive it from Stripe - as field requirements for verification change we will need to update the front end applications to accommodate them.

Notably we take in two types of connect accounts: individuals and companies. These types have different requirements within the same type of object, so examples of both are provided below.


### Add Recipient Info (Individual) [POST]

+ Request for Individual (application/json)
        {
            "legal_entity": {
                "dob": {
                    "month": 10,
                    "day": 23,
                    "year": 1977
                },
                "address": {
                    "postal_code": "10009",
                    "state": "NY",
                    "city": "New York",
                    "line1": "111 Anywhere Ave"
                },
                "type": "individual",
                "first_name": "A.",
                "id_number": "000000000"
                "ssn_last_4": "1234"
                "last_name": "Person"
            }
        }

+ Response 201 (application/json)
    + Body
        {
            "individual": {
                "dob": {
                    "year": "1977",
                    "month": "10",
                    "day": "23"
                },
                "id_number_provided": null,
                "ssn_last_4_provided": false,
                "address": {
                    "postal_code": "10009",
                    "line1": "111 anywhere ave",
                    "city": "New York",
                    "state": "NY"
                },
                "ssn_last_4": "",
                "first_name": "Anybody",
                "last_name": "Person",
                "verification": {
                    "additional_document": {
                        "details_code": "",
                        "back": "",
                        "front": "",
                        "details": ""
                    },
                    "document": {
                        "details_code": "",
                        "back": "",
                        "front": "",
                        "details": ""
                    }
                }
            },
            "payouts_enabled": false,
            "external_accounts": [],
            "company": null
        }

+ Request for Company (application/json)
        {
            "legal_entity": {
                "address": {
                    "postal_code": "10009",
                    "state": "NY",
                    "city": "New York",
                    "line1": "111 anywhere ave"
                },
                "type": "company",
                "name": "Test Company",
                "tax_id": "string"
            }
        }

+ Response for Company 201 (application/json)
    + Body
        {
            "individual": null,
            "payouts_enabled": false,
            "external_accounts": [],
            "company": {
                "tax_id_provided": true,
                "address": {
                    "postal_code": "10009",
                    "line1": "111 anywhere ave",
                    "city": "New York",
                    "state": "NY"
                },
                "name": "Test Company",
                "verification": {
                    "additional_document": {
                        "details_code": "",
                        "back": "",
                        "front": "",
                        "details": ""
                    },
                    "document": {
                        "details_code": "",
                        "back": "",
                        "front": "",
                        "details": ""
                    }
                }
            }
        }


### Get Recipient Info [GET]

+ Response 200 (application/json)

    + Body

        {"payouts_enabled": false,
         "external_account": {"last4": "4567"},
         "legal_entity": "this will be an object - see stripe docs for details"}

### Edit Recipient Info [PUT]

+ Request (application/json)

        {"legal_entity": "this will be an object - see stripe docs for details"}

+ Response 200 (application/json)

    + Body

        {"payouts_enabled": false,
         "external_account": {"last4": "4567"},
         "legal_entity": "this will be an object - see stripe docs for details"}


## Bank Accounts [/users/{id}/bank_accounts]

+ Parameters
    + id (number) - ID of the user

The **Bank Accounts API** gives you access to stored bank accounts used to receive funds on Maven. Right now, we allow one per user, and they point to separate stripe accounts depending on if the user is a member or a practitioner. Practitioners recieve payments, while users can recieve reimbursements from their benefits provider. The stored accounts are created with stripe tokens representing a a bank account gotten using stripe.js/iOS.

### Get a Bank Account Saved With Maven [GET]

+ Response 200 (application/json)

    + Body

            {"country": "US",
             "bank_name": "STRIPE TEST BANK",
             "last4": "8239"}


### Edit Bank Accounts [POST]

+ Request Add a new bank account (application/json)

        {"stripe_token": "lnfdsishf798hvs9nnclso"}

+ Response 201 (application/json)

    + Body

            {"country": "US",
             "bank_name": "STRIPE TEST BANK",
             "last4": "8239"}

### Edit Bank Accounts [PUT]

+ Request Edit to a new bank account (application/json)

        {"stripe_token": "lnfdsishf798hvs9nnclso"}

+ Response 201 (application/json)

    + Body

            {"country": "US",
             "bank_name": "STRIPE TEST BANK",
             "last4": "8239"}

### Delete Bank Account [DELETE]
Attempting to remove a bank account when no account is present will result in a 200 with an error message. You cannot disconnect a user's bank account if they have reimbursement requests in the PENDING or APPROVED states. This will cause a 202 Incomplete message, with error data. Successfully removing a bank account will result in a 204 message with no errors. This endpoint does not affect the Stripe Connect bank account, only its relationship to a Maven user.

+ Request Remove the user's bank account (application/json)

+ Response 400 (application/json)
    + Body

        {
            "data": null,
            "errors": [
                {
                    "code": "NOT_FOUND",
                    "message": "No attached bank account found to delete."
                }
            ]
        }
+ Response 200 (application/json)
    + Body

        {
            "data": null,
            "errors": [
                {
                    "code": "REMOVE_PAYMENT_METHOD_INCOMPLETE",
                    "message": "You may not remove a payment method while reimbursements are still processing. A Care Coordinator has been notified to help with removing this bank account."
                }
            ]
        }

+ Response 200 (application/json)
    + Body

        {
            "data": null,
            "errors": []
        }

# Group Referral Codes

The **Referral Codes API** allows you get information about a user's referral codes.

## Referral Codes [/referral_codes{?owner}]

### Get Referral Code Information [GET]

An array of referral codes. Includes all global codes as well as codes that you own.

+ Parameters
    + owner (int) ... ID of the user who owns the code to get referral codes for. This should only be yourself.

+ Response 200 (application/json)

    + Body

            [{
                "code": "U76FG8",
                "description" "Your personal promotion code to generate rewards when you refer clients or practitioners to Maven",
                "expires_at": null,
                "created_at": "2014-12-12T12:12:12Z",
                "values": [
                            {"type": "member", "value": 10},
                         ],
                "uses": [
                            {"used_at": "2014-12-12T12:12:12Z",
                             "used_by": 12,
                             "credits": [{"amount": 10, "created_at": "2014-12-12T12:12:12Z"}]},
                            {"used_at": "2014-12-12T12:12:12Z",
                             "used_by": 14,
                             "credits": [{"amount": 10, "created_at": "2014-12-12T12:12:12Z"}]}
                        ],
                "available_uses": null
            },
            {
                "code": "HEALTHY10",
                "description" "A special promo code",
                "expires_at": "2014-12-20T12:12:12Z",
                "created_at": "2014-12-12T12:12:12Z",
                "values": [
                            {"type": "member", "value": 10},
                         ],
                "uses": [
                            {"used_at": "2014-12-12T12:12:12Z",
                             "used_by": 12,
                             "credits": [{"amount": 10, "created_at": "2014-12-12T12:12:12Z"}]},
                        ],
                "available_uses": 10
            }]

## Referral Code Uses [/referral_code_uses]

### Use a Code [POST]

+ Request (application/json)

        {"referral_code": "HFJKAF34"}

+ Response 201 (application/json)

    + Body

            {"used_at": "2014-12-12T12:12:12Z",
             "used_by": 12,
             "values": [{"value": 10, "type": "member"}]}


## Referral Code Info [/referral_code_info{?referral_code,encoded_user_id}]

Unauthenticated way to get credit amount for a code

### Get a Code [GET]

+ Response 200 (application/json)

    + Body

            {
                "code": "CODEA",
                "value": 25
            }


# Group Products

A product is an offering of a specialist.

## Products [/products{?practitioner_ids,vertical_name}]

### Get a List of Products [GET]

+ Parameters
    + practitioner_ids (required, int) ... this is the ID of the user to get a schedule for. It must be the ID of a practitioner.
    + vertical_name (optional, string) ... Vertical name by which to filter products, e.g. `Nurse Practitioner`

+ Response 200 (application/json)

    + Body

            {"data": [{"id": 1,
                       "practitioner_id": 1,
                       "minutes": 60,
                       "price": 60},
                      {"id": 2,
                       "practitioner_id": 1,
                       "minutes": 30,
                       "price": 40}]}


## Product Availability [/products/{id}/availability{?starts_at,ends_at}]

### Get Availability for a Given Product [GET]

+ Parameters
    + id (number, required) - ID of the product
    + starts_at (required, ISO8601 Datetime String) ... start the search here.
    + ends_at (required, ISO8601 Datetime String) ... end the search here.

+ Response 200 (application/json)

    + Body

            {
                "meta": {"practitioner_id": 10,
                         "starts_at": "2014-12-12T12:12:12Z",
                         "ends_at": "2014-12-13T12:12:12Z"},
                "data": [
                        {"scheduled_start": "2014-12-12T12:15:00Z",
                         "scheduled_end": "2014-12-12T12:15:00Z"},
                        {"scheduled_start": "2014-12-12T12:30:00Z",
                         "scheduled_end": "2014-12-12T12:15:00Z"}
                    ],
            }


# Group Schedules

The **Schedules API** allows you get information about a user's schedule - availability for appointments is the key feature...

## Schedule Events [/practitioners/{id}/schedules/events{?starts_at,ends_at}]

+ Parameters
    + id - ID of practitioner

### Get User Schedule Information [GET]

A user has a schedule of events.

+ Parameters
    + starts_at (required, ISO8601 Datetime String) - UTC time but timezone naive. Start the search here.
    + ends_at (required, ISO8601 Datetime String) - UTC time but timezone naive. End the search here.

+ Response 200 (application/json)

    + Body

            {
                "meta": {"starts_at": "2014-12-12T12:12:12Z",
                         "user_id": 10,
                         "ends_at": "2014-12-13T12:12:12Z"},
                "data": [
                        {"starts_at": "2014-12-12T12:15:00Z",
                         "ends_at": "2014-12-12T12:29:59Z",
                         "state": "available",
                         "id": 1},
                        {"starts_at": "2014-12-12T12:30:00Z",
                         "ends_at": "2014-12-12T12:44:59Z",
                         "state": "unavailable",
                         "id": 2}
                ]
            }

### Add a New Event to a User's Schedule [POST]

+ Request (application/json)

        {"state": "AVAILABLE",
         "starts_at": "2015-06-17T00:00:00",
         "ends_at": "2015-06-24T23:00:00"}

+ Response 201 (application/json)

    + Body

            {
              "ends_at": "2015-06-24T23:00:00",
              "id": 2,
              "starts_at": "2015-06-17T00:00:00",
              "state": "AVAILABLE"
            }

## Schedule Event [/practitioners/{practitioner_id}/schedules/events/{event_id}]

+ Parameters
    + practitioner_id - User ID of the practitioner
    + event_id - ID of the event

### Remove an Event from a Schedule [DELETE]

+ Response 204


# Group Appointments

## Appointments [/appointments{?scheduled_start,scheduled_end,schedule_event_ids,member_id,practitioner_id,exclude_statuses}]

### Create a New Appointment [POST]

+ Attributes
    + privacy (enum[string], optional) - set the privacy
        + basic
        + anonymous

+ Request (application/json)

        {"scheduled_start": "2014-12-12T12:15:00Z",
         "product_id": 1,
         "client_notes": "Here is a note",
         "privacy": "basic"}

+ Response 201 (application/json)

    + Body

            {"scheduled_start": "2014-12-12T12:15:00Z",
             "scheduled_end": "2014-12-12T12:29:59Z",
             "member": {
                 "name": "Jane Doe",
                 "id": 2,
                 "country": {
                    "name": "United Kingdom",
                    "abbr": "UK",
                    "ext_info_link": "http://google.com/stuff",
                    "summary": "blah blah blah..."
                 }
             },
             "product": {"practitioner": {"name": "Jane Smith",
                                          "id": 25,
                                          "avatar_url": "https://cdn.com/image.jpg"},
                         "fee": 60,
                         "id": 1},
             "member_started_at": "2014-12-12T12:15:00Z",
             "member_ended_at": null,
             "practitioner_started_at": "2014-12-12T12:15:00Z",
             "practitioner_ended_at": null,
             "state": "scheduled",
             "video": {"session_id": "ibsdfkjsnv9h9h8sds",
                       "member_token": "sakjdnfaf9847r8y",
                       "practitioner_token": "dkfnw9f9w4fsbksd"},
             "privacy": "basic",
             "pre_session": {"notes": "I want to talk about this..."},
             "post_session": {"notes": "Here is something to remember", "created_at": "2014-12-12T12:00:00"},
             "disputed_at": null,
             "ratings": {"category 1": 4, "category 2": 3},
             "id": 1,
             "cancellation_policy": "moderate",
             "rx_enabled": true,
             "prescription_info": {"pharmacy_id": 1, "enabled": true,
                                   "pharmacy_info": {"Pharmacy": null,
                                    "State": "DC",
                                    "PrimaryPhoneType": "Work",
                                    "Address1": "90001 1ST ST",
                                    "PrimaryFax": "2025551213",
                                    "PharmacyId": "1",
                                    "ZipCode": "20000",
                                    "PrimaryPhone": "2025551212",
                                    "StoreName": "Test One Pharmacy",
                                    "Address2": "1ST FL",
                                    "City": "Washington"}}}


### Get a List of Appointments for a Member or Practitioner. [GET]

This endpoint allows you to get appointments that you are either a member or practitioner for. If you don't provide any args, it will default to practitioner appointments if you are a practitioner and to member appointments otherwise. If you don't provide schedule_event_ids, you must provide either no scheduled_start and scheduled_end, or both of them.

+ Parameters
    + scheduled_start (optional, ISO8601 Datetime String) ... start the search here. An appointment which started before this time but has not ended will not be returned.
    + scheduled_start_before (optional, ISO8601 Datetime String) ... start the search here. An appointment which has a start before this time will be returned.
    + scheduled_end (optional, ISO8601 Datetime String) ... end the search here. An appointment which has not ended by this time will not be returned.
    + schedule_event_ids (optional, CSV of int) ... a list of schedule events to get appointments for.
    + member_id (optional, int) ... ID of a member to get appointments for.
    + practitioner_id (optional, int) ... ID of a practitioner to get appointments for.
    + exclude_statuses (optional, comma-separated string) ... right now should only accept CANCELLED
    + minimal (optional, boolean) ... indicates whether a response with a minimal set of attributes should be returned (shown here below standard response)

+ Response 200 (application/json)

    {
        "pagination": {
            "total": 10,
            "limit": 10,
            "offset": 0
        },
        "meta": {
            "member_id": 10,
            "scheduled_start": "2014-12-12T12:12:12Z",
            "scheduled_end": "2014-12-13T12:12:12Z"
        },
        "data": [{
                "scheduled_start": "2014-12-12T12:15:00Z",
                "scheduled_end": "2014-12-12T12:29:59Z",
                "member": {
                    "name": "Jane Doe",
                    "id": 2,
                    "country": {
                        "name": "United Kingdom",
                        "abbr": "UK",
                        "ext_info_link": "http://google.com/stuff",
                        "summary": "blah blah blah..."
                    }
                },
                "product": {
                    "practitioner": {
                        "name": "Jane Doe",
                        "id": 23,
                        "avatar_url": "https://cdn.com/image.jpg",
                    },
                    "fee": 60,
                    "id": 3
                },
                "member_started_at": "2014-12-12T12:15:00Z",
                "member_ended_at": null,
                "practitioner_started_at": "2014-12-12T12:15:00Z",
                "practitioner_ended_at": null,
                "state": "scheduled",
                "video": {
                    "session_id": "ibsdfkjsnv9h9h8sds",
                    "member_token": "sakjdnfaf9847r8y",
                    "practitioner_token": "dkfnw9f9w4fsbksd"
                },
                "privacy": "basic",
                "pre_session": {
                    "notes": "I want to talk about this..."
                },
                "post_session": {
                    "notes": "Here is something to remember",
                    "created_at": "2014-12-13T12:00:00"
                },
                "rx_enabled": true,
            },
            {
                "scheduled_start": "2014-12-12T12:30:00Z",
                "scheduled_end": "2014-12-12T12:44:59Z",
                "product": {
                    "practitioner": {
                        "name": "Jane Smith",
                        "id": 25,
                        "avatar_url": "https://cdn.com/image.jpg"
                    },
                    "fee": 60,
                    "id": 4
                },
                "state": "pending",
                "video": {
                    "session_id": "ibsdfkjsnv9h9h8sds",
                    "member_token": "sakjdnfaf9847r8y",
                    "practitioner_token": "dkfnw9f9w4fsbksd"
                },
                "member_started_at": "2014-12-12T12:15:00Z",
                "member_ended_at": null,
                "practitioner_started_at": "2014-12-12T12:15:00Z",
                "practitioner_ended_at": null,
                "privacy": "anonymous",
                "pre_session": {
                    "notes": "I want to talk about this..."
                },
                "post_session": {
                    "notes": "Here is something to remember",
                    "created_at": "2014-12-12T12:15:00"
                },
                "disputed_at": null,
                "ratings": {
                    "category 1": 4,
                    "category": 3
                },
                "cancellation_policy": "moderate",
                "id": 2,
                "prescription_info": {
                    "pharmacy_id": 1,
                    "enabled": true
                },
                "rx_enabled": true,
            }
        ]
    }


    //  If minimal=true, the response will contain this set of attributes.

    {
        "pagination": {
            "limit": 10,
            "total": 2,
            "offset": 0,
            "order_direction": "asc"
        },
        "meta": {
            "scheduled_start": null,
            "schedule_event_ids": null,
            "scheduled_end": null
        },
        "data": [{
                "repeat_patient": false,
                "product": {
                    "practitioner": {
                        "name": "Jane Doe",
                        "profiles": {
                            "practitioner": {
                                "verticals": [
                                    "Nurse Practitioner"
                                ]
                            }
                        },
                        "image_url": null
                    }
                },
                "id": 2,
                "member": {
                    "name": "Joan Day",
                    "image_url": null
                },
                "pre_session": {
                    "created_at": null,
                    "notes": ""
                },
                "privacy": "full_access",
                "post_session": {
                    "created_at": null,
                    "notes": ""
                },
                "cancelled_at": null,
                "scheduled_start": "2020-07-21T17:24:09",
                "scheduled_end": "2020-07-21T17:54:09"
            },
            {
                "repeat_patient": false,
                "product": {
                    "practitioner": {
                        "name": "Jane2 Smith2",
                        "profiles": {
                            "practitioner": {
                                "verticals": [
                                    "Nurse Practitioner"
                                ]
                            }
                        },
                        "image_url": null
                    }
                },
                "id": 997948367,
                "member": {
                    "name": "Jane4 Smith4",
                    "image_url": null
                },
                "pre_session": {
                    "created_at": null,
                    "notes": ""
                },
                "privacy": "full_access",
                "post_session": {
                    "created_at": null,
                    "notes": ""
                },
                "cancelled_at": "2020-07-21T19:24:09",
                "scheduled_start": "2020-07-21T20:24:09",
                "scheduled_end": "2020-07-21T20:54:09"
            }
        ]
    }


## Appointment [/appointments/{id}]

+ Parameters
    + id (number) - ID of the appointment

### Get an Appointment [GET]

+ Response 200 (application/json)

    + Body

    {
        "scheduled_start": "2014-12-12T12:15:00Z",
        "scheduled_end": "2014-12-12T12:29:59Z",
        "member": {
            "id": 2,
            "name": "Jane Doe",
            "last_name": "Doe",
            "first_name": "Jane",
            "role": "member",
            "image_url": null,
            "organization": {
                "id": 1,
                "bms_enabled": true,
                "rx_enabled": true,
                "vertical_group_version": "v2",
                "name": "Maven"
            },
            "country": {
                "name": "United Kingdom",
                "abbr": "UK",
                "ext_info_link": "http://google.com/stuff",
                "summary": "blah blah blah..."
            },
            "care_coordinators": []
        },
        "product": {
            "practitioner": {
                "name": "Jane Smith",
                "id": 25,
                "avatar_url": "https://cdn.com/image.jpg"
            },
            "fee": 60,
            "id": 4
        },
        "member_started_at": "2014-12-12T12:15:00Z",
        "member_ended_at": null,
        "practitioner_started_at": "2014-12-12T12:15:00Z",
        "practitioner_ended_at": null,
        "rx_written_at": null,
        "rx_written_via": null,
        "state": "scheduled",
        "video": {
            "session_id": "ibsdfkjsnv9h9h8sds",
            "member_token": "sakjdnfaf9847r8y",
            "practitioner_token": "dkfnw9f9w4fsbksd"
        },
        "privacy": "basic",
        "pre_session": {
            "notes": "I want to talk about this..."
        },
        "post_session": {
            "notes": "Here is something to remember",
            "created_at": "2014-12-12T12:15:00"
        },
        "disputed_at": null,
        "ratings": {
            "category 1": 4,
            "category 2": 3
        },
        "id": 1,
        "cancellation_policy": "moderate",
        "prescription_info": {
            "pharmacy_id": 1,
            "enabled": true
        },
        "rx_enabled": true,
        "repeat_patient": true,
        "structured_internal_note": {
            "question_sets": [{
                "id": "868130409386303917",
                "prerequisite_answer_id": null,
                "questions": [{
                    "type": "RADIO",
                    "id": "868130409413396487",
                    "label": "Is the member pregnant?",
                    "sort_order": 0,
                    "answers": [{
                            "text": "Yes",
                            "sort_order": 0,
                            "id": "868130409443615081"
                        },
                        {
                            "text": "No",
                            "sort_order": 1,
                            "id": "868130409449460439"
                        }
                    ]
                }]
            }],
            "recorded_answers": [
              {
                "appointment_id": 6612,
                "user_id": 2,
                "question_id": "868130409413396487",
                "answer_id": "868130409443615081",
                "text": null,
                "question_type": "RADIO",
                "payload": null
              }
            ],
            "recorded_answer_set": null,
            "questionnaire": null
        },
        "member_rating": {
            "questionnaires": [],
            "recorded_answers": []
        }
    }


### Edit an Appointment [PATCH]

This example adds a `started_at` date for member and practitioner by just accepting only those resources specifically.

+ Request (application/json)

        {
          "member_started_at": "2014-12-12T12:15:00Z",
          "practitioner_started_at": "2014-12-12T12:15:00Z"
        }

+ Response 200

    + Body

            {"scheduled_start": "2014-12-12T12:15:00Z",
             "scheduled_end": "2014-12-12T12:29:59Z",
             "member": {
               "id": 2,
               "name": "Jane Doe",
               "country": {
                  "name": "United Kingdom",
                  "abbr": "UK",
                  "ext_info_link": "http://google.com/stuff",
                  "summary": "blah blah blah..."
               }
             },
             "product": {"practitioner": {"name": "Jane Smith",
                                          "id": 25,
                                          "avatar_url": "https://cdn.com/image.jpg"},
                         "fee": 60,
                         "id": 4},
             "member_started_at": "2014-12-12T12:15:00Z",
             "member_ended_at": null,
             "practitioner_started_at": "2014-12-12T12:15:00Z",
             "practitioner_ended_at": null,
             "rx_written_at": null,
             "rx_written_via": null,
             "state": "occurring",
             "video": {"session_id": "ibsdfkjsnv9h9h8sds",
                       "member_token": "sakjdnfaf9847r8y",
                       "practitioner_token": "dkfnw9f9w4fsbksd"},
             "privacy": "basic",
             "pre_session": {"notes": "I want to talk about this..."},
             "post_session": {"notes": "Here is something to remember", "created_at": "2014-12-12T12:15:00"},
             "disputed_at": null,
             "ratings": {"category 1": 4, "category 2" 3},
             "id": 1,
             "cancellation_policy": "strict",
             "prescription_info": {"pharmacy_id": 1, "enabled": true}}



### Edit an Appointment [PUT]

This example adds a `started_at` date, which the server then knows when the appointment occurs.

+ Request (application/json)

        {"scheduled_start": "2014-12-12T12:15:00Z",
         "scheduled_end": "2014-12-12T12:29:59Z",
         "member": {"name": "Jane Doe"},
         "product": {"practitioner": {"name": "Jane Smith",
                                      "id": 25,
                                      "avatar_url": "https://cdn.com/image.jpg"},
                     "fee": 60,
                     "id": 4},
         "member_started_at": "2014-12-12T12:15:00Z",
         "member_ended_at": null,
         "practitioner_started_at": "2014-12-12T12:15:00Z",
         "practitioner_ended_at": null,
         "rx_written_at": null,
         "rx_written_via": null,
         "state": "scheduled",
         "video": {"session_id": "ibsdfkjsnv9h9h8sds",
                   "member_token": "sakjdnfaf9847r8y",
                   "practitioner_token": "dkfnw9f9w4fsbksd"},
         "privacy": "basic",
         "pre_session": {"notes": "I want to talk about this..."},
         "post_session": {"notes": "Here is something to remember", "created_at": "2014-12-12T12:15:00"},
         "disputed_at": null,
         "ratings": {"category 1": 4, "category 2" 3},
         "id": 1,
         "cancellation_policy": "strict",
         "prescription_info": {"pharmacy_id": 1, "enabled": true}}

+ Response 200 (application/json)

    + Body

            {"scheduled_start": "2014-12-12T12:15:00Z",
             "scheduled_end": "2014-12-12T12:29:59Z",
             "member": {
               "id": 2,
               "name": "Jane Doe",
               "country": {
                  "name": "United Kingdom",
                  "abbr": "UK",
                  "ext_info_link": "http://google.com/stuff",
                  "summary": "blah blah blah..."
               }
             },
             "product": {"practitioner": {"name": "Jane Smith",
                                          "id": 25,
                                          "avatar_url": "https://cdn.com/image.jpg"},
                         "fee": 60,
                         "id": 4},
             "member_started_at": "2014-12-12T12:15:00Z",
             "member_ended_at": null,
             "practitioner_started_at": "2014-12-12T12:15:00Z",
             "practitioner_ended_at": null,
             "rx_written_at": null,
             "rx_written_via": null,
             "state": "occurring",
             "video": {"session_id": "ibsdfkjsnv9h9h8sds",
                       "member_token": "sakjdnfaf9847r8y",
                       "practitioner_token": "dkfnw9f9w4fsbksd"},
             "privacy": "basic",
             "pre_session": {"notes": "I want to talk about this..."},
             "post_session": {"notes": "Here is something to remember", "created_at": "2014-12-12T12:15:00"},
             "disputed_at": null,
             "ratings": {"category 1": 4, "category 2" 3},
             "id": 1,
             "cancellation_policy": "strict",
             "prescription_info": {"pharmacy_id": 1, "enabled": true}}


### Cancel an Appointment [PUT]

An existing appointment can be cancelled by issuing a PUT with a "cancelled_at" datetime and an optional "cancelled_note" as per below. This will not delete the record, but rather will set the cancellation date and the other party in the appointment will be notified of the action with the note. The cancellation policy outcome will be enforced after this request occurs.

+ Request (application/json)

        {"cancelled_at": "2015-06-17T18:25:06",
        "cancelled_note": "I need to reschedule!"}

+ Response 200 (application/json)

    + Body

            {"scheduled_start": "2014-12-12T12:15:00Z",
             "scheduled_end": "2014-12-12T12:29:59Z",
             "member": {
               "id": 2,
               "name": "Jane Doe",
               "country": {
                  "name": "United Kingdom",
                  "abbr": "UK",
                  "ext_info_link": "http://google.com/stuff",
                  "summary": "blah blah blah..."
               }
             },
             "product": {"practitioner": {"name": "Jane Smith",
                                          "id": 25,
                                          "avatar_url": "https://cdn.com/image.jpg"},
                         "fee": 60,
                         "id": 4},
             "member_started_at": "2014-12-12T12:15:00Z",
             "member_ended_at": null,
             "practitioner_started_at": "2014-12-12T12:15:00Z",
             "practitioner_ended_at": null,
             "rx_written_at": null,
             "rx_written_via": null,
             "state": "occurring",
             "video": {"session_id": "ibsdfkjsnv9h9h8sds",
                       "member_token": "sakjdnfaf9847r8y",
                       "practitioner_token": "dkfnw9f9w4fsbksd"},
             "privacy": "basic",
             "pre_session": {"notes": "I want to talk about this..."},
             "post_session": {"notes": "Here is something to remember", "created_at": "2014-12-12T12:15:00"},
             "disputed_at": null,
             "ratings": {"category 1": 4, "category 2" 3},
             "id": 1,
             "cancelled_at": "2014-12-12T12:15:00Z",
             "cancelled_by": 1,
             "cancelled_note": "I need to reschedule!",
             "cancellation_policy": "strict",
             "prescription_info": {"pharmacy_id": 1, "enabled": true}}


### Start a Phone Call in an Appointment [PUT]

An appointment where video and audio quality in the app degrades to the point where the practitioner decides to call a backup phone number (if the appointment is not anonymous). Payment will be triggered when this action is conducted, by the practitioner PUTing 'phone_call_at' as a datetime.

+ Request (application/json)

        {"scheduled_start": "2014-12-12T12:15:00Z",
         "scheduled_end": "2014-12-12T12:29:59Z",
         "phone_call_at": "2014-12-12T12:29:59Z",
         "member": {"name": "Jane Doe"},
         "product": {"practitioner": {"name": "Jane Smith",
                                      "id": 25,
                                      "avatar_url": "https://cdn.com/image.jpg"},
                     "fee": 60,
                     "id": 4},
         "member_started_at": "2014-12-12T12:15:00Z",
         "member_ended_at": null,
         "practitioner_started_at": "2014-12-12T12:15:00Z",
         "practitioner_ended_at": null,
         "rx_written_at": null,
         "rx_written_via": null,
         "state": "scheduled",
         "video": {"session_id": "ibsdfkjsnv9h9h8sds",
                   "member_token": "sakjdnfaf9847r8y",
                   "practitioner_token": "dkfnw9f9w4fsbksd"},
         "privacy": "basic",
         "pre_session": {"notes": "I want to talk about this..."},
         "post_session": {"notes": "Here is something to remember", "created_at": "2014-12-12T12:15:00"},
         "disputed_at": null,
         "ratings": {"category 1": 4, "category 2" 3},
         "id": 1,
         "cancelled_at": null,
         "cancelled_by": null,
         "cancelled_note": "I need to reschedule!",
         "cancellation_policy": "strict",
         "prescription_info": {"pharmacy_id": 1, "enabled": true}}

+ Response 200 (application/json)

    + Body

            {"scheduled_start": "2014-12-12T12:15:00Z",
             "scheduled_end": "2014-12-12T12:29:59Z",
             "member": {
               "id": 2,
               "name": "Jane Doe",
               "country": {
                  "name": "United Kingdom",
                  "abbr": "UK",
                  "ext_info_link": "http://google.com/stuff",
                  "summary": "blah blah blah..."
               }
             },
             "product": {"practitioner": {"name": "Jane Smith",
                                          "id": 25,
                                          "avatar_url": "https://cdn.com/image.jpg"},
                         "fee": 60,
                         "id": 4},
             "phone_call_at": "2014-12-12T12:15:00Z",
             "member_started_at": "2014-12-12T12:15:00Z",
             "member_ended_at": "2014-12-12T12:15:00Z",
             "practitioner_started_at": "2014-12-12T12:15:00Z",
             "practitioner_ended_at": "2014-12-12T12:15:00Z",
             "rx_written_at": null,
             "rx_written_via": null,
             "state": "payment_pending",
             "video": {"session_id": "ibsdfkjsnv9h9h8sds",
                       "member_token": "sakjdnfaf9847r8y",
                       "practitioner_token": "dkfnw9f9w4fsbksd"},
             "privacy": "basic",
             "pre_session": {"notes": "I want to talk about this..."},
             "post_session": {"notes": "Here is something to remember", "created_at": "2014-12-12T12:15:00"},
             "disputed_at": null,
             "ratings": {"category 1": 4, "category 2" 3},
             "id": 1,
             "cancelled_at": "2014-12-12T12:15:00Z",
             "cancelled_by": 1,
             "cancelled_note": "I need to reschedule!",
             "cancellation_policy": "strict",
             "prescription_info": {"pharmacy_id": 1, "enabled": true}}


### Choose a Pharmacy for an Appointment [PUT]

Using the pharmacy search endpoint, find a pharmacy ID to use for this appointment, and PUT it in the prescription_info object to set it as the pharmacy to use for this appointment. This will become the default pharmacy for all future appts with this practitioner unless it is an invalid choice.

+ Request (application/json)

        {"scheduled_start": "2014-12-12T12:15:00Z",
         "scheduled_end": "2014-12-12T12:29:59Z",
         "phone_call_at": "2014-12-12T12:29:59Z",
         "member": {"name": "Jane Doe"},
         "product": {"practitioner": {"name": "Jane Smith",
                                      "id": 25,
                                      "avatar_url": "https://cdn.com/image.jpg"},
                     "fee": 60,
                     "id": 4},
         "member_started_at": "2014-12-12T12:15:00Z",
         "member_ended_at": null,
         "practitioner_started_at": "2014-12-12T12:15:00Z",
         "practitioner_ended_at": null,
         "rx_written_at": null,
         "rx_written_via": null,
         "state": "scheduled",
         "video": {"session_id": "ibsdfkjsnv9h9h8sds",
                   "member_token": "sakjdnfaf9847r8y",
                   "practitioner_token": "dkfnw9f9w4fsbksd"},
         "privacy": "basic",
         "pre_session": {"notes": "I want to talk about this..."},
         "post_session": {"notes": "Here is something to remember", "created_at": "2014-12-12T12:15:00"},
         "disputed_at": null,
         "ratings": {"category 1": 4, "category 2" 3},
         "id": 1,
         "cancelled_at": null,
         "cancelled_by": null,
         "cancelled_note": "I need to reschedule!",
         "cancellation_policy": "strict",
         "prescription_info": {"pharmacy_id": null, "enabled": true}}

+ Response 200 (application/json)

        {"scheduled_start": "2014-12-12T12:15:00Z",
         "scheduled_end": "2014-12-12T12:29:59Z",
         "member": {
           "id": 2,
           "name": "Jane Doe",
           "country": {
              "name": "United Kingdom",
              "abbr": "UK",
              "ext_info_link": "http://google.com/stuff",
              "summary": "blah blah blah..."
           }
         },
         "product": {"practitioner": {"name": "Jane Smith",
                                      "id": 25,
                                      "avatar_url": "https://cdn.com/image.jpg"},
                     "fee": 60,
                     "id": 4},
         "phone_call_at": "2014-12-12T12:15:00Z",
         "member_started_at": "2014-12-12T12:15:00Z",
         "member_ended_at": "2014-12-12T12:15:00Z",
         "practitioner_started_at": "2014-12-12T12:15:00Z",
         "practitioner_ended_at": "2014-12-12T12:15:00Z",
         "rx_written_at": null,
         "rx_written_via": null,
         "state": "payment_pending",
         "video": {"session_id": "ibsdfkjsnv9h9h8sds",
                   "member_token": "sakjdnfaf9847r8y",
                   "practitioner_token": "dkfnw9f9w4fsbksd"},
         "privacy": "basic",
         "pre_session": {"notes": "I want to talk about this..."},
         "post_session": {"notes": "Here is something to remember", "created_at": "2014-12-12T12:15:00"},
         "disputed_at": null,
         "ratings": {"category 1": 4, "category 2" 3},
         "id": 1,
         "cancelled_at": "2014-12-12T12:15:00Z",
         "cancelled_by": 1,
         "cancelled_note": "I need to reschedule!",
         "cancellation_policy": "strict",
         "prescription_info": {"pharmacy_id": 1, "enabled": true}}

### Submit an RX written for an Appointment [PUT]

A practitioner may submit a prescription for a patient by calling it in using the phone number for the pharmacy selected, or using the dosespot interface. When the rx is submitted in the MPractice app, the rx_written_at property should be set to the time when the "Call" or "Dosespot" button is pressed. The rx_written_via should be set to either "call" or "dosespot" accordingly.

+ Request (application/json)

        {"scheduled_start": "2014-12-12T12:15:00Z",
         "scheduled_end": "2014-12-12T12:29:59Z",
         "phone_call_at": "2014-12-12T12:29:59Z",
         "member": {"name": "Jane Doe"},
         "product": {"practitioner": {"name": "Jane Smith",
                                      "id": 25,
                                      "avatar_url": "https://cdn.com/image.jpg"},
                     "fee": 60,
                     "id": 4},
         "member_started_at": "2014-12-12T12:15:00Z",
         "member_ended_at": null,
         "practitioner_started_at": "2014-12-12T12:15:00Z",
         "practitioner_ended_at": null,
         "rx_written_at": "2014-12-12T12:15:00Z",
         "rx_written_via": "dosespot",
         "state": "scheduled",
         "video": {"session_id": "ibsdfkjsnv9h9h8sds",
                   "member_token": "sakjdnfaf9847r8y",
                   "practitioner_token": "dkfnw9f9w4fsbksd"},
         "privacy": "basic",
         "pre_session": {"notes": "I want to talk about this..."},
         "post_session": {"notes": "Here is something to remember", "created_at": "2014-12-12T12:15:00"},
         "disputed_at": null,
         "ratings": {"category 1": 4, "category 2" 3},
         "id": 1,
         "cancelled_at": null,
         "cancelled_by": null,
         "cancelled_note": "I need to reschedule!",
         "cancellation_policy": "strict",
         "prescription_info": {"pharmacy_id": null, "enabled": true}}

+ Response 200 (application/json)

        {"scheduled_start": "2014-12-12T12:15:00Z",
         "scheduled_end": "2014-12-12T12:29:59Z",
         "member": {
           "id": 2,
           "name": "Jane Doe",
           "country": {
              "name": "United Kingdom",
              "abbr": "UK",
              "ext_info_link": "http://google.com/stuff",
              "summary": "blah blah blah..."
           }
         },
         "product": {"practitioner": {"name": "Jane Smith",
                                      "id": 25,
                                      "avatar_url": "https://cdn.com/image.jpg"},
                     "fee": 60,
                     "id": 4},
         "phone_call_at": "2014-12-12T12:15:00Z",
         "member_started_at": "2014-12-12T12:15:00Z",
         "member_ended_at": "2014-12-12T12:15:00Z",
         "practitioner_started_at": "2014-12-12T12:15:00Z",
         "practitioner_ended_at": "2014-12-12T12:15:00Z",
         "rx_written_at": "2014-12-12T12:15:00Z",
         "rx_written_via": "dosespot",
         "state": "payment_pending",
         "video": {"session_id": "ibsdfkjsnv9h9h8sds",
                   "member_token": "sakjdnfaf9847r8y",
                   "practitioner_token": "dkfnw9f9w4fsbksd"},
         "privacy": "basic",
         "pre_session": {"notes": "I want to talk about this..."},
         "post_session": {"notes": "Here is something to remember", "created_at": "2014-12-12T12:15:00"},
         "disputed_at": null,
         "ratings": {"category 1": 4, "category 2" 3},
         "id": 1,
         "cancelled_at": "2014-12-12T12:15:00Z",
         "cancelled_by": 1,
         "cancelled_note": "I need to reschedule!",
         "cancellation_policy": "strict",
         "prescription_info": {"pharmacy_id": 1, "enabled": true}}


## Appointment Notes [/appointments/{id}/notes]

+ Parameters
    + post_session (object) - post session object for the appointment
    + structured_internal_note (object) - structured internal note or recorded answer data for appointment

### Update notes for an appointment [POST]

+ Response 200 (application/json)

    + Body

    {
      "post_session": {
        "draft": true,
        "notes": "string"
      },
      "structured_internal_note": {
        "recorded_answers": [
          {
            "appointment_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "answer_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "date": "2023-09-14T15:10:01.428Z",
            "payload": "string",
            "question_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "question_type": "ALLERGY_INTOLERANCE",
            "user_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "text": "string"
          }
        ],
        "recorded_answer_set": {
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "appointment_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "draft": true,
          "questionnaire_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "recorded_answers": [
            {
              "appointment_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "answer_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "date": "2023-09-14T15:10:01.428Z",
              "payload": "string",
              "question_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "question_type": "ALLERGY_INTOLERANCE",
              "user_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "text": "string"
            }
          ],
          "source_user_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "submitted_at": "2023-09-14T15:10:01.428Z"
        }
      }
    }

+ Response 200 (application/json)

    + Body

    {
      "post_session": {
        "created_at": "2023-09-14T15:10:01.430Z",
        "draft": true,
        "notes": "string"
      },
      "structured_internal_note": {
        "question_sets": [
          {
            "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "oid": "string",
            "prerequisite_answer_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "questions": [
              {
                "answers": [
                  {
                    "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "oid": "string",
                    "soft_deleted_at": "2023-09-14T15:10:01.430Z",
                    "sort_order": 0,
                    "text": "string"
                  }
                ],
                "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "oid": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "label": "string",
                "non_db_answer_options_json": "string",
                "required": true,
                "soft_deleted_at": "2023-09-14T15:10:01.430Z",
                "sort_order": 0,
                "text": "string"
              }
            ],
            "soft_deleted_at": "2023-09-14T15:10:01.430Z",
            "sort_order": 0
          }
        ],
        "questionnaire": {
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "oid": "string",
          "description_text": "string",
          "question_sets": [
            {
              "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "oid": "string",
              "prerequisite_answer_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "questions": [
                {
                  "answers": [
                    {
                      "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "oid": "string",
                      "soft_deleted_at": "2023-09-14T15:10:01.430Z",
                      "sort_order": 0,
                      "text": "string"
                    }
                  ],
                  "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "oid": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "label": "string",
                  "non_db_answer_options_json": "string",
                  "required": true,
                  "soft_deleted_at": "2023-09-14T15:10:01.430Z",
                  "sort_order": 0,
                  "text": "string"
                }
              ],
              "soft_deleted_at": "2023-09-14T15:10:01.430Z",
              "sort_order": 0
            }
          ],
          "soft_deleted_at": "2023-09-14T15:10:01.430Z",
          "sort_order": 0,
          "title_text": "string",
          "trigger_answer_ids": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        },
        "recorded_answers": [
          {
            "appointment_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "answer_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "date": "2023-09-14T15:10:01.430Z",
            "payload": "string",
            "question_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "question_type": "ALLERGY_INTOLERANCE",
            "user_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "text": "string"
          }
        ],
        "recorded_answer_set": {
          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "appointment_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "draft": true,
          "questionnaire_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "recorded_answers": [
            {
              "appointment_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "answer_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "date": "2023-09-14T15:10:01.430Z",
              "payload": "string",
              "question_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "question_type": "ALLERGY_INTOLERANCE",
              "user_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
              "text": "string"
            }
          ],
          "source_user_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "submitted_at": "2023-09-14T15:10:01.430Z"
        }
      }
    }


## Reschedule Appointment [/appointments/{id}/reschedule]

### Reschedule an appointment to a different time [PATCH]

+ Response 200 (application/json)

    + Body

    {
        "scheduled_start": "2023-12-12T12:15:00Z",
        "scheduled_end": "2023-12-12T12:29:59Z",
        "member": {
            "id": 2,
            "name": "Jane Doe",
            "last_name": "Doe",
            "first_name": "Jane",
            "role": "member",
            "image_url": null,
            "organization": {
                "id": 1,
                "bms_enabled": true,
                "rx_enabled": true,
                "vertical_group_version": "v2",
                "name": "Maven"
            },
            "country": {
                "name": "United Kingdom",
                "abbr": "UK",
                "ext_info_link": "http://google.com/stuff",
                "summary": "blah blah blah..."
            },
            "care_coordinators": []
        },
        "product": {
            "practitioner": {
                "name": "Jane Smith",
                "id": 25,
                "avatar_url": "https://cdn.com/image.jpg"
            },
            "fee": 60,
            "id": 4
        },
        "member_started_at": null,
        "member_ended_at": null,
        "practitioner_started_at": null,
        "practitioner_ended_at": null,
        "rx_written_at": null,
        "rx_written_via": null,
        "state": "scheduled",
        "video": {
            "session_id": "",
            "member_token": "",
            "practitioner_token": ""
        },
        "privacy": "basic",
        "pre_session": {
            "notes": "I want to talk about this..."
        },
        "post_session": {
            "notes": "",
            "created_at": null
        },
        "disputed_at": null,
        "ratings": {},
        "id": 1,
        "cancellation_policy": "moderate",
        "prescription_info": {
            "enabled": false,
            "pharmacy_info": null,
            "pharmacy_id": ""
        },
        "rx_enabled": false,
        "repeat_patient": false,
        "structured_internal_note": null,
        "member_rating": {
            "questionnaires": [],
            "recorded_answers": []
        }
    }


## Cancellation Policies [/cancellation_policies]

### Get the Available Policies [GET]

+ Response 200 (application/json)

        {"data": [{"name": "strict",
                   "24_hour_refund_percent": 0,
                   "48_hour_refund_percent": 50},
                  {"name": "moderate",
                   "24_hour_refund_percent": 50,
                   "48_hour_refund_percent": 75}]}


## Pharmacy Search [/prescriptions/pharmacy_search/{appointment_id}?{zip_code,pharmacy_name}]

# Search for a Pharmacy [GET]

+ Parameters
    + zip_code (required, string) ... this is the zip to search for pharmacies in.
    + pharmacy_name (optional, string) ... name refinement for search.

+ Response 200 (application/json)

    + Body

            {"data": [{"Pharmacy": null,
             "State": "DC",
             "PrimaryPhoneType": "Work",
             "Address1": "90001 1ST ST",
             "PrimaryFax": "2025551213",
             "PharmacyId": "1",
             "ZipCode": "20000",
             "PrimaryPhone": "2025551212",
             "StoreName": "Test One Pharmacy",
             "Address2": "1ST FL",
             "City": "Washington"}]}


## Prescription Writing URL [/prescriptions/patient_details/{appointment_id}]


# Get a Dosespot URL for Writing a Prescription [GET]

+ Parameters
    + appointment_id (number, required) - ID of the appointment

+ Response 200 (application/json)

    + Body

            {"url": "https://dosespot.com/patientdetailsurl"}


# Booking Flow Search

## Booking Flow [/booking_flow/search]

### Get a list of information needed to guide a user through the booking flow process. [GET]

This endpoint allows you to search through verticals, specialties, keywords, needs, need categories and practitioners given a search query.

+ Response 200 (application/json)

        {
          "data": {
            "specialties": [{
              "id": 1,
              "name": "cold & flu"
            }],
            "verticals": [{
              "id": 1,
              "name": "Wellness Coach",
              "can_prescribe": "True"
            }],
            "practitioners": [{
              "id": 2,
              "name": "Jane Smith",
            }],
            "keywords": [{
              "name": "Jane Smith",
              "specialty_ids": [ 1, 2, 3]
            }],
            "needs": [{
              "id": 2,
              "name": "Second Opinion",
            }],
            "need_categories": [{
              "id": 2,
              "name": "Mental Health",
            }],
          }
        }

## Verticals / Specialties [/verticals-specialties{?query,is_common,limit,offset,order_direction}]

### Fetch vertical and specialty information based on the provided query. [GET]

+ Parameters
    + query (string, optional) - query to apply for verticals and specialties. Filters on vertical.name and specialty.name.
    + is_common (boolean, optional) - if true, only return "common" specialties and no verticals.
    + offset (number, optional) - the number verticals and specialties to skip.
        + Default: 0
    + limit (number, optional) - the number verticals and specialties to return. The result will include (at most) this many verticals, and this many specialties.
        + Default: 10
    + order_direction (string, optional) - the sorting order.
        + Default: desc

+ Response 200 (application/json)

{
    "meta": {
        "order_direction": "desc",
        "is_common": false,
    },
    "pagination": {
        "order_direction": "desc",
        "offset": 0,
        "total": 63,
        "limit": 2
    },
    "data": {
        "specialties": [
            {
                "name": "Example Specialty 1",
                "id": 7
            },
            {
                "name": "Example Specialty 2",
                "id": 10
            },
        ],
        "verticals": [
            {
                "name": "Example Vertical 1",
                "id": 63,
                "can_prescribe": true
            },
            {
                "name": "Example Vertical 2,
                "id": 62,
                "can_prescribe": false
            }
        ]
    }
}

## Practitioners' Availabilities [/practitioners/availabilities]

### Get availability and related data for all relevant practitioners within a timeframe. [POST]

+ Request Body Args
    + practitioner_ids (list[number], required) - the practitioners to fetch availability for.
    + can_prescribe (bool, optional) - if true, only returns availability for practitioners in a vertical where can_prescribe is true.
    + provider_type (string, optional) - if non-empty, only returns availability slots with the given vertical name.
    + start_time (ISO8601 Datetime String, optional) - start of the time range to search for availabilities.
        + Default: now
    + end_time (ISO8601 Datetime String, optional) - end of the time range to search for availabilities.
        + Default: start_time + 7 days
    + offset (number, optional) - the number of availability slots to skip per practitioner.
        + Default: 0
    + limit (number, optional) - the number of availability slots to return per practitioner.
        + Default: 10

+ Request

{
    "practitioner_ids": [29, 33],
    "limit": 2,
    "offset": 3,
    "can_prescribe": true
}

+ Response 200 (application/json)

{
    "data": [
        {
            "product_price": 25.0,
            "availabilities": [
                {
                    "total_available_credits": 2000,
                    "end_time": "2022-06-03T17:05:00+00:00",
                    "start_time": "2022-06-03T16:50:00+00:00"
                },
                {
                    "total_available_credits": 2000,
                    "end_time": "2022-06-03T17:25:00+00:00",
                    "start_time": "2022-06-03T17:10:00+00:00"
                }
            ],
            "practitioner_id": 29,
            "duration": 15,
            "product_id": 13
        },
        {
            "product_price": 18.0,
            "availabilities": [
                {
                    "total_available_credits": 2000,
                    "end_time": "2022-06-03T16:30:00+00:00",
                    "start_time": "2022-06-03T16:20:00+00:00"
                },
                {
                    "total_available_credits": 2000,
                    "end_time": "2022-06-03T16:40:00+00:00",
                    "start_time": "2022-06-03T16:30:00+00:00"
                }
            ],
            "practitioner_id": 33,
            "duration": 10,
            "product_id": 153
        }
    ],
    "pagination": {
        "limit": 2,
        "offset": 3,
        "total": 0,
        "order_direction": "desc"
    },
    "meta": null
}



## Practitioners' Dates with Availability [/practitioners/dates_available]

### Get dates with corresponding availability for any of the provided practitioners within a timeframe. [POST]

+ Request Body Args
    + practitioner_ids (list[number], required) - the practitioners to fetch availability for.
    + member_timezone (string, required) - the timezone designation the member is located in.
    + can_prescribe (bool, optional) - if true, only returns availability for practitioners in a vertical where can_prescribe is true.
    + provider_type (string, optional) - if non-empty, only returns availability slots with the given vertical name.
    + start_time (ISO8601 Datetime String, optional) - start of the time range to search for availabilities.
        + Default: now
    + end_time (ISO8601 Datetime String, optional) - end of the time range to search for availabilities.
        + Default: start_time + 29 days

+ Request

{
    "practitioner_ids": [29, 33],
    "member_timezone": "America/Chicago",
    "can_prescribe": true,
    "provider_type": "OB-GYN"
}

+ Response 200 (application/json)

{
    data: [
        {
            date: "2022-06-03",
            hasAvailability: false
        },
        {
            date: "2022-06-04",
            hasAvailability: true
        },
        {
            date: "2022-06-05",
            hasAvailability: true
        },
    ],
    "meta": null
}



# Group Health Profile

The **Health Profile API** allows you get information about a user's health data stored in Maven.

## Health Profile [/users/{id}/health_profile]

+ Parameters
    + id (number) - ID of the User

+ Model

    A JSON Representation of a User's Health Profile

    + Body

            {
              "abortions": 0,
              "activity_level": "",
              "birthday": "",
              "children": [
                {
                  "birthday": "2011-03-14",
                  "id": "117760dd-8e0c-4321-ba98-793a17c9f720",
                  "name": "Frank"
                },
                {
                  "birthday": "2013-03-14",
                  "id": "c4bbb428-0a07-4491-96a9-2605b091ab4f",
                  "name": "And"
                },
                {
                  "birthday": "2016-03-14",
                  "id": "dc420934-89a2-44fb-b4e4-894aab3e4594",
                  "name": "Beans"
                },
                {
                  "birthday": "2016-11-14",
                  "id": "27234183-42d2-40b4-831a-f9b9f55d25fa",
                  "name": "Here"
                }
              ],
              "due_date": "",
              "food_allergies": "",
              "full_term_babies": 0,
              "gender": "",
              "health_issues_current": "",
              "health_issues_past": "",
              "height": 0,
              "insurance": "",
              "life_stage": 3,
              "medications_allergies": "",
              "medications_current": "",
              "medications_past": "",
              "miscarrages": 0,
              "number_of_pregnancies": 0,
              "premature_babies": 0,
              "weight": 0
            }

### Get User's Health Profile Information [GET]

A user has health data stored in Maven.

+ Response 200 (application/json)

    [Health Profile][]

### Edit a User's Health Profile Information [PUT]

+ Request (application/json)

    [Health Profile][]

+ Response 200 (application/json)

    [Health Profile][]

### Partially Edit User's Health Profile Information [PATCH]

The partial health profile object can be a single item or multiple items.
See `HealthProfileSchema` for all the item names available to be edited.

+ Request (application/json)

    [Health Profile][]

+ Response 200 (application/json)

    [Health Profile][]


## Care Team [/users/{id}/care_team{?types,limit,offset}]

See the practitioners that you have had appointments with on Maven as well as the ones that Maven matches for you.

+ Parameters
    + id (number) - ID of the User
    + types (optional, csv string) ... care team type filter, a comma separated value string, e.g. `QUIZ,APPOINTMENT`.
    + limit (optional, int) ... how many to return, default is 10.
    + offset (optional, int) ... how many results to skip. default is 0.

### Get User's Care Team [GET]

+ Response 200 (application/json)

    + Body

            {
              "data": [
                {
                  "organization": null,
                  "name": "Jane1 Smith1",
                  "image_url": null,
                  "first_name": "Jane1",
                  "subscription_plans": null,
                  "last_name": "Smith1",
                  "id": 1,
                  "image_id": 1,
                  "encoded_id": null,
                  "test_group": "a",
                  "username": "",
                  "care_team_type": "APPOINTMENT",
                  "role": "practitioner",
                  "programs": null,
                  "email": null,
                  "middle_name": "",
                  "avatar_url": "",
                  "next_availability": "2014-6-12T12:12:12Z",
                  "profiles": {
                    "member": {
                      "color_hex": ""
                    },
                    "practitioner": {
                      "years_experience": 12,
                      "can_prescribe": true,
                      "messaging_enabled": true,
                      "cancellation_policy": "strict",
                      "certifications": [
                        "RN"
                      ],
                      "verticals": [
                        "MD"
                      ],
                      "categories": [
                        "breastfeeding",
                        "digestion"
                      ],
                      "certified_states": [
                        "NY"
                      ],
                      "is_cx": false
                    }
                  },
                }
              ]
            }

### Add to an user's Care Team [POST /users/{id}/care_team]

Add practitioner(s) to an user's care team via `QUIZ`. Only QUIZ type care team practitioner(s) can be added through API.
All other care team types practitioners will be added automatically by the system when appropriate.

+ Parameters
    + id (number) - ID of the User

+ Request Care Team Practitioners Object (application/json)

        {
            "practitioner_ids": [1, 2]
        }

+ Response 201 (application/json)

            {
              "data": [
                {
                  "profiles": {
                    "member": {
                      "color_hex": ""
                    },
                    "practitioner": {
                      "can_prescribe": true,
                      "messaging_enabled": true,
                      "years_experience": 12,
                      "cancellation_policy": "strict",
                      "certifications": [
                        "RN"
                      ],
                      "verticals": [
                        "MD"
                      ],
                      "categories": [
                        "breastfeeding",
                        "digestion"
                      ],
                      "certified_states": [
                        "NY"
                      ],
                      "is_cx": false,
                      "can_member_interact": true
                    }
                  },
                  "organization": null,
                  "name": "Jane Doe",
                  "image_url": null,
                  "subscription_plans": null,
                  "id": 1,
                  "encoded_id": null,
                  "test_group": "a",
                  "username": "",
                  "role": "practitioner",
                  "programs": null,
                  "email": null,
                  "middle_name": "",
                  "avatar_url": "",
                  "care_team_type": "QUIZ",
                  "image_id": 1,
                  "last_name": "Doe",
                  "next_availability": "2014-6-12T12:12:12Z",
                  "first_name": "Jane"
                },
                {
                  "profiles": {
                    "member": {
                      "color_hex": ""
                    },
                    "practitioner": {
                      "can_prescribe": true,
                      "messaging_enabled": true,
                      "years_experience": 12,
                      "cancellation_policy": "strict",
                      "certifications": [
                        "RN"
                      ],
                      "verticals": [
                        "MD"
                      ],
                      "categories": [
                        "breastfeeding",
                        "digestion"
                      ],
                      "certified_states": [
                        "NY"
                      ],
                      "is_cx": false,
                      "can_member_interact": true
                    }
                  },
                  "organization": null,
                  "name": "Jane1 Doe1",
                  "image_url": null,
                  "subscription_plans": null,
                  "id": 1,
                  "encoded_id": null,
                  "test_group": "a",
                  "username": "",
                  "role": "practitioner",
                  "programs": null,
                  "email": null,
                  "middle_name": "",
                  "avatar_url": "",
                  "care_team_type": "QUIZ",
                  "image_id": 2,
                  "last_name": "Doe1",
                  "next_availability": "2014-6-12T12:12:12Z",
                  "first_name": "Jane1"
                }
              ]
            }

### Delete a Practitioner from User's Care Team [DELETE /users/{id}/care_team/{practitioner_id}]

Edit an user's care team but add/remove practitioner(s).

+ Parameters
    + id (number) - ID of the User
    + practitioner_id (number) - Practitioner's User ID

+ Response 204


## Life Stages [/users/life_stages]

Describes all life stages available to be selected for enterprise user on-boarding.

### List All Life Stages [GET]

+ Response 200 (application/json)

    + Body

            [
              {
                "id": "stage-1",
                "title": "I'm not pregnant",
                "subtitle": "And don't want to be anytime soon",
                "image": "life-stage-1"
              },
              {
                "id": "stage-2",
                "title": "I'm trying to get pregnant",
                "subtitle": "But it hasn't happened yet",
                "image": "life-stage-2"
              },
              {
                "id": "stage-3",
                "title": "I'm pregnant!",
                "subtitle": "",
                "image": "life-stage-3"
              },
              {
                "id": "stage-4",
                "title": "I'm a new mom",
                "subtitle": "With a baby under 24 months",
                "image": "life-stage-4"
              },
              {
                "id": "stage-5",
                "title": "I'm a parent",
                "subtitle": "With one or more kids at home",
                "image": "life-stage-5"
              }
            ]

# Group Public Gifting

An endpoint to gift maven to someone else. Does not require any maven account on either end.

## Gift Maven Credits [/unauthenticated/gifting]

### Send a Credit [POST]
Gift message is optional. Gift amount should be in cents (as per stripe convention).

+ Request (application/json)

            {"gift_amount": 1000,
             "gift_email": "foo@bar.com",
             "gift_name": "Jill Jackson",
             "gift_message": "U will luv this!!",
             "sender_name": "Jason Jackson",
             "sender_email": "foo@bar.com",
             "stripe_token": "tok_aoebfwgeifgw8h7fniweocn"}

+ Response 204

## Overflow Reports [/overflow_report]

Internal endpoint for use in checking overflows via an email to practitioners.

### Report the status [POST]

YES or NO

+ Response 200 (application/json)

    + Body

            {"report": "YES",
             "token": "ANFKBKSDBGKSUGNNFLSGD"}


# Group Message Channel

Channel is the logical organization for message conversation and participants.

## Channels Collection

### List Channels [GET /channels/{?empty,offset,limit,order_direction}]

This lists channels for the current API caller.

+ Parameters
    + empty (boolean, optional) - A flag to indicate whether we should list channels with messages or not. Default is to show all channels (including empty ones).
        + Default: 1
    + offset (number, optional) - the number channels to skip.
        + Default: 0
    + limit (number, optional) - the number channels per page.
        + Default: 10
    + order_direction (string, optional) - the sorting order.
        + Default: desc

+ Response 200 (application/json)

    + Body

            {
              "pagination": {
                "limit": 10,
                "offset": 0,
                "total": 3,
                "order_direction": "asc"
              },
              "data": [
                {
                  "id": 3,
                  "last_message": {
                    "author": {
                      "avatar_url": "",
                      "email": "williams@test.com",
                      "first_name": "Member",
                      "id": 1,
                      "image_id": 0,
                      "image_url": null,
                      "last_name": "Williams",
                      "middle_name": "",
                      "name": "Member Williams",
                      "profiles": {
                        "member": {
                          "address": {
                            "city": "",
                            "country": "",
                            "state": "",
                            "street_address": "",
                            "zip_code": ""
                          },
                          "tel_number": "",
                          "state": "NY"
                        }
                      },
                      "role": "member",
                      "username": "MemberW",
                      "country": {
                        "name": "United Kingdom",
                        "abbr": "UK",
                        "ext_info_link": "http://google.com/stuff",
                        "summary": "blah blah blah..."
                      },
                      "active_tracks": [
                        {
                            "id": 1102754,
                            "name": "pregnancy",
                            "display_name": "Pregnancy",
                            "start_date": "2024-07-31T23:23:31",
                            "scheduled_end": "2025-10-02",
                            "ended_at": null,
                            "track_modifiers": ["doula_only"]
                        }
                      ],
                    },
                    "body": "First message is a freebie.",
                    "created_at": "2015-11-04T21:13:49",
                    "id": 22,
                    "meta": [
                      {
                        "is_acknowledged": false,
                        "is_read": true,
                        "user_id": 1
                      },
                      {
                        "is_acknowledged": false,
                        "is_read": false,
                        "user_id": 2
                      }
                    ]
                  },
                  "name": "Jane1 & Practitioner",
                  "new_messages": 0,
                  "participants": [
                    {
                      "is_anonymous": false,
                      "is_initiator": true,
                      "max_chars": 4096,
                      "user": {
                        "avatar_url": "",
                        "email": "test@test.com",
                        "first_name": "Jane1",
                        "id": 1,
                        "image_id": 0,
                        "image_url": null,
                        "last_name": "Member",
                        "middle_name": "",
                        "name": "Jane1 Member",
                        "profiles": {
                          "member": {
                            "address": {
                              "city": "",
                              "country": "",
                              "state": "",
                              "street_address": "",
                              "zip_code": ""
                            },
                            "tel_number": "",
                            "tel_region": "",
                            "state": "NY"
                          }
                        },
                        "role": "member",
                        "username": "Jane1M",
                        "country": {
                          "name": "United Kingdom",
                          "abbr": "UK",
                          "ext_info_link": "http://google.com/stuff",
                          "summary": "blah blah blah..."
                        }
                        "active_tracks": [
                          {
                            "id": 1102754,
                            "name": "pregnancy",
                            "display_name": "Pregnancy",
                            "start_date": "2024-07-31T23:23:31",
                            "scheduled_end": "2025-10-02",
                            "ended_at": null,
                            "track_modifiers": ["doula_only"]
                          }
                        ],
                      }
                    },
                    {
                      "is_anonymous": false,
                      "is_initiator": false,
                      "max_chars": null,
                      "user": {
                        "avatar_url": "",
                        "email": null,
                        "first_name": "Practitioner",
                        "id": 2,
                        "image_id": 0,
                        "image_url": null,
                        "last_name": "Doe",
                        "middle_name": "",
                        "name": "Practitioner Doe",
                        "profiles": {
                          "member": {},
                          "practitioner": {
                            "awards": "",
                            "can_prescribe": false,
                            "cancellation_policy": "moderate",
                            "categories": [],
                            "certifications": [],
                            "certified_states": [],
                            "education": "",
                            "is_cx": false,
                            "languages": [],
                            "messaging_enabled": true,
                            "next_availability": null,
                            "reference_quote": "",
                            "response_time": 24,
                            "specialties": [],
                            "user_id": 2,
                            "vertical_objects": [
                              {
                                "can_prescribe": false,
                                "id": 5,
                                "name": "Physical Therapist"
                              }
                            ],
                            "verticals": [
                              "Physical Therapist"
                            ],
                            "work_experience": "",
                            "years_experience": 0,
                            "can_member_interact": true
                          }
                        },
                        "role": "practitioner",
                        "username": "PractitionerP",
                        "country": null,
                        "active_tracks": [],
                      }
                    }
                  ],
                  "internal": false,
                  "total_messages": 4,
                  "wallet_id": null
                },
                {
                      "id": 13,
                      "last_message": {
                        "author": {
                          "avatar_url": "",
                          "email": "jane1@test.com",
                          "first_name": "Jane",
                          "id": 3,
                          "image_id": 0,
                          "image_url": null,
                          "last_name": "Doe",
                          "middle_name": "J",
                          "name": "Jane J Doe",
                          "profiles": {
                            "member": {}
                          },
                          "role": "member",
                          "username": "Jane29785"
                          "active_tracks": [
                            {
                              "id": 1102754,
                              "name": "pregnancy",
                              "display_name": "Pregnancy",
                              "start_date": "2024-07-31T23:23:31",
                              "scheduled_end": "2025-10-02",
                              "ended_at": null,
                              "track_modifiers": ["doula_only"]
                            }
                          ],
                        },
                        "body": "Message body updated.",
                        "created_at": "2015-12-08T19:32:21",
                        "id": 23,
                        "meta": [
                          {
                            "is_acknowledged": false,
                            "is_read": false,
                            "user_id": 1
                          },
                          {
                            "is_acknowledged": false,
                            "is_read": false,
                            "user_id": 3
                          }
                        ]
                      },
                      "name": "Member & Jane",
                      "new_messages": 1,
                      "participants": [
                        {
                          "is_anonymous": false,
                          "is_initiator": true,
                          "max_chars": 4096,
                          "user": {
                            "avatar_url": "",
                            "email": "member@test.com",
                            "first_name": "Member",
                            "id": 1,
                            "image_id": 0,
                            "image_url": null,
                            "last_name": "Doe",
                            "middle_name": "",
                            "name": "Member Doe",
                            "profiles": {
                              "member": {
                                "address": {
                                  "city": "",
                                  "country": "",
                                  "state": "",
                                  "street_address": "",
                                  "zip_code": ""
                                },
                                "tel_number": "",
                                "tel_region": "",
                                "state": "NY"
                              }
                            },
                            "role": "member",
                            "username": "MemberD"
                            "active_tracks": [
                              {
                                "id": 1102754,
                                "name": "pregnancy",
                                "display_name": "Pregnancy",
                                "start_date": "2024-07-31T23:23:31",
                                "scheduled_end": "2025-10-02",
                                "ended_at": null,
                                "track_modifiers": ["doula_only"]
                              }
                            ],
                          }
                        },
                        {
                          "is_anonymous": false,
                          "is_initiator": false,
                          "max_chars": 4096,
                          "user": {
                            "avatar_url": "",
                            "email": null,
                            "first_name": "Jane",
                            "id": 3,
                            "image_id": 0,
                            "image_url": null,
                            "last_name": "Doe",
                            "middle_name": "J",
                            "name": "Jane Doe",
                            "profiles": {
                              "member": {}
                            },
                            "role": "member",
                            "username": "Jane29785"
                            "active_tracks": [
                              {
                                "id": 1102754,
                                "name": "pregnancy",
                                "display_name": "Pregnancy",
                                "start_date": "2024-07-31T23:23:31",
                                "scheduled_end": "2025-10-02",
                                "ended_at": null,
                                "track_modifiers": ["doula_only"]
                              }
                            ],
                          }
                        }
                      ],
                      "internal": false,
                      "total_messages": 1,
                      "wallet_id": null
                },
                {
                  "id": 4,
                  "last_message": null,
                  "name": "Member & Practitioner",
                  "new_messages": 0,
                  "participants": [
                    {
                      "is_anonymous": false,
                      "is_initiator": true,
                      "max_chars": 4096,
                      "user": {
                        "avatar_url": "",
                        "email": "joe@test.com",
                        "first_name": "Member",
                        "id": 1,
                        "image_id": 0,
                        "image_url": null,
                        "last_name": "Joe",
                        "middle_name": "",
                        "name": "Member Joe",
                        "profiles": {
                          "member": {
                            "address": {
                              "city": "",
                              "country": "",
                              "state": "",
                              "street_address": "",
                              "zip_code": ""
                            },
                            "tel_number": "",
                            "tel_region": "",
                            "state": "NY"
                          }
                        },
                        "role": "member",
                        "username": "MemberJ",
                        "active_tracks": [
                          {
                            "id": 1102754,
                            "name": "pregnancy",
                            "display_name": "Pregnancy",
                            "start_date": "2024-07-31T23:23:31",
                            "scheduled_end": "2025-10-02",
                            "ended_at": null,
                            "track_modifiers": ["doula_only"]
                          }
                        ],
                      }
                    },
                    {
                      "is_anonymous": false,
                      "is_initiator": false,
                      "max_chars": null,
                      "user": {
                        "avatar_url": "",
                        "email": "gold@test.com",
                        "first_name": "Practitioner",
                        "id": 2,
                        "image_id": 0,
                        "image_url": null,
                        "last_name": "Gold",
                        "middle_name": "",
                        "name": "Practitioner Gold",
                        "profiles": {
                          "member": {},
                          "practitioner": {
                            "awards": "",
                            "can_prescribe": false,
                            "cancellation_policy": "moderate",
                            "categories": [],
                            "certifications": [],
                            "certified_states": [],
                            "education": "",
                            "is_cx": false,
                            "languages": [],
                            "messaging_enabled": true,
                            "next_availability": null,
                            "reference_quote": "",
                            "response_time": 24,
                            "specialties": [],
                            "user_id": 2,
                            "vertical_objects": [
                              {
                                "can_prescribe": false,
                                "id": 5,
                                "name": "Physical Therapist"
                              }
                            ],
                            "verticals": [
                              "Physical Therapist"
                            ],
                            "work_experience": "",
                            "years_experience": 0,
                            "can_member_interact": true
                          }
                        },
                        "role": "practitioner",
                        "username": "PractitionerG",
                        "active_tracks": [],
                      }
                    }
                  ],
                  "internal": false,
                  "total_messages": 0,
                  "wallet_id": null
                }
              ]
            }

### Open a Channel [POST /channels/]

The initiator of the conversation is the current authenticated user (AKA the caller of this API endpoint).
The target audience's `user_id` should be passed in as the other party of conversation.

+ Parameters
    + user_ids (enum[number], required) - User IDs of the other participants in the conversation.

+ Request Audience Object (application/json)

        {
            "user_ids": [2]
        }

+ Response 201 (application/json)

    + Body

            {
              "id": 3,
              "last_message": {
                "author": {
                  "avatar_url": "",
                  "email": "jane@test.com",
                  "first_name": "Jane",
                  "id": 1,
                  "image_id": 0,
                  "image_url": null,
                  "last_name": "Smith",
                  "middle_name": "",
                  "name": "Jane Smith",
                  "profiles": {
                    "member": {
                      "address": {
                        "city": "",
                        "country": "",
                        "state": "",
                        "street_address": "",
                        "zip_code": ""
                      },
                      "tel_number": "",
                      "tel_region": "",
                      "state": "NY"
                    }
                  },
                  "role": "member",
                  "username": "JaneS",
                  "country": {
                    "name": "United Kingdom",
                    "abbr": "UK",
                    "ext_info_link": "http://google.com/stuff",
                    "summary": "blah blah blah..."
                  },
                  "active_tracks": [
                    {
                      "id": 1102754,
                      "name": "pregnancy",
                      "display_name": "Pregnancy",
                      "start_date": "2024-07-31T23:23:31",
                      "scheduled_end": "2025-10-02",
                      "ended_at": null,
                      "track_modifiers": ["doula_only"]
                    }
                  ],
                },
                "body": "First message is a freebie?",
                "created_at": "2015-11-04T21:13:49",
                "id": 22,
                "meta": [
                  {
                    "is_acknowledged": false,
                    "is_read": true,
                    "user_id": 1
                  },
                  {
                    "is_acknowledged": false,
                    "is_read": false,
                    "user_id": 2
                  }
                ]
              },
              "name": "Jane & Jane1",
              "new_messages": 0,
              "participants": [
                {
                  "is_anonymous": false,
                  "is_initiator": true,
                  "max_chars": 200,
                  "user": {
                    "avatar_url": "",
                    "email": "jane@test.com",
                    "first_name": "Jane",
                    "id": 1,
                    "image_id": 0,
                    "image_url": null,
                    "last_name": "Smith",
                    "middle_name": "",
                    "name": "Jane Smith",
                    "profiles": {
                      "member": {
                        "address": {
                          "city": "",
                          "country": "",
                          "state": "",
                          "street_address": "",
                          "zip_code": ""
                        },
                        "tel_number": "",
                        "tel_region": "",
                        "state": "NY"
                      }
                    },
                    "role": "member",
                    "username": "JaneS",
                    "country": {
                      "name": "United Kingdom",
                      "abbr": "UK",
                      "ext_info_link": "http://google.com/stuff",
                      "summary": "blah blah blah..."
                    }
                  },
                  "active_tracks": [
                    {
                      "id": 1102754,
                      "name": "pregnancy",
                      "display_name": "Pregnancy",
                      "start_date": "2024-07-31T23:23:31",
                      "scheduled_end": "2025-10-02",
                      "ended_at": null,
                      "track_modifiers": ["doula_only"]
                    }
                  ],
                },
                {
                  "is_anonymous": false,
                  "is_initiator": false,
                  "max_chars": 200,
                  "user": {
                    "avatar_url": "",
                    "email": "jane1@test.com",
                    "first_name": "Jane1",
                    "id": 2,
                    "image_id": 0,
                    "image_url": null,
                    "last_name": "Doe",
                    "middle_name": "",
                    "name": "Jane1 Doe",
                    "profiles": {
                      "member": {},
                      "practitioner": {
                        "awards": "",
                        "can_prescribe": false,
                        "cancellation_policy": "moderate",
                        "categories": [],
                        "certifications": [],
                        "certified_states": [],
                        "is_cx": false,
                        "education": "",
                        "languages": [],
                        "messaging_enabled": true,
                        "next_availability": null,
                        "reference_quote": "",
                        "response_time": 24,
                        "specialties": [],
                        "user_id": 2,
                        "vertical_objects": [
                          {
                            "can_prescribe": false,
                            "id": 5,
                            "name": "Physical Therapist"
                          }
                        ],
                        "verticals": [
                          "Physical Therapist"
                        ],
                        "work_experience": "",
                        "years_experience": 0,
                        "can_member_interact": true
                      }
                    },
                    "role": "practitioner",
                    "username": "Jane1D",
                    "country": null,
                    "active_tracks": []
                  }
                }
              ],
              "internal": false,
              "total_messages": 4
            }

## Channel Status [/channel/{channel_id}/status]

### Get Channel Status [GET]

+ Parameters
    + channel_id (number) - ID of the messaging channel

+ Response 200 (application/json)

    + Body

            {
              "id": 13,
              "last_message": {
                "author": {
                  "avatar_url": "",
                  "email": "jane@example.com",
                  "first_name": "Jane",
                  "id": 3,
                  "image_id": 0,
                  "image_url": null,
                  "last_name": "Doe",
                  "middle_name": "J",
                  "name": "Jane Doe",
                  "profiles": {
                    "member": {
                      "address": {
                        "city": "",
                        "country": "",
                        "state": "",
                        "street_address": "",
                        "zip_code": ""
                      },
                      "tel_number": "",
                      "tel_region": "",
                      "state": null
                    }
                  },
                  "role": "member",
                  "username": "Jane29785",
                  "country": {
                    "name": "United Kingdom",
                    "abbr": "UK",
                    "ext_info_link": "http://google.com/stuff",
                    "summary": "blah blah blah..."
                  },
                  "active_tracks": [
                    {
                      "id": 1102754,
                      "name": "pregnancy",
                      "display_name": "Pregnancy",
                      "start_date": "2024-07-31T23:23:31",
                      "scheduled_end": "2025-10-02",
                      "ended_at": null,
                      "track_modifiers": ["doula_only"]
                    }
                  ],
                },
                "body": "Message body updated.",
                "created_at": "2015-12-08T19:32:21",
                "id": 23,
                "meta": [
                  {
                    "is_acknowledged": false,
                    "is_read": false,
                    "user_id": 1
                  },
                  {
                    "is_acknowledged": false,
                    "is_read": false,
                    "user_id": 3
                  }
                ]
              },
              "name": "Jane & Jane1",
              "new_messages": 1,
              "participants": [
                {
                  "is_anonymous": false,
                  "is_initiator": true,
                  "max_chars": 4096,
                  "user": {
                    "avatar_url": "",
                    "email": "jane1@test.com",
                    "first_name": "Jane",
                    "id": 2,
                    "image_id": 0,
                    "image_url": null,
                    "last_name": "Smith",
                    "middle_name": "",
                    "name": "Jane Smith",
                    "profiles": {
                      "member": {},
                      "practitioner": {
                        "awards": "",
                        "can_prescribe": false,
                        "cancellation_policy": "moderate",
                        "categories": [],
                        "certifications": [],
                        "certified_states": [],
                        "education": "",
                        "is_cx": false,
                        "languages": [],
                        "messaging_enabled": true,
                        "next_availability": null,
                        "reference_quote": "",
                        "response_time": 24,
                        "specialties": [],
                        "user_id": 2,
                        "vertical_objects": [
                          {
                            "can_prescribe": false,
                            "id": 5,
                            "name": "Physical Therapist"
                          }
                        ],
                        "verticals": [
                          "Physical Therapist"
                        ],
                        "work_experience": "",
                        "years_experience": 0,
                        "can_member_interact": true,
                      }
                    },
                    "role": "practitioner",
                    "username": "JaneS",
                    "country": null,
                    "active_tracks": [],
                  }
                },
                {
                  "is_anonymous": false,
                  "is_initiator": false,
                  "max_chars": 4096,
                  "user": {
                    "avatar_url": "",
                    "email": "jane@example.com",
                    "first_name": "Jane",
                    "id": 3,
                    "image_id": 0,
                    "image_url": null,
                    "last_name": "Doe",
                    "middle_name": "J",
                    "name": "Jane Doe",
                    "profiles": {
                      "member": {
                        "address": {
                          "city": "",
                          "country": "",
                          "state": "",
                          "street_address": "",
                          "zip_code": ""
                        },
                        "tel_number": "",
                        "tel_region": "",
                        "state": null
                      }
                    },
                    "role": "member",
                    "username": "Jane29785",
                    "country": {
                      "name": "United Kingdom",
                      "abbr": "UK",
                      "ext_info_link": "http://google.com/stuff",
                      "summary": "blah blah blah..."
                    },
                    "active_tracks": [
                      {
                        "id": 1102754,
                        "name": "pregnancy",
                        "display_name": "Pregnancy",
                        "start_date": "2024-07-31T23:23:31",
                        "scheduled_end": "2025-10-02",
                        "ended_at": null,
                        "track_modifiers": ["doula_only"]
                      }
                    ],
                  }
                }
              ],
              "internal": false,
              "total_messages": 1
            }


## Participants [/channel/{channel_id}/participants]

### Retrieve Participants Information in Channel [GET]

+ Parameters
    + channel_id (number) - ID of the messaging channel

+ Response 200 (application/json)

    + Body

            {
              "data": [
                {
                  "is_anonymous": false,
                  "is_initiator": true,
                  "max_chars": null,
                  "user": {
                    "avatar_url": "",
                    "email": "test@test.com",
                    "first_name": "Jane1",
                    "id": 1,
                    "image_id": 0,
                    "image_url": null,
                    "last_name": "Smith1",
                    "middle_name": "",
                    "name": "Jane1 Smith1",
                    "profiles": {
                      "member": {},
                      "practitioner": {
                        "awards": "",
                        "can_prescribe": false,
                        "cancellation_policy": "moderate",
                        "categories": [],
                        "certifications": [],
                        "certified_states": [],
                        "education": "",
                        "is_cx": false,
                        "languages": [],
                        "messaging_enabled": true,
                        "next_availability": null,
                        "reference_quote": "",
                        "response_time": 24,
                        "specialties": [],
                        "user_id": 2,
                        "vertical_objects": [
                          {
                            "can_prescribe": false,
                            "id": 5,
                            "name": "Physical Therapist"
                          }
                        ],
                        "verticals": [
                          "Physical Therapist"
                        ],
                        "work_experience": "",
                        "years_experience": 0,
                        "can_member_interact": true
                      }
                    },
                    "role": "practitioner",
                    "username": "JaneS",
                    "country": null,
                    "active_tracks": []
                  }
                },
                {
                  "is_anonymous": false,
                  "is_initiator": false,
                  "max_chars": 4096,
                  "user": {
                    "avatar_url": "",
                    "email": "jane@example.com",
                    "first_name": "Jane",
                    "id": 3,
                    "image_id": 0,
                    "image_url": null,
                    "last_name": "Doe",
                    "middle_name": "J",
                    "name": "Jane Doe",
                    "profiles": {
                      "member": {
                        "address": {
                          "city": "",
                          "country": "",
                          "state": "",
                          "street_address": "",
                          "zip_code": ""
                        },
                        "tel_number": "",
                        "tel_region": "",
                        "state": null
                      }
                    },
                    "role": "member",
                    "username": "Jane29785",
                    "country": {
                      "name": "United Kingdom",
                      "abbr": "UK",
                      "ext_info_link": "http://google.com/stuff",
                      "summary": "blah blah blah..."
                    },
                    "active_tracks": [
                      {
                        "id": 1102754,
                        "name": "pregnancy",
                        "display_name": "Pregnancy",
                        "start_date": "2024-07-31T23:23:31",
                        "scheduled_end": "2025-10-02",
                        "ended_at": null,
                        "track_modifiers": ["doula_only"]
                      }
                    ],
                  }
                }
              ]
            }

## Messages Collection [/channel/{channel_id}/messages]

+ Parameters
    + channel_id (number) - ID of the messaging channel

### Retrieve Messages in Channel [GET /channel/{channel_id}/messages{?offset,limit}]

+ Parameters
    + channel_id (number) - ID of the messaging channel
    + offset (number, optional) - the number pages to skip
    + limit (number, optional) - the number messages per page

+ Response 200 (application/json)

    + Body

            {
              "data": [
                {
                  "author": {
                    "avatar_url": "",
                    "email": "jane@test.com",
                    "first_name": "Jane",
                    "id": 2,
                    "image_id": 0,
                    "image_url": null,
                    "last_name": "Smith",
                    "middle_name": "",
                    "name": "Jane Smith",
                    "profiles": {
                      "member": {},
                      "practitioner": {
                        "awards": "",
                        "can_prescribe": false,
                        "cancellation_policy": "moderate",
                        "categories": [],
                        "certifications": [],
                        "certified_states": [],
                        "education": "",
                        "is_cx": false,
                        "languages": [],
                        "messaging_enabled": true,
                        "next_availability": null,
                        "reference_quote": "",
                        "response_time": 24,
                        "specialties": [],
                        "user_id": 2,
                        "vertical_objects": [
                          {
                            "can_prescribe": false,
                            "id": 5,
                            "name": "Physical Therapist"
                          }
                        ],
                        "verticals": [
                          "Physical Therapist"
                        ],
                        "work_experience": "",
                        "years_experience": 0,
                        "can_member_interact": true
                      }
                    },
                    "role": "practitioner",
                    "username": "JaneS",
                    "country": null,
                    "active_tracks": []
                  },
                  "body": "hey good job :)",
                  "attachments": [],
                  "created_at": "2015-12-09T01:03:31",
                  "id": 26,
                  "meta": [
                    {
                      "is_acknowledged": false,
                      "is_read": true,
                      "user_id": 2
                    },
                    {
                      "is_acknowledged": false,
                      "is_read": true,
                      "user_id": 4
                    }
                  ]
                },
                {
                  "author": {
                    "avatar_url": "",
                    "email": "jane1@test.com",
                    "first_name": "Jane",
                    "id": 4,
                    "image_id": 0,
                    "image_url": null,
                    "last_name": "Doe",
                    "middle_name": "J",
                    "name": "Jane J Doe",
                    "profiles": {
                      "member": {
                        "address": {
                          "city": "",
                          "country": "",
                          "state": "",
                          "street_address": "",
                          "zip_code": ""
                        },
                        "tel_number": "",
                        "tel_region": "",
                        "state": null
                      }
                    },
                    "role": "member",
                    "username": "Jane29786",
                    "country": {
                      "name": "United Kingdom",
                      "abbr": "UK",
                      "ext_info_link": "http://google.com/stuff",
                      "summary": "blah blah blah..."
                    },
                    "active_tracks": [
                      {
                        "id": 1102754,
                        "name": "pregnancy",
                        "display_name": "Pregnancy",
                        "start_date": "2024-07-31T23:23:31",
                        "scheduled_end": "2025-10-02",
                        "ended_at": null,
                        "track_modifiers": ["doula_only"]
                      }
                    ],
                  },
                  "body": "posting message via commandline!",
                  "attachments": [
                    {
                      "id": "1",
                      "file_name": "my_image.png",
                      "content_type": "image/png",
                      "content_length": 12345,
                      "thumbnail": "https://asset.mavenclinic.com/t/..."
                    }
                  ],
                  "created_at": "2015-12-09T01:02:15",
                  "id": 25,
                  "meta": [
                    {
                      "is_acknowledged": false,
                      "is_read": true,
                      "user_id": 2
                    },
                    {
                      "is_acknowledged": false,
                      "is_read": true,
                      "user_id": 4
                    }
                  ]
                }
              ],
              "meta": null,
              "pagination": {
                "limit": 10,
                "offset": 0,
                "order_direction": "desc",
                "total": 2
              }
            }

### Post a Message [POST]

Messages can be posted with or without attachments, a list of asset ids.
At the moments a message can have as many as 10 attachments.

+ Request Message Object (application/json)

        {
            "body": "This is the content of the message. Checkout link https://www.mavenclinic.com. Great stuff!",
            "attachments": ["123"]
        }

+ Response 201 (application/json)

    + Body

            {
              "author": {
                "avatar_url": "",
                "email": "jane@test.com",
                "first_name": "Jane",
                "id": 2,
                "image_id": 0,
                "image_url": null,
                "last_name": "Smith",
                "middle_name": "",
                "name": "Jane Smith",
                "profiles": null,
                "role": "practitioner",
                "username": "JaneS",
                "country": {
                  "name": "United Kingdom",
                  "abbr": "UK",
                  "ext_info_link": "http://google.com/stuff",
                  "summary": "blah blah blah..."
                },
                "active_tracks": []
              },
              "body": "This is the content of the message. Checkout link https://www.mavenclinic.com. Great stuff!",
              "attachments": [
                {
                  "id": "123",
                  "file_name": "some_image.jpg",
                  "content_type": "image/jpeg",
                  "content_length": 1234,
                  "thumbnail": "https://asset.mavenclinic.com/t/..."
                }
              ],
              "created_at": "2015-12-09T01:03:31",
              "id": 26,
              "meta": [
                {
                  "is_read": false,
                  "is_acknowledged": false,
                  "user_id": 4
                },
                {
                  "is_acknowledged": false,
                  "is_read": true,
                  "user_id": 2
                }
              ]
            }


# Group Message

## Message Resource [/message/{message_id}]

+ Parameters
    + message_id (number) - ID of the message

### Get a Full Message Object [GET]

+ Response 200 (application/json)

    + Body

            {
              "author": {
                "avatar_url": "",
                "email": "jane@test.com",
                "first_name": "Jane",
                "id": 2,
                "image_id": 0,
                "image_url": null,
                "last_name": "Smith",
                "middle_name": "",
                "name": "Jane Smith",
                "profiles": null,
                "role": "practitioner",
                "username": "JaneS",
                "country": {
                  "name": "United Kingdom",
                  "abbr": "UK",
                  "ext_info_link": "http://google.com/stuff",
                  "summary": "blah blah blah..."
                },
                "active_tracks": []
              },
              "body": "hey good job :)",
              "attachments": [
                {
                  "id": "1",
                  "file_name": "my_image.png",
                  "content_type": "image/png",
                  "content_length": 12345,
                  "thumbnail": "https://asset.mavenclinic.com/t/..."
                }
              ],
              "created_at": "2015-12-09T01:03:31",
              "id": 26,
              "meta": [
                {
                  "is_acknowledged": false,
                  "is_read": true,
                  "user_id": 2
                },
                {
                  "is_acknowledged": false,
                  "is_read": true,
                  "user_id": 4
                }
              ]
            }

### Edit an Existing Message Before the Other Party Reads [PUT]

+ Request Message Object (application/json)

        {
            "body": "This is a message body updated."
        }

+ Response 200 (application/json)

    + Body

            {
              "author": {
                "avatar_url": "",
                "email": "jane@test.com",
                "first_name": "Jane",
                "id": 3,
                "image_id": 0,
                "image_url": null,
                "last_name": "Doe",
                "middle_name": "J",
                "name": "Jane J Doe",
                "profiles": null,
                "role": "member",
                "username": "Jane29785".
                "active_tracks": [
                  {
                    "id": 1102754,
                    "name": "pregnancy",
                    "display_name": "Pregnancy",
                    "start_date": "2024-07-31T23:23:31",
                    "scheduled_end": "2025-10-02",
                    "ended_at": null,
                    "track_modifiers": ["doula_only"]
                  }
                ],
              },
              "body": "This is a message body updated.",
              "created_at": "2015-12-08T19:32:21",
              "id": 23,
              "meta": [
                {
                  "is_acknowledged": false,
                  "is_read": false,
                  "user_id": 1
                },
                {
                  "is_acknowledged": false,
                  "is_read": false,
                  "user_id": 3
                }
              ]
            }

## Acknowledgement Resource [/message/{message_id}/acknowledgement]

+ Parameters
    + message_id (number) - ID of the message

### Acknowledge a Message [POST]

Send an acknowledgement to the given message.

+ Response 204


# Group Message Billing

## Message Billing Collection [/message/billing]

### Retrieve Messaging Usage [GET]

+ Response 200 (application/json)

    + Body

            {
                "available_messages": 1,
                "modified_at": "2015-11-24T23:10:01"
            }

### Buy Messages [POST]

Returns `201` for a successful Stripe charge(immediate capture) transaction.
For Stripe errors, a `403` will be returned with detail error message in response.

+ Request Message Product Object (application/json)

        {
            "product_id": 1
        }

+ Response 201 (application/json)

    + Body

            {
              "available_messages": 10,
              "card_brand": "Visa",
              "card_last4": "4242",
              "charged_at": "2015-12-10T16:46:05",
              "maven_credit_used": "0.00",
              "stripe_charge_id": "ch_17GXYP4G6L0BSY8tzm4SOZMm"
            }


# Group Message Products

## Message Products Collection [/message/products]

### Retrieve List of Message Products [GET]

+ Response 200 (application/json)

    + Body

            {
              "data": [
                {
                  "id": 1,
                  "number_messages": 3,
                  "price": "10.00"
                },
                {
                  "id": 2,
                  "number_messages": 6,
                  "price": "20.00"
                }
              ]
            }


# Group Assessment

This API allows for fetching detail information about different type of assessments (pregnancy, postpartum, quiz, onboarding etc), in a collection or individually.
For information about a given user's assessments (aka needs assessments), please refer to [User Needs Assessments](#users-user-needs-assessments)

## Assessments [/assessments]

### Get Assessments [GET /assessments{?type,version,module,phase,completed,include_json}]

+ Parameters
    + type (required, string) - Specify the type of assessment, which currently are `PREGNANCY`, `POSTPARTUM`, `PREGNANCY_ONBOARDING`, `POSTPARTUM_ONBOARDING`, `EGG_FREEZING_ONBOARDING`, `FERTILITY_ONBOARDING`, `M_QUIZ`, `E_QUIZ`.
    + version (optional, string) - Specify the version of the schema.
    + module (optional, string) - filter of all assessments matching given module
    + phase (optional, string) - filter of all assessments matching given phase
    + include_json (optional, bool) - A flag to indicate whether including the question json in the return. Default is false.

+ Response 200 (application/json)

    + Body

            {
                "data": [
                    {
                        "id": 1,
                        "title": "Maternity leave readiness test1",
                        "type": "PREGNANCY",
                        "description": "Find out if you've got your ducks in a row for go time.",
                        "icon": "icon-1.ico",
                        "slug": "pregnancy-maternity-leave-readiness-test1-v1",
                        "module_names": ["pregnancy"],
                        "estimated_time": 5,
                        "meta": {
                            "completed": false,
                            "version": 1
                        },
                        "question_json": {

                        }
                    },
                    {
                        "id": 2,
                        "title": "Maternity leave readiness test2",
                        "type": "PREGNANCY",
                        "description": "Find out if you've got your ducks in a row for go time.",
                        "icon": "icon-2.ico",
                        "slug": "pregnancy-maternity-leave-readiness-test2-v1",
                        "module_names": ["pregnancy"],
                        "estimated_time": 5,
                        "meta": {
                            "completed": false,
                            "version": 1
                        },
                        "question_json": {

                        }
                    },
                    {
                        "id": 3,
                        "title": "Maternity leave readiness test3",
                        "type": "PREGNANCY",
                        "description": "Find out if you've got your ducks in a row for go time.",
                        "icon": "icon-2.ico",
                        "slug": "pregnancy-maternity-leave-readiness-test3-v1",
                        "module_names": ["pregnancy"],
                        "estimated_time": 5,
                        "meta": {
                            "completed": false,
                            "version": 1
                        },
                        "question_json": {

                        }
                    },
                    {
                        "id": 4,
                        "title": "Maternity leave readiness test4",
                        "type": "PREGNANCY",
                        "description": "Find out if you've got your ducks in a row for go time.",
                        "icon": "icon-1.ico",
                        "slug": "pregnancy-maternity-leave-readiness-test4-v1",
                        "module_names": ["pregnancy"],
                        "estimated_time": 5,
                        "meta": {
                            "completed": false,
                            "version": 1
                        },
                        "question_json": {

                        }
                    }
                ],
                "pagination": {
                    "limit": 4,
                    "offset": 0,
                    "order_direction": "desc",
                    "total": 4
                }
            }

### Get an Assessment by ID [GET /assessments/{id}{?include_json}]

+ Parameters
    + id - the id of the assessment
    + include_json (optional, bool) - A flag to indicate whether including the question json in the return. Default is false.

+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "title": "Maternity leave readiness test",
                "type": "PREGNANCY",
                "description": "Find out if you've got your ducks in a row for go time.",
                "icon": "icon-1.ico",
                "slug": "pregnancy-maternity-leave-readiness-test-v1",
                "module_names": ["pregnancy"],
                "estimated_time": 5,
                "meta": {
                    "completed": false,
                    "version": 1
                },
                "question_json": {

                }
            }

# Group Content

This provides access to content managed by a CMS, for example enterprise resources.

## Public Resource Content [/content/resources/public/{url_slug}/]

### Get A Piece of Content [GET]

Using URL Slug

+ Response 200 (application/json)

    + Body

            {
                "id": 123,
                "title": "Example Title",
                "body": "<h1>Title</h1>\n\n<p>Here goes some <strong>great</strong> content!</p>",
                "head_html": "<link rel=\"stylesheet\" type=\"text/css\" href=\"...\" />",
                "content_type": "article"
             }


## Organization-Private Resource Content [/content/resources/private/{content_id}/]

### Get A Piece of Content [GET]

Using content ID

+ Response 200 (application/json)

    + Body

            {
                "id": 123,
                "title": "Example Title",
                "body": "<h1>Title</h1>\n\n<p>Here goes some <strong>great</strong> private for org content!</p>",
                "head_html": "<link rel=\"stylesheet\" type=\"text/css\" href=\"...\" />",
                "content_type": "article"
            }


# Group Marketing tools

Tools used generally for marketing/communication stuff

## Send a user a predefined SMS message [/unauthenticated/sms]

### Send phone number to text a link to [POST]

+ Request (application/json)

        {
            "tel_number": "tel:+1-212-555-1010",
            "template": "default|sms1"
        }

+ Response 200 (application/json)

    + Body

            {
            }


## Unsubscribe from Braze Emails [/users/{user_id}/member_communications/unsubscribe]

### Unsubscribe from Braze Emails [POST]

+ Parameters
  + user_id (int) - the ID of the user

+ Request (application/json)
        {
        }

+ Response 200 (application/json)

    + Body

            {
            }


## Opt-in to Braze Emails [/users/{user_id}/member_communications/opt_in]

### Opt-in to Braze Emails [POST]

+ Parameters
  + user_id (int) - the ID of the user

+ Request (application/json)
        {
        }

+ Response 200 (application/json)

    + Body

            {
            }


## Opt-in to or Unsubscribe from Braze Emails [/users/{user_id}/member_communications]

### Opt-in to or Unsubscribe from Braze Emails [POST]

+ Parameters
  + user_id (int) - the ID of the user

+ Request (application/json)
        {
          "opted_in": true
        }

+ Response 200 (application/json)

    + Body

            {
            }
## Request all user preferences [/users/{user_id}/preferences]

### Request all user preferences [GET]

+ Parameters
  + user_id (int) - the user's ID
+ Response
  + Body
          [
            {
              <preference_name>: <preference_value>,
              ...
            },
            ...
          ]

## User locale [/users/{user_id}/locale]

The **User Locale API** allows you to get and update user's locale.

+ Parameters
  + user_id (int) - the user's ID

### Get user locale [GET]
+ Response 200
  + Body
          {
            locale: <str>
          }

### Update user locale [PUT]
+ Request (application/json)
        {
            "locale": "en-US"
        }
+ Response 200 (application/json)

        {
            "locale": "en-US"
        }

# Group Tags

Tags can be applied to resources or assessments in admin, then used as filters at the /resources endpoint.

## Tags [/tags]

### Get Tags [GET]

+ Parameters
    + order_direction (optional, string) ... Can be 'desc' (default) or 'asc'. Ordering is based on the tags' 'modified at' value which can be set in admin.

+ Response 200 (application/json)

            [
                {
                    "id": 1,
                    "name": "nutrition",
                    "display_name": "Nutrition"
                },
                {
                    "id": 2,
                    "name": "mental_health",
                    "display_name": "Mental Health"
                }
            ]


# Group User Flags

User Flags are applied to users on the backend and applied flag ids are returned as part of the user's member profile.

## User Flags [/user_flags]

+ Parameters
    + flag_ids (required, csv int) ... List of flag ids.

### Get User Flags [GET]

+ Response 200 (application/json)

            [
                {
                    "id": 1,
                    "name": "Advanced Maternal Age"
                },
                {
                    "id": 2,
                    "name": "Anxiety"
                }
            ]


# Group Resources

A 'resource' refers to either a content resource (such as an article).  It used to have the ability
to return assessments, hence the `assessment_id` attribute, but this is no longer used.

## Resources [/resources]

### Get Resources [GET]

+ Parameters
    + order_direction (optional, string) ... Can be 'desc' (default) or 'asc'. Ordering is based on 'published at' for content resources and 'modified at' for assessments.
    + limit (optional, int) ... Query limit (default: 10)
    + offset (optional, int) ... Query offset (default: 0)
    + tags (optional, csv string) ... A list of tag names as returned from the /tags endpoint.
    + image_sizes (optional, csv string) ... A list of image sizes to be included in the "image" subobject. Image sizes must be in the format: `width`x`height` for example: `300x400`

+ Response 200 (application/json)

            [
                {
                    "resource_id": null,
                    "assessment_id": 1,
                    "content_type": "quiz",
                    "title": "Nutrition",
                    "description": "How much do you know about nutrition?",
                    "slug": "nutrition",
                    "image": null
                },
                {
                    "resource_id": 1,
                    "assessment_id": null,
                    "content_type": "article",
                    "title": "Mental Health",
                    "description": null,
                    "slug": "mental-health",
                    "image": {
                        "original": "http://example.com/image.jpg",
                        "hero": "http://example.com/image.jpg",
                        "thumbnail": "http://example.com/image_thumbnail.jpg"
                    }
                }
            ]


# Group BMSOrder

A BMSOrder is an order for breast milk shipping.

## BMSOrders [/bms_order]

### Create an Order [POST]

Create a breast milk shipping order. Valid product types are "pump_and_post", "pump_and_carry", and
"pump_and_check". "end_date" is the date when the user’s traveling ends.

#### Arguments

* **is_work_travel** (boolean) Whether the recipient of the order is traveling
  for work. Must be true as Maven Milk does not fulfill orders for non-work travel.
* **external_trip_id** (string) The associated trip id in some external system, if applicable.
  Nullable.

+ Request (application/json)

        {
            "is_work_travel": true,
            "travel_start_date": "2018-09-20",
            "travel_end_date": "2018-09-28",
            "outbound_shipments": [{
                "recipient_name": "Jane Smith",
                "tel_number": "9134768475",
                "tel_region": "US",
                "tracking_email": "bob@aol.com",
                "accommodation_name": "Mariott",
                "residential_address": false,
                "address": {
                    "street_address": "394 Broadway, 3rd Floor",
                    "zip_code": "10013",
                    "city": "New York",
                    "state": "NY",
                    "country": "US"
                },
                "products": [
                    {
                        "name": "pump_and_post",
                        "quantity": 2
                    }
                ]
            }],
            "return_shipments": [{
                "recipient_name": "Bob",
                "tel_number": "9134768475",
                "tel_region": "US",
                "tracking_email": "bob@aol.com",
                "accommodation_name": null,
                "residential_address": true,
                "friday_shipping": false,
                "address": {
                    "street_address": "123 Fake St",
                    "zip_code": "10001",
                    "city": "New York",
                    "state": "NY",
                    "country": "US"
                }
            }],
            "terms": { "terms_of_use": true, "all_terms": true },
            "external_trip_id": "HCX9E2"

+ Response 200 (application/json)

        {
            "is_work_travel": true,
            "travel_start_date": "2018-09-20",
            "travel_end_date": "2018-09-28",
            "outbound_shipments": [{
                "recipient_name": "Jane Smith",
                "tel_number": "9134768475",
                "tel_region": "US",
                "tracking_email": "bob@aol.com",
                "accommodation_name": "Mariott",
                "residential_address": false,
                "address": {
                    "street_address": "394 Broadway, 3rd Floor",
                    "zip_code": "10013",
                    "city": "New York",
                    "state": "NY",
                    "country": "US"
                },
                "products": [
                    {
                        "name": "pump_and_post",
                        "quantity": 2
                    }
                ]
            }],
            "return_shipments": [{
                "recipient_name": "John Smith",
                "tel_number": "9134768475",
                "tel_region": "US",
                "tracking_email": "bob@aol.com",
                "accommodation_name": null,
                "residential_address": true,
                "friday_shipping": false,
                "address": {
                    "street_address": "123 Fake St",
                    "zip_code": "10001",
                    "city": "New York",
                    "state": "NY",
                    "country": "US"
                }
            }],
            "terms": { "terms_of_use": true, "all_terms": true },
            "external_trip_id": "HCX9E2"
        }


# Group Maven Wallet

@see [api/wallet/openapi.yaml](../wallet/openapi.yaml)

# Group Questionnaires

## Questionnaires [/questionnaires]

### Get questionnaires [GET /questionnaires?oid={oid}&user_id={user_id}]

Get all matching questionnaires and the latest recorded answer sets that the user has submitted for those questionnaires.
There's no use case right now for getting a questionnaire outside the context of a particular user, so both
oid and user_id are required fields.

A user or a member of that user's care team may access this resource.

+ Parameters
    + oid (string) - The object identifier of the questionnaire.  Required.
    + user_id (string) - The user for whom the recorded answers are being requested.  Required.

+ Response 200 (application/json)

        {
            "data": [
                {
                    "questionnaire": {
                        "id": "100045839485"
                        "oid": "coaching_notes_coaching_providers",
                        "title_text": "Encounter summary",
                        "description_text": null,
                        "sort_order": 0,
                        "trigger_answer_ids": [],
                        "question_sets": [
                            {
                                "id": "33",
                                "sort_order": 0,
                                "oid": null,
                                "prerequisite_answer_id": null,
                                "questions": [
                                    {
                                        "id": "99",
                                        "sort_order": 0,
                                        "label": "What numbers do you like?",
                                        "type": "CHECKBOX",
                                        "required": true,
                                        "oid": "numbers_liked",
                                        "answers": [
                                            {
                                                "id": "200",
                                                "sort_order": 0,
                                                "text": "10",
                                                "oid": "10"
                                            },
                                            {
                                                "id": "201",
                                                "sort_order": 1,
                                                "text": "256",
                                                "oid": "256"
                                            },
                                            {
                                                "id": "202",
                                                "sort_order": 2,
                                                "text": "3",
                                                "oid": "3"
                                            }
                                        ]
                                    },
                                    {
                                        "id": "100",
                                        "sort_order": 0,
                                        "label": "Are you allergic to cats?",
                                        "type": "RADIO",
                                        "required": true,
                                        "oid": "cat_allergy",
                                        "answers": [
                                            {
                                                "id": "203",
                                                "sort_order": 0,
                                                "text": "Yes",
                                                "oid": "yes"
                                            },
                                            {
                                                "id": "204",
                                                "sort_order": 1,
                                                "text": "No",
                                                "oid": "no"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "id": "34",
                                "sort_order": 1,
                                "oid": null,
                                "prerequisite_answer_id": "200",
                                "questions": [
                                    {
                                        "id": "101",
                                        "sort_order": 0,
                                        "label": "Why do you like the number 10?!"
                                        "type": "TEXT",
                                        "required": true,
                                        "oid": "why_number",
                                        "answers": []
                                    }
                                ]
                            }
                        ]
                    },
                    "recorded_answer_set": {
                        "id": "10019820331",
                        "questionnaire_id": "10004583948"
                        "submitted_at": "2020-01-01T00:00:01Z",
                        "source_user_id": 6,
                        "draft": false,
                        "appointment_id": null,
                        "recorded_answers": [
                            {
                                "appointment_id": null,
                                "user_id": 6,
                                "id": "22",
                                "text": null,
                                "question_id": "99",
                                "answer_id": "200",
                                "question_type": "CHECKBOX",
                                "payload": null
                            },

                            {
                                "appointment_id": null,
                                "user_id": 6,
                                "id": "23",
                                "text": "I just do is all",
                                "question_id": "101",
                                "answer_id": null,
                                "question_type": "TEXT"
                                "payload": { "text": "I just do is all" }
                            },
                            {
                                "appointment_id": null,
                                "user_id": 6,
                                "id": "24",
                                "text": null,
                                "question_id": "100",
                                "answer_id": "203",
                                "question_type": "RADIO",
                                "payload": null
                            }
                        ]
                    }
                }
            ]
        }

## Recorded answer sets [/users/{user_id}/recorded_answer_sets]

### Post recorded answer set [POST /users/{user_id}/recorded_answer_sets]

Recorded answer sets for a user can only be created by that user.

+ Parameters
    + user_id (integer) - The ID of the user.

+ Request

    {
        "submitted_at": "2020-01-01T00:00:01Z",
        "questionnaire_id": "2333999",
        "source_user_id": 6,
        "recorded_answers": [
            {
                "id": "22",
                "text": null,
                "question_id": "99",
                "answer_id": "200",
                "payload": null
            },

            {
                "id": "23",
                "text": null,
                "question_id": "101",
                "answer_id": null,
                "payload": { "text": "I just do is all" }
            },
            {
                "id": "24",
                "text": null,
                "question_id": "100",
                "answer_id": "203",
                "payload": null
            }
        ]
    }

+ Response 200 (application/json)

    {
        "id": "24444444",
        "submitted_at": "2020-01-01T00:00:01Z",
        "questionnaire_id": "2333999",
        "source_user_id": 6,
        "draft": true,
        "appointment_id": null,
        "recorded_answers": [
            {
                "appointment_id": null,
                "user_id": 6,
                "id": "22",
                "text": null,
                "payload": null,
                "question_id": "99",
                "answer_id": "200",
                "question_type": "CHECKBOX"
            },

            {
                "appointment_id": null,
                "user_id": 6,
                "id": "23",
                "text": "I just do is all",
                "payload": { "text": "I just do is all" },
                "question_id": "101",
                "answer_id": null,
                "question_type": "TEXT"
            },
            {
                "appointment_id": null,
                "user_id": 6,
                "id": "24",
                "text": null,
                "payload": null,
                "question_id": "100",
                "answer_id": "203",
                "question_type": "RADIO"
            }
        ]
    }

### Put recorded answer set [PUT /users/{user_id}/recorded_answer_sets/{id}]

Recorded answer sets for a user can only be created or updated by that user.

Provided list of recorded answers is expected to be complete, not partial, since _will be deleted and replaced_ with those provided.

If `appointment_id` is included in the request body, it must be in non-obfuscated form.

+ Parameters
    + user_id (integer) - The ID of the user.
    + id (integer) - The ID of the recorded answer set.  May be client-generated.

+ Request

    {
        "id": 24444444,
        "submitted_at": "2020-01-01T00:00:01Z",
        "questionnaire_id": "2333999",
        "source_user_id": 6,
        "appointment_id": 999434343,
        "draft": false,
        "recorded_answers": [
            {
                "id": "22",
                "text": null,
                "question_id": "99",
                "answer_id": "200"
            },

            {
                "id": "23",
                "text": "I just do is all",
                "question_id": "101",
                "answer_id": null
            },
            {
                "id": "24",
                "text": null,
                "question_id": "100",
                "answer_id": "203"
            }
        ]
    }

+ Response 200 (application/json)

    {
        "id": "24444444",
        "submitted_at": "2020-01-01T00:00:01Z",
        "questionnaire_id": "2333999",
        "source_user_id": 6,
        "appointment_id": 999434343,
        "draft": false,
        "recorded_answers": [
            {
                "appointment_id": null,
                "user_id": 6,
                "id": "22",
                "text": null,
                "payload": null,
                "question_id": "99",
                "answer_id": "200",
                "question_type": "CHECKBOX"
            },

            {
                "appointment_id": null,
                "user_id": 6,
                "id": "23",
                "text": "I just do is all",
                "payload": null,
                "question_id": "101",
                "answer_id": null,
                "question_type": "TEXT"
            },
            {
                "appointment_id": null,
                "user_id": 6,
                "id": "24",
                "text": null,
                "payload": null,
                "question_id": "100",
                "answer_id": "203",
                "question_type": "RADIO"
            }
        ]
    }

# Group Patient Health Record

## Patient Health Record [/users/{user_id}/patient_health_record]

The patient health record endpoint provides faux-FHIR-formatted patient data.  [FHIR](https://hl7.org/fhir/) (Fast Healthcare Interoperability Resources) is a standard for health care data exchange.  We are working off of the [US Core Implementation Guide](https://hl7.org/fhir/us/core/).

### Get patient health record [GET /users/{user_id}/patient_health_record]

A user's patient health record can only be accessed by that user or a member of the user's care team.

The patient health record contains the following FHIR resources: [Patient](https://build.fhir.org/ig/HL7/US-Core-R4/StructureDefinition-us-core-patient.html), [AllergyIntolerance](https://build.fhir.org/ig/HL7/US-Core-R4/StructureDefinition-us-core-allergyintolerance.html), [Condition](https://build.fhir.org/ig/HL7/US-Core-R4/StructureDefinition-us-core-condition.html),
[MedicationStatement](https://www.hl7.org/fhir/medicationstatement.html), and [Observation](https://www.hl7.org/fhir/observation.html).

The underlying information is derived from the user and member profile records, as well as either the health profile record or the user's answers to the health binder questionnaire.  There will be slightly different information available depending on that last bit, but the format of the data will be the same--no keys will be missing.

+ Parameters
    + user_id (integer) - The ID of the user.

+ Response

```
{
    "patient": {
        "resourceType": "Patient",
        "identifier": [
            {
                "use": "official",
                "type": {
                    "coding": null,
                    "text": "Autoincrement"
                },
                "system": "https://www.mavenclinic.com",
                "value": 3,
                "period": null,
                "assigner": "https://www.mavenclinic.com"
            }
        ],
        "name": [
            {
                "family": "Clinique",
                "given": [
                    "Mavis",
                    "Anne"
                ]
            }
        ],
        "gender": "Female (free text field!)",
        "extension": [
            {
                "url": "https://mavenclinic.com/fhir/StructureDefinition/pronouns",
                "extension": [
                    {
                        "url": "pronouns",
                        "valueString": "she/her"
                    },
                    {
                        "url": "label",
                        "valueString": "pronouns"
                    }
                ]
            },
            {
                "url": "https://mavenclinic.com/fhir/StructureDefinition/activity_level",
                "extension": [
                    {
                        "url": "codeable_concept",
                        "valueCodeableConcept": {
                            "coding": [
                                {
                                    "system": "https://www.mavenclinic.com",
                                    "version": null,
                                    "code": "NOT ACTIVE",
                                    "display": "NOT ACTIVE",
                                    "userSelected": true
                                }
                            ]
                        }
                    },
                    {
                        "url": "label",
                        "valueString": "activity_level"
                    }
                ]
            },
            {
                "url": "https://mavenclinic.com/fhir/StructureDefinition/child",
                "extension": [
                    {
                        "url": "name",
                        "valueString": "Charlie"
                    },
                    {
                        "url": "date_of_birth",
                        "valueDate": "2020-01-01"
                    },
                    {
                        "url": "label",
                        "valueString": "child"
                    }
                ]
            },
            {
                "url": "https://mavenclinic.com/fhir/StructureDefinition/child",
                "extension": [
                    {
                        "url": "name",
                        "valueString": "Becky"
                    },
                    {
                        "url": "date_of_birth",
                        "valueDate": "2018-01-01"
                    },
                    {
                        "url": "label",
                        "valueString": "child"
                    }
                ]
            }
        ],
        "telecom": [
            {
                "system": "phone",
                "value": "tel:+1-212-555-5555",
                "use": null
            },
            {
                "system": "email",
                "value": "mavis@clinique.com",
                "use": null
            }
        ],
        "address": [
            {
                "line": "394 Broadway",
                "city": "New York",
                "state": "NY",
                "postalCode": "10013",
                "extension": [
                    {
                        "url": "https://mavenclinic.com/fhir/StructureDefinition/address_country",
                        "extension": [
                            {
                                "url": "codeable_concept"
                                "valueCodeableConcept": {
                                    "coding": [
                                        {
                                            "system": "urn:iso:std:iso:3166",
                                            "version": null,
                                            "code": "US",
                                            "display": "US",
                                            "userSelected": true
                                        }
                                    ]
                                }
                            },
                            {
                                "url": "label",
                                "valueString": "country"
                            }
                        ]
                    }
                ]
            }
        ],
        "birthDate": "1990-01-01",
        "communication": [],
        "active": true
    },
    "medicationStatement": [
        {
            "resourceType": "MedicationStatement",
            "identifier": [
                {
                    "system": "https://www.mavenclinic.com",
                    "use": "official",
                    "value": "1",
                    "type": {
                        "text": "user"
                    }
                },
                {
                    "system": "https://www.mavenclinic.com",
                    "use": "official",
                    "value": "medications_current",
                    "type": {
                        "text": "health_binder_field"
                    }
                }
            ],
            "note": [
                "text": "Medication 1, Medication 2, and Medication 3"
            ],
            "status": "active",
            "dateAsserted": "2020-07-13 17:35:47",
            "subject": {
                "type": "User",
                "reference": null,
                "identifier": {
                    "use": "official",
                    "type": {
                        "coding": null,
                        "text": "Autoincrement"
                    },
                    "system": "https://www.mavenclinic.com",
                    "value": 1,
                    "period": null,
                    "assigner": "https://www.mavenclinic.com"
                },
                "display": "<User[1] active>"
            },
            "informationSource": {
                "display": "<User[1] active>",
                "type": "User",
                "reference": null,
                "identifier": {
                    "use": "official",
                    "type": {
                        "coding": null,
                        "text": "Autoincrement"
                    },
                    "system": "https://www.mavenclinic.com",
                    "value": 1,
                    "period": null,
                    "assigner": "https://www.mavenclinic.com"
                }
            },
        }
    ],
    "condition": [
        {
            "identifier": [
                {
                    "type": {
                        "text": "user"
                    },
                    "system": "https://www.mavenclinic.com",
                    "value": "1",
                    "use": "official"
                },
                {
                    "type": {
                        "text": "health_binder_field"
                    },
                    "system": "https://www.mavenclinic.com",
                    "value": "health_issues_past",
                    "use": "official"
                }
            ],
            "subject": {
                "type": "User",
                "display": "<User[1] active>",
                "identifier": {
                    "use": "official",
                    "type": {
                        "coding": null,
                        "text": "Autoincrement"
                    },
                    "system": "https://www.mavenclinic.com",
                    "value": "1",
                    "period": null,
                    "assigner": {"reference": "https://www.mavenclinic.com"}
                }
            },
            "verificationStatus": {
                "coding": [
                    {
                        "display": "provisional",
                        "system": "http://terminology.hl7.org/CodeSystem/condition-ver-status",
                        "userSelected": true
                    }
                ],
                "text": "provisional"
            },
            "clinicalStatus": {
                "text": "A test condition."
            },
            "recordedDate": "2020-08-18 15:58:19",
            "recorder": {
                "type": "User",
                "display": "<User[1] active>",
                "identifier": {
                    "use": "official",
                    "type": {
                        "coding": null,
                        "text": "Autoincrement"
                    },
                    "system": "https://www.mavenclinic.com",
                    "value": "1",
                    "period": null,
                    "assigner": {"reference": "https://www.mavenclinic.com"}
                }
            },
            "resourceType": "Condition",
            "category": [
                {
                    "text": "problem-list-item"
                }
            ],
            "code": {
                "text": "A test condition."
            }
        }
    ],
    "allergyIntolerance": [
        {
            "resourceType": "allergyIntolerance",
            "identifier": [
                {
                    "system": "https://www.mavenclinic.com",
                    "value": "1",
                    "type": {
                        "text": "user"
                    },
                    "use": "official"
                },
                {
                    "system": "https://www.mavenclinic.com",
                    "value": "medications_allergies",
                    "type": {
                        "text": "health_binder_field"
                    },
                    "use": "official"
                }
            ],
            "clinicalStatus": {
                "text": "An allergy"
            },
            "verificationStatus": {
                "coding": [
                    {
                        "system": "http://terminology.hl7.org/CodeSystem/condition-ver-status",
                        "display": "provisional",
                        "userSelected": true
                    }
                ],
                "text": "provisional"
            },
            "patient": {
                "type": "models.users.user",
                "identifier": {
                    "use": "official",
                    "type": {
                        "coding": null,
                        "text": "Autoincrement"
                    },
                    "system": "https://www.qa2.mvnctl.net",
                    "value": "1",
                    "period": null,
                    "assigner": {"reference": "https://www.mavenclinic.com"}
                },
                "display": "<User 1>"
            },
            "recordedDate": "2020-07-13 17:48:37",
            "recorder": {
                "type": "models.users.user",
                "identifier": {
                    "use": "official",
                    "type": {
                        "coding": null,
                        "text": "Autoincrement"
                    },
                    "system": "https://www.qa2.mvnctl.net",
                    "value": "1",
                    "period": null,
                    "assigner": {"reference": "https://www.mavenclinic.com"}
                },
                "display": "<User 1>"
            },
            "reaction": [
                {
                    "description": "An allergy"
                }
            ]
        }
    ],
    "observation": [
        {
            "resourceType": "Observation",
            "identifier": [
                  {"type": {"text": "user"}, {"value": 3}}
            ],
            "status": "registered",
            "code": {"text": "Due Date"},
            "subject": {
                "type": "User",
                "display": "<User[1] active>",
                "identifier": {
                  "use": "official",
                  "type": {
                        "coding": null,
                        "text": "Autoincrement"
                    },
                    "system": "https://www.mavenclinic.com",
                    "value": 1,
                    "period": null,
                    "assigner": {"reference": "https://www.mavenclinic.com"}
                  }
            },
            "issued": "2020-09-19 19:49:09",
            "valueDateTime": "2021-03-30",
        }
  ]
}
```

# Group Medications

## Medications [/medications]

Medications are sourced from the FDA's [National Drug Code Directory](https://www.fda.gov/drugs/drug-approvals-and-databases/national-drug-code-directory) and seeded via [script](https://gitlab.mvnctl.net/maven/maven/-/blob/master/api/utils/migrations/seed_medications_table.py).  Members using the "new health binder" can select one of these entries to add it to their profile as a past or current medication.  (Right now, only medication names are actually used, but other information is stored in the database alongside the names in case it can be used later.)

### Get medications [GET /medications?query_string={query_string}]

Query string is a required parameter.  Per guidance from product, the search only happens from the beginning of the string, i.e., the search term `adv` will match `Advil` but not `Sadvil`.

+ Parameters
    + query_string (integer) - The search term of the user.

+ Response

```
  {
    "data": ["Probuphine", "PROCAINAMIDE HCI", "ProcalAmine"]
  }
```

# Group Webinars

## Webinars [/webinars]

Zoom webinars

### Get past webinars [GET /webinars/past]

Get all of the webinars that were held in the past.

+ Response

```
{
    "webinars": [
         {
             "agenda": "WEBINAR 1",
             "created_at": "2021-06-23T11:48:26Z",
             "duration": 30,
             "host_id": "S4JWnAqnSEqM3XxtbsKPbQ",
             "id": 11111,
             "join_url": "https://us02web.zoom.us/j/11111",
             "start_time": "2021-07-07/20/21T20:00:00Z",
             "timezone": "America/Chicago",
             "topic": "Maven for Centro",
             "type": 5,
             "uuid": "1234567890",
         },
         {
             "agenda": "WEBINAR 2",
             "created_at": "2021-06-28T22:24:39Z",
             "duration": 60,
             "host_id": "S4JWnAqnSEqM3XxtbsKPbQ",
             "id": 22222,
             "join_url": "https://us02web.zoom.us/j/22222",
             "start_time": TOMORROW.strftime("%Y-%m-%dT%H:%M:%SZ"),
             "start_time": "2021-07-07/21/21T20:00:00Z",
             "timezone": "America/New_York",
             "topic": "Infant CPR 101",
             "type": 5,
             "uuid": "9876543210",
        }
    ]
}
```

### Get user's past webinars [GET /webinars/{user_id}/past]


Get the past webinars for which the authenticated user was registered.

+ Parameters
    + user_id (integer) - The ID of the user.

+ Response

```
{
    "webinars": [
         {
             "agenda": "WEBINAR 1",
             "created_at": "2021-06-23T11:48:26Z",
             "duration": 30,
             "host_id": "S4JWnAqnSEqM3XxtbsKPbQ",
             "id": 11111,
             "join_url": "https://us02web.zoom.us/j/11111",
             "start_time": "2021-07-07/20/21T20:00:00Z",
             "timezone": "America/Chicago",
             "topic": "Maven for Centro",
             "type": 5,
             "uuid": "1234567890",
         },
         {
             "agenda": "WEBINAR 2",
             "created_at": "2021-06-28T22:24:39Z",
             "duration": 60,
             "host_id": "S4JWnAqnSEqM3XxtbsKPbQ",
             "id": 22222,
             "join_url": "https://us02web.zoom.us/j/22222",
             "start_time": TOMORROW.strftime("%Y-%m-%dT%H:%M:%SZ"),
             "start_time": "2021-07-07/21/21T20:00:00Z",
             "timezone": "America/New_York",
             "topic": "Infant CPR 101",
             "type": 5,
             "uuid": "9876543210",
        }
    ]
}
```

### Get upcoming webinars [GET /webinars/upcoming]

Get all webinars scheduled for a date/time in the future.

+ Response

```
{
    "webinars": [
         {
             "agenda": "WEBINAR 1",
             "created_at": "2021-06-23T11:48:26Z",
             "duration": 30,
             "host_id": "S4JWnAqnSEqM3XxtbsKPbQ",
             "id": 11111,
             "join_url": "https://us02web.zoom.us/j/11111",
             "start_time": "2021-07-07/30/21T20:00:00Z",
             "timezone": "America/Chicago",
             "topic": "Maven for Centro",
             "type": 5,
             "uuid": "1234567890",
         },
         {
             "agenda": "WEBINAR 2",
             "created_at": "2021-06-28T22:24:39Z",
             "duration": 60,
             "host_id": "S4JWnAqnSEqM3XxtbsKPbQ",
             "id": 22222,
             "join_url": "https://us02web.zoom.us/j/22222",
             "start_time": TOMORROW.strftime("%Y-%m-%dT%H:%M:%SZ"),
             "start_time": "2021-07-07/31/21T20:00:00Z",
             "timezone": "America/New_York",
             "topic": "Infant CPR 101",
             "type": 5,
             "uuid": "9876543210",
        }
    ]
}
```

### Get user's upcoming webinars [GET /webinars/{user_id}/upcoming]

Get the future webinars for which the authenticated user was registered.

+ Parameters
    + user_id (integer) - The ID of the user.

+ Response

```
{
    "webinars": [
         {
             "agenda": "WEBINAR 1",
             "created_at": "2021-06-23T11:48:26Z",
             "duration": 30,
             "host_id": "S4JWnAqnSEqM3XxtbsKPbQ",
             "id": 11111,
             "join_url": "https://us02web.zoom.us/j/11111",
             "start_time": "2021-07-07/30/21T20:00:00Z",
             "timezone": "America/Chicago",
             "topic": "Maven for Centro",
             "type": 5,
             "uuid": "1234567890",
         },
         {
             "agenda": "WEBINAR 2",
             "created_at": "2021-06-28T22:24:39Z",
             "duration": 60,
             "host_id": "S4JWnAqnSEqM3XxtbsKPbQ",
             "id": 22222,
             "join_url": "https://us02web.zoom.us/j/22222",
             "start_time": TOMORROW.strftime("%Y-%m-%dT%H:%M:%SZ"),
             "start_time": "2021-07-07/31/21T20:00:00Z",
             "timezone": "America/New_York",
             "topic": "Infant CPR 101",
             "type": 5,
             "uuid": "9876543210",
        }
    ]
}
```

### Register for an upcoming webinar [POST /webinars/{webinar_id}/register]

Register the authenticated user for the specified webinar.

+ Parameters
    + webinar_id (integer) - The ID of the webinar.

+ Response

```
{
    "id": "12345678901",
    "join_url": "https://us02web.zoom.us/w/12345678901?tk=WVKHtKu5WbjE0ab3vTtu3tnBUztmGeFNGBNTXZpJgTE.DQIAAAATCTbVeRZ4Zk13ckNYVFNFS1dzSnZkWkV4QkF3AAAAAAAAAAAAAAAAAAAAAAAAAAAA&uuid=WN_0D1cKKQLQ2W46HAEpkk-NA",
    "start_time": "2021-07-30T00:00:00Z",
    "topic": "Toddler nutrition 101 virtual class",
    "registrant_id": "abCdeFGHIJKLmNopQRsTUv"
}
```

### Unregister for an upcoming webinar [DELETE /webinars/{webinar_id}/unregister]

Unregister the authenticated user for the specified webinar.

+ Parameters
    + webinar_id (integer) - The ID of the webinar.

+ Response

```
{
    "id": "12345678901",
    "join_url": "https://us02web.zoom.us/w/12345678901?tk=WVKHtKu5WbjE0ab3vTtu3tnBUztmGeFNGBNTXZpJgTE.DQIAAAATCTbVeRZ4Zk13ckNYVFNFS1dzSnZkWkV4QkF3AAAAAAAAAAAAAAAAAAAAAAAAAAAA&uuid=WN_0D1cKKQLQ2W46HAEpkk-NA",
    "start_time": "2021-07-30T00:00:00Z",
    "topic": "Toddler nutrition 101 virtual class",
    "registrant_id": "abCdeFGHIJKLmNopQRsTUv"
}
```

# Group Dashboard Metadata

## Dashboard Metadata [/dashboard-metadata]

The dashboard-metadata routes are consumed by the dashboard-api application to populate and/or decide whether to hide/show dashboard blocks for a particular user.  For more information on dashboard blocks, check out [this page](https://www.notion.so/mavenclinic/Dashboard-Documentation-60a3a2b494ae48b8b2b6aecd3371f709).

### Get all of the metadata for a given user's dynamic dashboard [GET /dashboard-metadata?phase={phase}]

Fetch all of the metadata and dynamic content for a given User.

+ Parameters
    + phase (string) - The name of the phase to fetch content and metadata for. (optional)

+ Response 200 (application/json)

        {
            "user": {
                "id": 1,
                "organization": {
                    "id": 1,
                    "name": null,
                    "icon": null,
                    "bms_enabled": false
                },
                "advocate": {
                    "id": 2,
                    "name": "Jane2 Smith2",
                    "image": null,
                    "is_prescriber": false,
                    "verticals": [
                        "Care Advocate"
                    ]
                },
                "scheduled_care": {
                    "practitioner": {
                        "id": 3,
                        "name": "Jane3 Smith3",
                        "image": null,
                        "is_prescriber": false,
                        "verticals": [
                            "Wellness Coach"
                        ]
                    },
                    "appointment": {
                        "id": 997948365,
                        "start": "2020-03-17T17:44:00",
                        "end": "2020-03-17T17:54:00"
                    }
                },
                "care_team": [
                    {
                        "id": 3,
                        "name": "Jane3 Smith3",
                        "image": null,
                        "is_prescriber": false,
                        "verticals": [
                            "Wellness Coach"
                        ]
                    }
                ]
            },
            "program": {
                "id": 1,
                "module": {
                    "id": 10,
                    "name": "pregnancy",
                    "next_module_id": 9,
                    "start_date": "2020-02-18",
                    "end_date": "2020-11-24"
                },
                "phase": {
                    "id": 201,
                    "name": "week-4"
                },
                "start_date": "2020-03-17T17:34:30",
                "end_date": "2021-05-11",
                "assessment": {
                    "id": 1,
                    "slug": "postpartum-onboarding",
                    "title": "Postpartum Onboarding",
                    "version": 1,
                    "completed": false,
                    "url": "/1/postpartum-onboarding/take/1",
                }
            },
            "resources": {
                "maven": [
                    {
                        "id": 4,
                        "title": "maven",
                        "group": "article",
                        "url": "https://www.mavenclinic.com/resources/content/article/maven",
                        "icon": "https://img-res.mavenclinic.com/YZ9WuIwCf18rjD0n16kxsCpcS4I=/smart/https://storage.googleapis.com/maven-dev-images/blah",
                        "tagline": "maven"
                    },
                    {
                        "id": 5,
                        "title": "maven-no-image",
                        "group": "article",
                        "url": "https://www.mavenclinic.com/resources/content/article/maven-no-image",
                        "icon": null,
                        "tagline": "maven-no-image"
                    },
                    {
                        "id": 6,
                        "title": "maven-long-body",
                        "group": "article",
                        "url": "https://www.mavenclinic.com/resources/content/article/maven-long-body",
                        "icon": "https://img-res.mavenclinic.com/YZ9WuIwCf18rjD0n16kxsCpcS4I=/smart/https://storage.googleapis.com/maven-dev-images/blah",
                        "tagline": "This is most definitely over 80 characters. I sincerely hope it gets trimmed ..."
                    }
                ],
                "org": [
                    {
                        "id": 7,
                        "title": "org",
                        "group": "article",
                        "url": "https://www.mavenclinic.com/resources/custom/7",
                        "icon": null,
                        "tagline": null
                    }
                ]
            }
        }

### Get dashboard metadata for a given track [GET /dashboard-metadata/track/{track_id}]

Get information about a user and their track that is necessary to render their dashboard.
Also available at `/dashboard-metadata`, but that is deprecated due to multitrack necessitating the specification of track.

+ Parameters
    + track_id (integer) - The ID of the MemberTrack.

+ Response

```
{
    "user": {
        "id": 13,
        "organization": {
            "id": 12,
            "name": "Maven",
            "icon": "https://mavenclinic.com/icon.png",
            "bms_enabled": true
        },
        "advocate": {
            "id": 1,
            "name": "Mika",
            "image": "https://mavenclinic.com/mika.png"
            "vertical": "Care Advocate",
            "is_prescriber": false,
            "verticals": ["Care Advocate"],
            "availabilities": []
        }
        "has_had_intro_appointment": true,
        "wallet_status": "eligible",
        "first_name": "Kat",
        "has_available_tracks": false,
        "health_profile": {
            "due_date": "2022-01-28",
            "fertility_treatment_status": null
        },
        "has_care_plan": false,
        "country": "PH",
        "scheduled_care": {
            "practitioner": {
                "id": 1,
                "name": "Mika",
                "image": "https://mavenclinic.com/mika.png"
                "vertical": "Care Advocate",
                "is_prescriber": false,
                "verticals": ["Care Advocate"],
                "availabilities": []
            },
            "appointment": {
                "id": 31,
                "start": "2022-01-28T13:00",
                "end": "2022-01-28T13:15"
            }
        }
    },
    "program": {
        "name": "pregnancy",
        "selected_phase": "week-15",
        "current_phase": "week-14",
        "transitioning_to": null,
        "auto_transitioned": false,
        "length_in_days": 294,
        "total_phases": 42
    },
    "resources": {
        "maven": [
            {
                "id": 2,
                "title": "All about dachshunds",
                "group": "Article",
                "url": "https://mavenclinic.com/long",
                "icon": null,
                "tagline": null
            }
        ],
        "org": []
    }
}
```

### Get practitioner [GET /dashboard-metadata/practitioner]

Used to populate the "care block" on the dashboard, which encourages a user to book with a certain type of provider.  It fetches info about the next available practitioner in a given vertical (it is also possible to specify specialty).  Product length is not taken into account, so it is possible for the next available practitioner to be one with a fifteen minute slot available even though the vertical in question may have a thirty minute product.

+ Parameters
    + vertical (str) - The `name` of the vertical for which a provider is needed.  Optional.
    + specialty (str) - The `name` of the specialty for which a provider is needed.  Optional.

+ Response

```
{
    "id": 2,
    "name": "Guss",
    "image": "https://mavenclinic.com/guss.png"
    "vertical": "OB-GYN",
    "is_prescriber": true,
    "verticals": ["OB-GYN"],
    "availabilities": [
        {
            "scheduled_start": "2022-01-29T13:00",
            "scheduled_end": "2022-01-29T13:15"
        },
        {
            "scheduled_start": "2022-01-29T14:15",
            "scheduled_end": "2022-01-29T14:30"
        }
    ]
}
```

### Get virtual classes [GET /dashboard-metadata/events]

Gets the next n virtual classes, also known as virtual events, in the given categories.  Will not show classes that start within the next 24 hours due to a supposed registration cutoff.  

+ Parameters
    + categories (str) - Comma-separated string of virtual class categories to query.
    + limit (int) - The maximum number of classes to retrieve, typically 2.
    + end_date (str) - The end date before which retrieved classes should be scheduled to start, typically 2 weeks from the current date.

+ Response

```
{
    "data": [
        {
            "id": "33333",
            "title": "Fertility 101",
            "category": "fertility-101",
            "registration_form_url": "https://zoom.com",
            "scheduled_start": "2022-02-02T18:00"
            "host_image_url": null,
            "host_name": "Penny the Pup"
        }
    ]
}
```

### Get assessment info for assessment of a given type [GET /dashboard-metadata/assessment]

Gets info about the latest assessment of a given type, and whether the user has completed it.

+ Parameters
    + type (str) - The assessment type, e.g. `FERTILITY_ONBOARDING`

+ Response

```
{
    "id": 11,
    "slug": "fertility-onboarding-assessment",
    "title": "Fertility onboarding assessment",
    "version": 4,
    "completed": false,
    "url": "https://mavenclinic.com/assessments/11/fertility-onboarding-assessment"
}
```



# Group Organizations

## Organization Eligibility Info [/organizations]
Organizations are associated with an eligibility type which determines which flow criteria is the frontend needs to collect from members belonging to each organization.

### Get Organization Eligibility Info (by ID) [GET /organizations/{organization_id}]

Gets the eligibility type for the given organization and other fields the frontend needs in order to send the user through the correct eligibility flow.

+ Parameters
    + organization_id (required, string) - Organization ID

+ Response 200 (application/json)

            {
                "eligibility": {
                    "type": "CLIENT_SPECIFIC",
                    "code": "CLIENT_SPECIFIC_ELIGIBILITY_ENABLED",
                    "fields": [
                        {
                            "name": "unique_corp_id",
                            "label": "FOO"
                        }
                    ]
                },
                "organization": {
                    "id": 1,
                    "name": "Maven",
                    "marketing_name": "Maven",
                    "logo": null
                }
            }

### Get Organization Eligibility Info (by name) [GET /organizations?name={name}]

Gets the eligibility type for the given organization and other fields the frontend needs in order to send the user through the correct eligibility flow.

+ Parameters
    + name (required, string) - Organization name or display name

+ Response 200 (application/json)

            {
                "eligibility": {
                    "type": "CLIENT_SPECIFIC",
                    "code": "CLIENT_SPECIFIC_ELIGIBILITY_ENABLED",
                    "fields": [
                        {
                            "name": "unique_corp_id",
                            "label": "FOO"
                        }
                    ]
                },
                "organization": {
                    "id": 1,
                    "name": "Maven",
                    "marketing_name": "Maven",
                    "logo": null
                }
            }

### Get All Organizations Eligibility Info [GET /organizations]

Gets the eligibility type for all organizations and other fields the frontend needs in order to send the user through the correct eligibility flow.

+ Response 200 (application/json)

            [
              {
                  "eligibility": {
                      "type": "CLIENT_SPECIFIC",
                      "code": "CLIENT_SPECIFIC_ELIGIBILITY_ENABLED",
                      "fields": [
                          {
                              "name": "unique_corp_id",
                              "label": "FOO"
                          }
                      ]
                  },
                  "organization": {
                      "id": 1,
                      "name": "Maven",
                      "marketing_name": "Maven",
                      "logo": null
                  }
              },
              {
                  "eligibility": {
                      "type": "FILELESS",
                      "code": "FILELESS_ELIGIBILITY_ENABLED"
                  },
                  "organization": {
                      "id": 2,
                      "name": "FunCorp",
                      "marketing_name": "FunCorp",
                      "logo": null
                  }
              },
              {
                  "eligibility": {
                      "type": "STANDARD"
                  },
                  "organization": {
                      "id": 3,
                      "name": "Test Organization X",
                      "marketing_name": "Test Organization X",
                      "logo": null
                  }
              }
          ]


## Organization Search [/organizations/search]

### Get Organization Names [GET /organizations/search?name={organization_name}]

Gets the Organizations that start with the value passed with the `name` parameter.

+ Parameters
    + name (required, string) - Organization name

+ Response 200 (application/json)

            {
              "results": [
                {
                  "id": "2",
                  "name": "FunCorp"
                },
                {
                  "id": "6",
                  "name": "FunkyCorp"
                }
              ]
            }

# Group Library

## Library [/library]

The library routes return resources and/or virtual events, which both show up in the "Learn" section of the app.

### Get Library by Track [GET /library/{track_id}]

This route retrieves popular topics, a featured resource, content tags that contain resources, and virtual and on-demand classes for a user's currently selected track in order to populate the "Learn" section of the app.

+ Parameters
    + track_id (required, int) - Track id

+ Response 200 (application/json)

            {
                "classes_section": {
                    "featured_resource": {
                        "id": "2015",
                        "image": {
                            "hero": "https://img-res.mavenclinic.com/EPvVnAFh_SzLGlOQToMChKtLz34=/760x428/https://storage.googleapis.com/maven-prod-images/0127a9f6-060c-4d86-9de0-4f2ba415e7e8",
                            "original": "https://img-res.mavenclinic.com/pl9qpBd1NFKqglB_3XdO4hkSoe0=/smart/https://storage.googleapis.com/maven-prod-images/0127a9f6-060c-4d86-9de0-4f2ba415e7e8",
                            "thumbnail": "https://img-res.mavenclinic.com/x8Jp7UTO3zOft_grkHNFQGCd6BE=/120x90/https://storage.googleapis.com/maven-prod-images/0127a9f6-060c-4d86-9de0-4f2ba415e7e8"
                        },
                        "instructor": "a Pediatric Sleep Coach",
                        "length": "00:19",
                        "slug": "newborn-and-infant-sleep-101-on-demand-class",
                        "sub_header": null,
                        "title": "Newborn and infant sleep 101"
                    },
                    "on_demand_classes": [{
                        "id": "2128",
                        "image": {
                            "hero": "https://i.imgur.com/zxFkXI9.jpeg",
                            "original": "https://i.imgur.com/zxFkXI9.jpeg",
                            "thumbnail": "https://i.imgur.com/zxFkXI9.jpeg"
                        },
                        "instructor": "a Career Coach",
                        "length": "00:44",
                        "slug": "sharing-the-load-of-parenting-on-demand-class",
                        "title": "Sharing the load of parenting"
                    }],
                    "virtual_events": [{
                        "host_image_url": "https://img-res.mavenclinic.com/E6LMUIe8m2EZ56qyBwotfAYZhxk=/smart/https://storage.googleapis.com/maven-prod-images/063ca79f-ed3a-4601-b89b-41c0f1e5f9c5",
                        "host_name": "Kat",
                        "host_specialty": "Doula",
                        "id": "157",
                        "registration_form_url": "https://us02web.zoom.us/webinar/register/1316315615702/WN_APHnA4vVQuCo5T-bXPMY5Q",
                        "scheduled_end": "2022-06-23T01:00:00",
                        "scheduled_start": "2022-06-22T23:00:00",
                        "title": "Pregnancy 101"
                    }]
                },
                "featured_resource": {
                    "id": "1980",
                    "image": {
                        "hero": "https://i.imgur.com/zxFkXI9.jpeg",
                        "original": "https://i.imgur.com/zxFkXI9.jpeg",
                        "thumbnail": "https://i.imgur.com/zxFkXI9.jpeg"
                    },
                    "slug": "what-you-need-to-know-about-timing-your-contractions",
                    "title": "What you need to know about timing your contractions"
                },
                "popular_topics": ["Prenatal health", "Postpartum health"],
                "tags": [{
                    "display_name": "Postpartum health",
                    "id": "1",
                    "name": "postpartum_postpartum_health",
                    "resources": [{
                        "id": "2163",
                        "image": {
                            "hero": "https://i.imgur.com/zxFkXI9.jpeg",
                            "original": "https://i.imgur.com/zxFkXI9.jpeg",
                            "thumbnail": "https://i.imgur.com/zxFkXI9.jpeg"
                        },
                        "slug": "when-should-i-call-my-doctor-about-high-blood-pressure-during-pregnancy",
                        "title": "When should I call my doctor about high blood pressure during pregnancy?"
                    }]
                }, {
                    "display_name": "Prenatal health",
                    "id": "5",
                    "name": "pregnancy_prenatal_health",
                    "resources": [{
                        "id": "2182",
                        "image": {
                            "hero": "https://i.imgur.com/zxFkXI9.jpeg",
                            "original": "https://i.imgur.com/zxFkXI9.jpeg",
                            "thumbnail": "https://i.imgur.com/zxFkXI9.jpeg"
                        },
                        "slug": "4-ways-to-improve-depression-symptoms-during-pregnancy",
                        "title": "4 ways to improve depression symptoms during pregnancy"
                    }]
                }]
            }

### Get Virtual Events by Track [GET /library/virtual_events/{track_id}?limit={limit}]

This route retrieves the virtual events that are available to a user based on their track and week.

+ Parameters
    + track_id (required, int) - Track id
    + limit (optional, int) - Limit of the number of virtual events that are returned

+ Response 200 (application/json)

            {
                "virtual_events": [{
                    "description": "Knowledge is power during pregnancy. Learn what appointments, tests, and symptoms to expect in each trimester, what's safe exercise and nutrition-wise, and more.",
                    "description_body": "Knowledge is power during pregnancy. Learn what appointments, tests, and symptoms to expect in each trimester, what's safe exercise and nutrition-wise, and more.  Another sentence, because this is longer than the description."
                    "host_image_url": "https://img-res.mavenclinic.com/E6LMUIe8m2EZ56qyBwotfAYZhxk=/smart/https://storage.googleapis.com/maven-prod-images/063ca79f-ed3a-4601-b89b-41c0f1e5f9c5",
                    "host_name": "Mika Fernandez",
                    "host_specialty": "Midwife",
                    "id": "157",
                    "registration_form_url": "/app/event-registration/220",
                    "rsvp_required": true,
                    "scheduled_end": "2022-06-23T01:00:00",
                    "scheduled_start": "2022-06-22T23:00:00",
                    "title": "Pregnancy 101",
                    "cadence": null,
                    "event_image_url": "https://storage.googleapis.com/maven-resource-assets/Virtual%20Events/Pregnancy%20101_Resized.jpg",
                    "provider_profile_url": "/practitioner/489",
                    "what_to_expect_body": "This sentence tells you what to expect",
                    "what_youll_learn_body": ["Bullet point one", "Bullet point two", "And much more"]
                }, {
                    "description": "This is a description for a weekly drop-in class.",
                    "description_body": "This is an even longer description for that weekly drop-in class.  Note the differing rsvp_required, cadence, and registration_form_url."
                    "host_image_url": "https://img-res.mavenclinic.com/KkB3xxDSr2skTwiiFYu1B3w1GaA=/smart/https://storage.googleapis.com/maven-prod-images/2b004769-f2d8-4f38-86f0-1a7ba3fb06ff",
                    "host_name": "Guss Cannito",
                    "host_specialty": "Doula",
                    "id": "158",
                    "registration_form_url": "https://www.mavenclinic.com/resources/content/article/mavens-lactation-drop-in-group",
                    "rsvp_required": false,
                    "scheduled_end": "2022-06-24T01:00:00",
                    "scheduled_start": "2022-06-24T00:00:00",
                    "title": "Newborn care 101",
                    "cadence": "WEEKLY",
                    "event_image_url": "https://storage.googleapis.com/maven-resource-assets/Virtual%20Events/Lactation%20101_Resized.jpg",
                    "provider_profile_url": "/practitioner/490",
                    "what_to_expect_body": "This sentence tells you what to expect",
                    "what_youll_learn_body": ["Bullet point one", "Bullet point two", "And much more"]
                }]
            }

### Get On-Demand Classes by Track [GET /library/on_demand_classes/{track_id}]

This route retrieves the on-demand classes that are available to a user based on their track and week.

+ Parameters
    + track_id (required, int) - Track id

+ Response 200 (application/json)

            {
                "on_demand_classes": [{
                    "id": "2128",
                    "image": {
                        "hero": "https://img-res.mavenclinic.com/zt2S5dVgTYYjkx7mary14_Tdoko=/760x428/https://storage.googleapis.com/maven-prod-images/2d88f985-72a8-4f30-9d55-fc3e2d14da71",
                        "original": "https://img-res.mavenclinic.com/6Li0mGqKvdocfL_PoBW99Y9Hazw=/smart/https://storage.googleapis.com/maven-prod-images/2d88f985-72a8-4f30-9d55-fc3e2d14da71",
                        "thumbnail": "https://img-res.mavenclinic.com/VRyeyBah0Gx6Ygf68o_ZnRQtIsA=/120x90/https://storage.googleapis.com/maven-prod-images/2d88f985-72a8-4f30-9d55-fc3e2d14da71"
                    },
                    "instructor": "a Career Coach",
                    "length": "00:44",
                    "slug": "sharing-the-load-of-parenting-on-demand-class",
                    "title": "Sharing the load of parenting"
                }, {
                    "id": "2123",
                    "image": {
                        "hero": "https://img-res.mavenclinic.com/c1Ihd8iRjHrBjHifsl5QKbk5fFI=/760x428/https://storage.googleapis.com/maven-prod-images/3ee928a3-fc1c-4001-8823-7a7d94ca05df",
                        "original": "https://img-res.mavenclinic.com/OXlUCEnnF5lK93CfGFAtDWZVANY=/smart/https://storage.googleapis.com/maven-prod-images/3ee928a3-fc1c-4001-8823-7a7d94ca05df",
                        "thumbnail": "https://img-res.mavenclinic.com/iAv52KAl-3vOSYEdwHfuHx7PKj0=/120x90/https://storage.googleapis.com/maven-prod-images/3ee928a3-fc1c-4001-8823-7a7d94ca05df"
                    },
                    "instructor": "a Lactation Consultant",
                    "length": "00:43",
                    "slug": "breastfeeding-101-on-demand-class",
                    "title": "Breastfeeding 101"
                }]
            }


### Get Virtual Event by ID [GET /v1/virtual_events/{id}]

This route returns a virtual event specified by ID.  It may be a past event.

+ Parameters
    + id (required, int) - Virtual event id

+ Response 200 (application/json)

            {
                "id": 333,
                "title": "Parenting 101 & Q&A Session",
                "host_name": "Mika Guss",
                "registration_form_url": "https://zoom.com",
                "rsvp_required": true,
                "scheduled_start": "2022-07-28T23:30:00",
                "scheduled_end": "2022-07-29T00:30:00",
                "host_image_url": "https://img.com/img.img",
                "cadence": "WEEKLY",
                "event_image_url": "https://img.ca/img.png",
                "host_specialty": "Doula",
                "provider_profile_url": "https://mavenclinic.com/app/practitioner/39",
                "description": "Short description used on event card",
                "description_body": "Longgggggg description used on the registration page",
                "what_youll_learn_body": [
                    "Best ways to support your partner in the postpartum period to how to bond with your new baby",
                    "What you need to know to go into parenthood prepared"
                ],
                "what_to_expect_body": "You will join as anonymous, and be muted with camera off. You will be able to submit questions for the provider to answer over a webinar portal."
            }


### Register user for virtual event [POST /v1/virtual_events/{virtual_event_id}/user_registration]

This route registers user for the Zoom webinar associated with a Maven virtual event.

+ Parameters
    + virtual_event_id (required, int) - Virtual event id

+ Response 201 (application/json)

            {"join_url":"https://mavenclinic.zoom.us/w/85342627803?tk=dhZmtgeRc724kYD21AGS8PUIjqe01kW7AH78TdI4Emo.DQMAAAAT3tEn2xZVX1BfSkVpSVRlZVRDNjRGazlUWGNBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\u0026uuid=WN_vxfr7U05Tw-XwsTziXcp_w"}


### Assign Care Advocate [POST /v1/care_advocates/assign]

This route assigns the member with the lowest-utilization CA and returns the corresponding CA and product.

+ Parameters
    + member_id (required, int) - Member Id
    + ca_ids (required, comma-separated list of ints) - List of potential CA's

+ Response 200 (application/json)
            "assigned_care_advocate": {
                "id": 1,
                "first_name": "Kaitlyn",
                "image_url": "www.avatar_url.com",
                "products": [
                    {
                        "product_id": 10,
                        "is_intro_appointment_product": True,
                    }
                ],
            }

### Get metadata for a resource [/v1/content/resources/metadata]

This route returns the metadata for resources. Depending on the resource type, different fields will be returned. There
is both a single-resource and batch endpoint available.

All resource types will return the following fields:

```json
{
  "id": <int>,
  "thumbnail": {
    "url": <string>
  }
}
```

The following resource types will have additional fields:

* `on_demand_class`:
  ```json
  {
    "on_demand_class": {
        "image": <string>,
        "slug": <string>,
        "instructor": <string>,
        "title": <string>,
        "id": <string>,
        "type": "html" | "rich_text",
        "length": <string formatted as "hh:mm"> 
    }
  }
  ```

#### Single [`GET` `/v1/content/resources/metadata/{resource_id}`]

This route returns the metadata for a single resource.

* Parameters:
    * `resource_id` - ID of the resource for which metadata will be returned.
* Response 200 (application/json)
  ```json
  {
    "id": <int>,
    "thumbnail": {
      "url": <string>
    },
    <additional resource-specific fields, as applicable>
  }
  ```

#### Batch [`GET` `/v1/content/resources/metadata/?resource_ids={resource_ids}`]

This route returns the metadata for up to 10 resources.

* Parameters:
    * `resource_ids` - A comma-separated list of up to 10 resource IDs for which metadata will be returned.
* Response 200 (application/json)
  ```json
  {
    <resource_id_1>: {
      "id": <int>,
      "thumbnail": {
        "url": <string>
      },
      <additional resource-specific fields, as applicable>
    },
    ...
  }
  ```
