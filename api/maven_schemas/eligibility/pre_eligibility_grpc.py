# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: maven-schemas/eligibility/pre_eligibility.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import maven_schemas.eligibility.pre_eligibility_pb2


class PreEligibilityServiceBase(abc.ABC):

    @abc.abstractmethod
    async def CheckPreEligibility(self, stream: 'grpclib.server.Stream[maven_schemas.eligibility.pre_eligibility_pb2.PreEligibilityRequest, maven_schemas.eligibility.pre_eligibility_pb2.PreEligibilityResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/maven.pre_eligibility.pre_eligibility.PreEligibilityService/CheckPreEligibility': grpclib.const.Handler(
                self.CheckPreEligibility,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility.pre_eligibility_pb2.PreEligibilityRequest,
                maven_schemas.eligibility.pre_eligibility_pb2.PreEligibilityResponse,
            ),
        }


class PreEligibilityServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CheckPreEligibility = grpclib.client.UnaryUnaryMethod(
            channel,
            '/maven.pre_eligibility.pre_eligibility.PreEligibilityService/CheckPreEligibility',
            maven_schemas.eligibility.pre_eligibility_pb2.PreEligibilityRequest,
            maven_schemas.eligibility.pre_eligibility_pb2.PreEligibilityResponse,
        )
