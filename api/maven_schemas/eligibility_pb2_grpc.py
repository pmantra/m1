# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from maven_schemas import eligibility_pb2 as maven__schemas_dot_eligibility__pb2


class EligibilityServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckStandardEligibility = channel.unary_unary(
                '/maven.eligibility.EligibilityService/CheckStandardEligibility',
                request_serializer=maven__schemas_dot_eligibility__pb2.StandardEligibilityRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.Member.FromString,
                )
        self.CheckAlternateEligibility = channel.unary_unary(
                '/maven.eligibility.EligibilityService/CheckAlternateEligibility',
                request_serializer=maven__schemas_dot_eligibility__pb2.AlternateEligibilityRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.Member.FromString,
                )
        self.CheckEligibilityOverEligibility = channel.unary_unary(
                '/maven.eligibility.EligibilityService/CheckEligibilityOverEligibility',
                request_serializer=maven__schemas_dot_eligibility__pb2.EligibilityOverEligibilityRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.MemberList.FromString,
                )
        self.CheckClientSpecificEligibility = channel.unary_unary(
                '/maven.eligibility.EligibilityService/CheckClientSpecificEligibility',
                request_serializer=maven__schemas_dot_eligibility__pb2.ClientSpecificEligibilityRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.Member.FromString,
                )
        self.CheckNoDOBEligibility = channel.unary_unary(
                '/maven.eligibility.EligibilityService/CheckNoDOBEligibility',
                request_serializer=maven__schemas_dot_eligibility__pb2.NoDOBEligibilityRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.Member.FromString,
                )
        self.CheckBasicEligibility = channel.unary_unary(
                '/maven.eligibility.EligibilityService/CheckBasicEligibility',
                request_serializer=maven__schemas_dot_eligibility__pb2.BasicEligibilityRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.MemberList.FromString,
                )
        self.CheckEmployerEligibility = channel.unary_unary(
                '/maven.eligibility.EligibilityService/CheckEmployerEligibility',
                request_serializer=maven__schemas_dot_eligibility__pb2.EmployerEligibilityRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.Member.FromString,
                )
        self.CheckHealthPlanEligibility = channel.unary_unary(
                '/maven.eligibility.EligibilityService/CheckHealthPlanEligibility',
                request_serializer=maven__schemas_dot_eligibility__pb2.HealthPlanEligibilityRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.Member.FromString,
                )
        self.GetMemberById = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetMemberById',
                request_serializer=maven__schemas_dot_eligibility__pb2.MemberIdRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.Member.FromString,
                )
        self.GetMemberByOrgIdentity = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetMemberByOrgIdentity',
                request_serializer=maven__schemas_dot_eligibility__pb2.OrgIdentityRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.Member.FromString,
                )
        self.GetWalletEnablementById = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetWalletEnablementById',
                request_serializer=maven__schemas_dot_eligibility__pb2.MemberIdRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.WalletEnablement.FromString,
                )
        self.GetWalletEnablementByOrgIdentity = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetWalletEnablementByOrgIdentity',
                request_serializer=maven__schemas_dot_eligibility__pb2.OrgIdentityRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.WalletEnablement.FromString,
                )
        self.GetWalletEnablementByUserId = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetWalletEnablementByUserId',
                request_serializer=maven__schemas_dot_eligibility__pb2.UserIdRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.WalletEnablement.FromString,
                )
        self.GetVerificationForUser = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetVerificationForUser',
                request_serializer=maven__schemas_dot_eligibility__pb2.GetVerificationForUserRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.VerificationForUser.FromString,
                )
        self.GetAllVerificationsForUser = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetAllVerificationsForUser',
                request_serializer=maven__schemas_dot_eligibility__pb2.GetAllVerificationsForUserRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.VerificationList.FromString,
                )
        self.CreateVerificationForUser = channel.unary_unary(
                '/maven.eligibility.EligibilityService/CreateVerificationForUser',
                request_serializer=maven__schemas_dot_eligibility__pb2.CreateVerificationForUserRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.VerificationForUser.FromString,
                )
        self.CreateMultipleVerificationsForUser = channel.unary_unary(
                '/maven.eligibility.EligibilityService/CreateMultipleVerificationsForUser',
                request_serializer=maven__schemas_dot_eligibility__pb2.CreateMultipleVerificationsForUserRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.VerificationList.FromString,
                )
        self.CreateFailedVerification = channel.unary_unary(
                '/maven.eligibility.EligibilityService/CreateFailedVerification',
                request_serializer=maven__schemas_dot_eligibility__pb2.CreateFailedVerificationRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.VerificationAttempt.FromString,
                )
        self.GetEligibleFeaturesForUser = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetEligibleFeaturesForUser',
                request_serializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserResponse.FromString,
                )
        self.GetEligibleFeaturesForUserAndOrg = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetEligibleFeaturesForUserAndOrg',
                request_serializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserAndOrgRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserAndOrgResponse.FromString,
                )
        self.GetEligibleFeaturesBySubPopulationId = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetEligibleFeaturesBySubPopulationId',
                request_serializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesBySubPopulationIdRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesBySubPopulationIdResponse.FromString,
                )
        self.GetSubPopulationIdForUser = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetSubPopulationIdForUser',
                request_serializer=maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserResponse.FromString,
                )
        self.GetSubPopulationIdForUserAndOrg = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetSubPopulationIdForUserAndOrg',
                request_serializer=maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserAndOrgRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserAndOrgResponse.FromString,
                )
        self.GetOtherUserIdsInFamily = channel.unary_unary(
                '/maven.eligibility.EligibilityService/GetOtherUserIdsInFamily',
                request_serializer=maven__schemas_dot_eligibility__pb2.GetOtherUserIdsInFamilyRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.GetOtherUserIdsInFamilyResponse.FromString,
                )
        self.DeactivateVerificationForUser = channel.unary_unary(
                '/maven.eligibility.EligibilityService/DeactivateVerificationForUser',
                request_serializer=maven__schemas_dot_eligibility__pb2.DeactivateVerificationForUserRequest.SerializeToString,
                response_deserializer=maven__schemas_dot_eligibility__pb2.DeactivateVerificationForUserResponse.FromString,
                )


class EligibilityServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckStandardEligibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckAlternateEligibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckEligibilityOverEligibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckClientSpecificEligibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckNoDOBEligibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckBasicEligibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckEmployerEligibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckHealthPlanEligibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMemberById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMemberByOrgIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWalletEnablementById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWalletEnablementByOrgIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWalletEnablementByUserId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVerificationForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllVerificationsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVerificationForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMultipleVerificationsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFailedVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEligibleFeaturesForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEligibleFeaturesForUserAndOrg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEligibleFeaturesBySubPopulationId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSubPopulationIdForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSubPopulationIdForUserAndOrg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOtherUserIdsInFamily(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivateVerificationForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EligibilityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckStandardEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckStandardEligibility,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.StandardEligibilityRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.Member.SerializeToString,
            ),
            'CheckAlternateEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckAlternateEligibility,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.AlternateEligibilityRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.Member.SerializeToString,
            ),
            'CheckEligibilityOverEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckEligibilityOverEligibility,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.EligibilityOverEligibilityRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.MemberList.SerializeToString,
            ),
            'CheckClientSpecificEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckClientSpecificEligibility,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.ClientSpecificEligibilityRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.Member.SerializeToString,
            ),
            'CheckNoDOBEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckNoDOBEligibility,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.NoDOBEligibilityRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.Member.SerializeToString,
            ),
            'CheckBasicEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckBasicEligibility,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.BasicEligibilityRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.MemberList.SerializeToString,
            ),
            'CheckEmployerEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckEmployerEligibility,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.EmployerEligibilityRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.Member.SerializeToString,
            ),
            'CheckHealthPlanEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckHealthPlanEligibility,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.HealthPlanEligibilityRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.Member.SerializeToString,
            ),
            'GetMemberById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMemberById,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.MemberIdRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.Member.SerializeToString,
            ),
            'GetMemberByOrgIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMemberByOrgIdentity,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.OrgIdentityRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.Member.SerializeToString,
            ),
            'GetWalletEnablementById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWalletEnablementById,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.MemberIdRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.WalletEnablement.SerializeToString,
            ),
            'GetWalletEnablementByOrgIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWalletEnablementByOrgIdentity,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.OrgIdentityRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.WalletEnablement.SerializeToString,
            ),
            'GetWalletEnablementByUserId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWalletEnablementByUserId,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.UserIdRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.WalletEnablement.SerializeToString,
            ),
            'GetVerificationForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVerificationForUser,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.GetVerificationForUserRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.VerificationForUser.SerializeToString,
            ),
            'GetAllVerificationsForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllVerificationsForUser,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.GetAllVerificationsForUserRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.VerificationList.SerializeToString,
            ),
            'CreateVerificationForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVerificationForUser,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.CreateVerificationForUserRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.VerificationForUser.SerializeToString,
            ),
            'CreateMultipleVerificationsForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMultipleVerificationsForUser,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.CreateMultipleVerificationsForUserRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.VerificationList.SerializeToString,
            ),
            'CreateFailedVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFailedVerification,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.CreateFailedVerificationRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.VerificationAttempt.SerializeToString,
            ),
            'GetEligibleFeaturesForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEligibleFeaturesForUser,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserResponse.SerializeToString,
            ),
            'GetEligibleFeaturesForUserAndOrg': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEligibleFeaturesForUserAndOrg,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserAndOrgRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserAndOrgResponse.SerializeToString,
            ),
            'GetEligibleFeaturesBySubPopulationId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEligibleFeaturesBySubPopulationId,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesBySubPopulationIdRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesBySubPopulationIdResponse.SerializeToString,
            ),
            'GetSubPopulationIdForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSubPopulationIdForUser,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserResponse.SerializeToString,
            ),
            'GetSubPopulationIdForUserAndOrg': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSubPopulationIdForUserAndOrg,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserAndOrgRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserAndOrgResponse.SerializeToString,
            ),
            'GetOtherUserIdsInFamily': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOtherUserIdsInFamily,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.GetOtherUserIdsInFamilyRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.GetOtherUserIdsInFamilyResponse.SerializeToString,
            ),
            'DeactivateVerificationForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivateVerificationForUser,
                    request_deserializer=maven__schemas_dot_eligibility__pb2.DeactivateVerificationForUserRequest.FromString,
                    response_serializer=maven__schemas_dot_eligibility__pb2.DeactivateVerificationForUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'maven.eligibility.EligibilityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EligibilityService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckStandardEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/CheckStandardEligibility',
            maven__schemas_dot_eligibility__pb2.StandardEligibilityRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.Member.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckAlternateEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/CheckAlternateEligibility',
            maven__schemas_dot_eligibility__pb2.AlternateEligibilityRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.Member.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckEligibilityOverEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/CheckEligibilityOverEligibility',
            maven__schemas_dot_eligibility__pb2.EligibilityOverEligibilityRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.MemberList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckClientSpecificEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/CheckClientSpecificEligibility',
            maven__schemas_dot_eligibility__pb2.ClientSpecificEligibilityRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.Member.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckNoDOBEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/CheckNoDOBEligibility',
            maven__schemas_dot_eligibility__pb2.NoDOBEligibilityRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.Member.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckBasicEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/CheckBasicEligibility',
            maven__schemas_dot_eligibility__pb2.BasicEligibilityRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.MemberList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckEmployerEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/CheckEmployerEligibility',
            maven__schemas_dot_eligibility__pb2.EmployerEligibilityRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.Member.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckHealthPlanEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/CheckHealthPlanEligibility',
            maven__schemas_dot_eligibility__pb2.HealthPlanEligibilityRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.Member.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMemberById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetMemberById',
            maven__schemas_dot_eligibility__pb2.MemberIdRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.Member.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMemberByOrgIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetMemberByOrgIdentity',
            maven__schemas_dot_eligibility__pb2.OrgIdentityRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.Member.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWalletEnablementById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetWalletEnablementById',
            maven__schemas_dot_eligibility__pb2.MemberIdRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.WalletEnablement.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWalletEnablementByOrgIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetWalletEnablementByOrgIdentity',
            maven__schemas_dot_eligibility__pb2.OrgIdentityRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.WalletEnablement.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWalletEnablementByUserId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetWalletEnablementByUserId',
            maven__schemas_dot_eligibility__pb2.UserIdRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.WalletEnablement.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVerificationForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetVerificationForUser',
            maven__schemas_dot_eligibility__pb2.GetVerificationForUserRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.VerificationForUser.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllVerificationsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetAllVerificationsForUser',
            maven__schemas_dot_eligibility__pb2.GetAllVerificationsForUserRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.VerificationList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateVerificationForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/CreateVerificationForUser',
            maven__schemas_dot_eligibility__pb2.CreateVerificationForUserRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.VerificationForUser.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMultipleVerificationsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/CreateMultipleVerificationsForUser',
            maven__schemas_dot_eligibility__pb2.CreateMultipleVerificationsForUserRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.VerificationList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateFailedVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/CreateFailedVerification',
            maven__schemas_dot_eligibility__pb2.CreateFailedVerificationRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.VerificationAttempt.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEligibleFeaturesForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetEligibleFeaturesForUser',
            maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEligibleFeaturesForUserAndOrg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetEligibleFeaturesForUserAndOrg',
            maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserAndOrgRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesForUserAndOrgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEligibleFeaturesBySubPopulationId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetEligibleFeaturesBySubPopulationId',
            maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesBySubPopulationIdRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.GetEligibleFeaturesBySubPopulationIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSubPopulationIdForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetSubPopulationIdForUser',
            maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSubPopulationIdForUserAndOrg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetSubPopulationIdForUserAndOrg',
            maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserAndOrgRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.GetSubPopulationIdForUserAndOrgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOtherUserIdsInFamily(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/GetOtherUserIdsInFamily',
            maven__schemas_dot_eligibility__pb2.GetOtherUserIdsInFamilyRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.GetOtherUserIdsInFamilyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeactivateVerificationForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maven.eligibility.EligibilityService/DeactivateVerificationForUser',
            maven__schemas_dot_eligibility__pb2.DeactivateVerificationForUserRequest.SerializeToString,
            maven__schemas_dot_eligibility__pb2.DeactivateVerificationForUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
