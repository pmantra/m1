# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: maven-schemas/eligibility.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.client
import grpclib.const

if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import maven_schemas.eligibility_pb2


class EligibilityServiceBase(abc.ABC):
    @abc.abstractmethod
    async def CheckStandardEligibility(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.StandardEligibilityRequest, maven_schemas.eligibility_pb2.Member]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def CheckAlternateEligibility(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.AlternateEligibilityRequest, maven_schemas.eligibility_pb2.Member]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def CheckEligibilityOverEligibility(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.EligibilityOverEligibilityRequest, maven_schemas.eligibility_pb2.MemberList]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def CheckClientSpecificEligibility(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.ClientSpecificEligibilityRequest, maven_schemas.eligibility_pb2.Member]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def CheckNoDOBEligibility(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.NoDOBEligibilityRequest, maven_schemas.eligibility_pb2.Member]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def CheckBasicEligibility(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.BasicEligibilityRequest, maven_schemas.eligibility_pb2.MemberList]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def CheckEmployerEligibility(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.EmployerEligibilityRequest, maven_schemas.eligibility_pb2.Member]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def CheckHealthPlanEligibility(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.HealthPlanEligibilityRequest, maven_schemas.eligibility_pb2.Member]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetMemberById(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.MemberIdRequest, maven_schemas.eligibility_pb2.Member]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetMemberByOrgIdentity(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.OrgIdentityRequest, maven_schemas.eligibility_pb2.Member]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetWalletEnablementById(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.MemberIdRequest, maven_schemas.eligibility_pb2.WalletEnablement]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetWalletEnablementByOrgIdentity(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.OrgIdentityRequest, maven_schemas.eligibility_pb2.WalletEnablement]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetWalletEnablementByUserId(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.UserIdRequest, maven_schemas.eligibility_pb2.WalletEnablement]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetVerificationForUser(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.GetVerificationForUserRequest, maven_schemas.eligibility_pb2.VerificationForUser]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetAllVerificationsForUser(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.GetAllVerificationsForUserRequest, maven_schemas.eligibility_pb2.VerificationList]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def CreateVerificationForUser(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.CreateVerificationForUserRequest, maven_schemas.eligibility_pb2.VerificationForUser]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def CreateMultipleVerificationsForUser(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.CreateMultipleVerificationsForUserRequest, maven_schemas.eligibility_pb2.VerificationList]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def CreateFailedVerification(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.CreateFailedVerificationRequest, maven_schemas.eligibility_pb2.VerificationAttempt]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetEligibleFeaturesForUser(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserRequest, maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetEligibleFeaturesForUserAndOrg(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserAndOrgRequest, maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserAndOrgResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetEligibleFeaturesBySubPopulationId(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.GetEligibleFeaturesBySubPopulationIdRequest, maven_schemas.eligibility_pb2.GetEligibleFeaturesBySubPopulationIdResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetSubPopulationIdForUser(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.GetSubPopulationIdForUserRequest, maven_schemas.eligibility_pb2.GetSubPopulationIdForUserResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetSubPopulationIdForUserAndOrg(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.GetSubPopulationIdForUserAndOrgRequest, maven_schemas.eligibility_pb2.GetSubPopulationIdForUserAndOrgResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetOtherUserIdsInFamily(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.GetOtherUserIdsInFamilyRequest, maven_schemas.eligibility_pb2.GetOtherUserIdsInFamilyResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def DeactivateVerificationForUser(
        self,
        stream: "grpclib.server.Stream[maven_schemas.eligibility_pb2.DeactivateVerificationForUserRequest, maven_schemas.eligibility_pb2.DeactivateVerificationForUserResponse]",
    ) -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            "/maven.eligibility.EligibilityService/CheckStandardEligibility": grpclib.const.Handler(
                self.CheckStandardEligibility,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.StandardEligibilityRequest,
                maven_schemas.eligibility_pb2.Member,
            ),
            "/maven.eligibility.EligibilityService/CheckAlternateEligibility": grpclib.const.Handler(
                self.CheckAlternateEligibility,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.AlternateEligibilityRequest,
                maven_schemas.eligibility_pb2.Member,
            ),
            "/maven.eligibility.EligibilityService/CheckEligibilityOverEligibility": grpclib.const.Handler(
                self.CheckEligibilityOverEligibility,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.EligibilityOverEligibilityRequest,
                maven_schemas.eligibility_pb2.MemberList,
            ),
            "/maven.eligibility.EligibilityService/CheckClientSpecificEligibility": grpclib.const.Handler(
                self.CheckClientSpecificEligibility,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.ClientSpecificEligibilityRequest,
                maven_schemas.eligibility_pb2.Member,
            ),
            "/maven.eligibility.EligibilityService/CheckNoDOBEligibility": grpclib.const.Handler(
                self.CheckNoDOBEligibility,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.NoDOBEligibilityRequest,
                maven_schemas.eligibility_pb2.Member,
            ),
            "/maven.eligibility.EligibilityService/CheckBasicEligibility": grpclib.const.Handler(
                self.CheckBasicEligibility,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.BasicEligibilityRequest,
                maven_schemas.eligibility_pb2.MemberList,
            ),
            "/maven.eligibility.EligibilityService/CheckEmployerEligibility": grpclib.const.Handler(
                self.CheckEmployerEligibility,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.EmployerEligibilityRequest,
                maven_schemas.eligibility_pb2.Member,
            ),
            "/maven.eligibility.EligibilityService/CheckHealthPlanEligibility": grpclib.const.Handler(
                self.CheckHealthPlanEligibility,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.HealthPlanEligibilityRequest,
                maven_schemas.eligibility_pb2.Member,
            ),
            "/maven.eligibility.EligibilityService/GetMemberById": grpclib.const.Handler(
                self.GetMemberById,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.MemberIdRequest,
                maven_schemas.eligibility_pb2.Member,
            ),
            "/maven.eligibility.EligibilityService/GetMemberByOrgIdentity": grpclib.const.Handler(
                self.GetMemberByOrgIdentity,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.OrgIdentityRequest,
                maven_schemas.eligibility_pb2.Member,
            ),
            "/maven.eligibility.EligibilityService/GetWalletEnablementById": grpclib.const.Handler(
                self.GetWalletEnablementById,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.MemberIdRequest,
                maven_schemas.eligibility_pb2.WalletEnablement,
            ),
            "/maven.eligibility.EligibilityService/GetWalletEnablementByOrgIdentity": grpclib.const.Handler(
                self.GetWalletEnablementByOrgIdentity,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.OrgIdentityRequest,
                maven_schemas.eligibility_pb2.WalletEnablement,
            ),
            "/maven.eligibility.EligibilityService/GetWalletEnablementByUserId": grpclib.const.Handler(
                self.GetWalletEnablementByUserId,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.UserIdRequest,
                maven_schemas.eligibility_pb2.WalletEnablement,
            ),
            "/maven.eligibility.EligibilityService/GetVerificationForUser": grpclib.const.Handler(
                self.GetVerificationForUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.GetVerificationForUserRequest,
                maven_schemas.eligibility_pb2.VerificationForUser,
            ),
            "/maven.eligibility.EligibilityService/GetAllVerificationsForUser": grpclib.const.Handler(
                self.GetAllVerificationsForUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.GetAllVerificationsForUserRequest,
                maven_schemas.eligibility_pb2.VerificationList,
            ),
            "/maven.eligibility.EligibilityService/CreateVerificationForUser": grpclib.const.Handler(
                self.CreateVerificationForUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.CreateVerificationForUserRequest,
                maven_schemas.eligibility_pb2.VerificationForUser,
            ),
            "/maven.eligibility.EligibilityService/CreateMultipleVerificationsForUser": grpclib.const.Handler(
                self.CreateMultipleVerificationsForUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.CreateMultipleVerificationsForUserRequest,
                maven_schemas.eligibility_pb2.VerificationList,
            ),
            "/maven.eligibility.EligibilityService/CreateFailedVerification": grpclib.const.Handler(
                self.CreateFailedVerification,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.CreateFailedVerificationRequest,
                maven_schemas.eligibility_pb2.VerificationAttempt,
            ),
            "/maven.eligibility.EligibilityService/GetEligibleFeaturesForUser": grpclib.const.Handler(
                self.GetEligibleFeaturesForUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserRequest,
                maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserResponse,
            ),
            "/maven.eligibility.EligibilityService/GetEligibleFeaturesForUserAndOrg": grpclib.const.Handler(
                self.GetEligibleFeaturesForUserAndOrg,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserAndOrgRequest,
                maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserAndOrgResponse,
            ),
            "/maven.eligibility.EligibilityService/GetEligibleFeaturesBySubPopulationId": grpclib.const.Handler(
                self.GetEligibleFeaturesBySubPopulationId,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.GetEligibleFeaturesBySubPopulationIdRequest,
                maven_schemas.eligibility_pb2.GetEligibleFeaturesBySubPopulationIdResponse,
            ),
            "/maven.eligibility.EligibilityService/GetSubPopulationIdForUser": grpclib.const.Handler(
                self.GetSubPopulationIdForUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.GetSubPopulationIdForUserRequest,
                maven_schemas.eligibility_pb2.GetSubPopulationIdForUserResponse,
            ),
            "/maven.eligibility.EligibilityService/GetSubPopulationIdForUserAndOrg": grpclib.const.Handler(
                self.GetSubPopulationIdForUserAndOrg,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.GetSubPopulationIdForUserAndOrgRequest,
                maven_schemas.eligibility_pb2.GetSubPopulationIdForUserAndOrgResponse,
            ),
            "/maven.eligibility.EligibilityService/GetOtherUserIdsInFamily": grpclib.const.Handler(
                self.GetOtherUserIdsInFamily,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.GetOtherUserIdsInFamilyRequest,
                maven_schemas.eligibility_pb2.GetOtherUserIdsInFamilyResponse,
            ),
            "/maven.eligibility.EligibilityService/DeactivateVerificationForUser": grpclib.const.Handler(
                self.DeactivateVerificationForUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                maven_schemas.eligibility_pb2.DeactivateVerificationForUserRequest,
                maven_schemas.eligibility_pb2.DeactivateVerificationForUserResponse,
            ),
        }


class EligibilityServiceStub:
    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CheckStandardEligibility = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/CheckStandardEligibility",
            maven_schemas.eligibility_pb2.StandardEligibilityRequest,
            maven_schemas.eligibility_pb2.Member,
        )
        self.CheckAlternateEligibility = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/CheckAlternateEligibility",
            maven_schemas.eligibility_pb2.AlternateEligibilityRequest,
            maven_schemas.eligibility_pb2.Member,
        )
        self.CheckEligibilityOverEligibility = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/CheckEligibilityOverEligibility",
            maven_schemas.eligibility_pb2.EligibilityOverEligibilityRequest,
            maven_schemas.eligibility_pb2.MemberList,
        )
        self.CheckClientSpecificEligibility = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/CheckClientSpecificEligibility",
            maven_schemas.eligibility_pb2.ClientSpecificEligibilityRequest,
            maven_schemas.eligibility_pb2.Member,
        )
        self.CheckNoDOBEligibility = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/CheckNoDOBEligibility",
            maven_schemas.eligibility_pb2.NoDOBEligibilityRequest,
            maven_schemas.eligibility_pb2.Member,
        )
        self.CheckBasicEligibility = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/CheckBasicEligibility",
            maven_schemas.eligibility_pb2.BasicEligibilityRequest,
            maven_schemas.eligibility_pb2.MemberList,
        )
        self.CheckEmployerEligibility = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/CheckEmployerEligibility",
            maven_schemas.eligibility_pb2.EmployerEligibilityRequest,
            maven_schemas.eligibility_pb2.Member,
        )
        self.CheckHealthPlanEligibility = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/CheckHealthPlanEligibility",
            maven_schemas.eligibility_pb2.HealthPlanEligibilityRequest,
            maven_schemas.eligibility_pb2.Member,
        )
        self.GetMemberById = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetMemberById",
            maven_schemas.eligibility_pb2.MemberIdRequest,
            maven_schemas.eligibility_pb2.Member,
        )
        self.GetMemberByOrgIdentity = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetMemberByOrgIdentity",
            maven_schemas.eligibility_pb2.OrgIdentityRequest,
            maven_schemas.eligibility_pb2.Member,
        )
        self.GetWalletEnablementById = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetWalletEnablementById",
            maven_schemas.eligibility_pb2.MemberIdRequest,
            maven_schemas.eligibility_pb2.WalletEnablement,
        )
        self.GetWalletEnablementByOrgIdentity = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetWalletEnablementByOrgIdentity",
            maven_schemas.eligibility_pb2.OrgIdentityRequest,
            maven_schemas.eligibility_pb2.WalletEnablement,
        )
        self.GetWalletEnablementByUserId = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetWalletEnablementByUserId",
            maven_schemas.eligibility_pb2.UserIdRequest,
            maven_schemas.eligibility_pb2.WalletEnablement,
        )
        self.GetVerificationForUser = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetVerificationForUser",
            maven_schemas.eligibility_pb2.GetVerificationForUserRequest,
            maven_schemas.eligibility_pb2.VerificationForUser,
        )
        self.GetAllVerificationsForUser = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetAllVerificationsForUser",
            maven_schemas.eligibility_pb2.GetAllVerificationsForUserRequest,
            maven_schemas.eligibility_pb2.VerificationList,
        )
        self.CreateVerificationForUser = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/CreateVerificationForUser",
            maven_schemas.eligibility_pb2.CreateVerificationForUserRequest,
            maven_schemas.eligibility_pb2.VerificationForUser,
        )
        self.CreateMultipleVerificationsForUser = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/CreateMultipleVerificationsForUser",
            maven_schemas.eligibility_pb2.CreateMultipleVerificationsForUserRequest,
            maven_schemas.eligibility_pb2.VerificationList,
        )
        self.CreateFailedVerification = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/CreateFailedVerification",
            maven_schemas.eligibility_pb2.CreateFailedVerificationRequest,
            maven_schemas.eligibility_pb2.VerificationAttempt,
        )
        self.GetEligibleFeaturesForUser = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetEligibleFeaturesForUser",
            maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserRequest,
            maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserResponse,
        )
        self.GetEligibleFeaturesForUserAndOrg = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetEligibleFeaturesForUserAndOrg",
            maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserAndOrgRequest,
            maven_schemas.eligibility_pb2.GetEligibleFeaturesForUserAndOrgResponse,
        )
        self.GetEligibleFeaturesBySubPopulationId = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetEligibleFeaturesBySubPopulationId",
            maven_schemas.eligibility_pb2.GetEligibleFeaturesBySubPopulationIdRequest,
            maven_schemas.eligibility_pb2.GetEligibleFeaturesBySubPopulationIdResponse,
        )
        self.GetSubPopulationIdForUser = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetSubPopulationIdForUser",
            maven_schemas.eligibility_pb2.GetSubPopulationIdForUserRequest,
            maven_schemas.eligibility_pb2.GetSubPopulationIdForUserResponse,
        )
        self.GetSubPopulationIdForUserAndOrg = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetSubPopulationIdForUserAndOrg",
            maven_schemas.eligibility_pb2.GetSubPopulationIdForUserAndOrgRequest,
            maven_schemas.eligibility_pb2.GetSubPopulationIdForUserAndOrgResponse,
        )
        self.GetOtherUserIdsInFamily = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/GetOtherUserIdsInFamily",
            maven_schemas.eligibility_pb2.GetOtherUserIdsInFamilyRequest,
            maven_schemas.eligibility_pb2.GetOtherUserIdsInFamilyResponse,
        )
        self.DeactivateVerificationForUser = grpclib.client.UnaryUnaryMethod(
            channel,
            "/maven.eligibility.EligibilityService/DeactivateVerificationForUser",
            maven_schemas.eligibility_pb2.DeactivateVerificationForUserRequest,
            maven_schemas.eligibility_pb2.DeactivateVerificationForUserResponse,
        )
